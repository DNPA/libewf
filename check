Making check in include
make[1]: Entering directory `/home/lordyesta/Projects/libewf/include'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/include'
Making check in common
make[1]: Entering directory `/home/lordyesta/Projects/libewf/common'
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/common'
Making check in libcstring
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libcstring'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libcstring'
Making check in liberror
make[1]: Entering directory `/home/lordyesta/Projects/libewf/liberror'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/liberror'
Making check in libnotify
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libnotify'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libnotify'
Making check in libuna
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libuna'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libuna'
Making check in libbfio
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libbfio'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libbfio'
Making check in libmfdata
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libmfdata'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libmfdata'
Making check in libfvalue
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libfvalue'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libfvalue'
Making check in libewf
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libewf'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libewf'
Making check in libhmac
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libhmac'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libhmac'
Making check in libodraw
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libodraw'
make  check-am
make[2]: Entering directory `/home/lordyesta/Projects/libewf/libodraw'
make[2]: Nothing to be done for `check-am'.
make[2]: Leaving directory `/home/lordyesta/Projects/libewf/libodraw'
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libodraw'
Making check in libsmdev
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libsmdev'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libsmdev'
Making check in libsmraw
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libsmraw'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libsmraw'
Making check in libsystem
make[1]: Entering directory `/home/lordyesta/Projects/libewf/libsystem'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/libsystem'
Making check in ewftools
make[1]: Entering directory `/home/lordyesta/Projects/libewf/ewftools'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/ewftools'
Making check in ewf.net
make[1]: Entering directory `/home/lordyesta/Projects/libewf/ewf.net'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/ewf.net'
Making check in pyewf
make[1]: Entering directory `/home/lordyesta/Projects/libewf/pyewf'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/pyewf'
Making check in po
make[1]: Entering directory `/home/lordyesta/Projects/libewf/po'
make libewf.pot-update
make[2]: Entering directory `/home/lordyesta/Projects/libewf/po'
if LC_ALL=C grep 'GNU libewf' ../* 2>/dev/null | grep -v 'libtool:' >/dev/null; then \
  package_gnu='GNU '; \
else \
  package_gnu=''; \
fi; \
if test -n 'jbmetz@users.sourceforge.net' || test 'jbmetz@users.sourceforge.net' = '@'PACKAGE_BUGREPORT'@'; then \
  msgid_bugs_address='jbmetz@users.sourceforge.net'; \
else \
  msgid_bugs_address='jbmetz@users.sourceforge.net'; \
fi; \
case `/usr/bin/xgettext --version | sed 1q | sed -e 's,^[^0-9]*,,'` in \
  '' | 0.[0-9] | 0.[0-9].* | 0.1[0-5] | 0.1[0-5].* | 0.16 | 0.16.[0-1]*) \
    /usr/bin/xgettext --default-domain=libewf --directory=.. \
      --add-comments=TRANSLATORS: --keyword=_ --keyword=N_  \
      --files-from=./POTFILES.in \
      --copyright-holder='Joachim Metz' \
      --msgid-bugs-address="$msgid_bugs_address" \
    ;; \
  *) \
    /usr/bin/xgettext --default-domain=libewf --directory=.. \
      --add-comments=TRANSLATORS: --keyword=_ --keyword=N_  \
      --files-from=./POTFILES.in \
      --copyright-holder='Joachim Metz' \
      --package-name="${package_gnu}libewf" \
      --package-version='20111031' \
      --msgid-bugs-address="$msgid_bugs_address" \
    ;; \
esac
test ! -f libewf.po || { \
  if test -f ./libewf.pot; then \
    sed -f remove-potcdate.sed < ./libewf.pot > libewf.1po && \
    sed -f remove-potcdate.sed < libewf.po > libewf.2po && \
    if cmp libewf.1po libewf.2po >/dev/null 2>&1; then \
      rm -f libewf.1po libewf.2po libewf.po; \
    else \
      rm -f libewf.1po libewf.2po ./libewf.pot && \
      mv libewf.po ./libewf.pot; \
    fi; \
  else \
    mv libewf.po ./libewf.pot; \
  fi; \
}
make[2]: Leaving directory `/home/lordyesta/Projects/libewf/po'
test ! -f ./libewf.pot || \
  test -z "" || make 
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/po'
Making check in documents
make[1]: Entering directory `/home/lordyesta/Projects/libewf/documents'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/documents'
Making check in manuals
make[1]: Entering directory `/home/lordyesta/Projects/libewf/manuals'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/manuals'
Making check in tests
make[1]: Entering directory `/home/lordyesta/Projects/libewf/tests'
make  ewf_test_glob ewf_test_read ewf_test_read_write ewf_test_read_write_delta ewf_test_seek ewf_test_truncate ewf_test_write ewf_test_write_chunk test_ewfacquire.sh test_ewfacquire_optical.sh test_ewfacquire_resume.sh test_ewfacquirestream.sh test_ewfinfo.sh test_ewfexport.sh test_ewfexport_logical.sh test_ewfverify.sh test_ewfverify_logical.sh test_glob.sh test_pyewf.sh test_read.sh test_read_write.sh test_read_write_delta.sh test_seek.sh test_write.sh
make[2]: Entering directory `/home/lordyesta/Projects/libewf/tests'
make[2]: `ewf_test_glob' is up to date.
make[2]: `ewf_test_read' is up to date.
make[2]: `ewf_test_read_write' is up to date.
make[2]: `ewf_test_read_write_delta' is up to date.
make[2]: `ewf_test_seek' is up to date.
make[2]: `ewf_test_truncate' is up to date.
make[2]: `ewf_test_write' is up to date.
make[2]: `ewf_test_write_chunk' is up to date.
make[2]: Nothing to be done for `test_ewfacquire.sh'.
make[2]: Nothing to be done for `test_ewfacquire_optical.sh'.
make[2]: Nothing to be done for `test_ewfacquire_resume.sh'.
make[2]: Nothing to be done for `test_ewfacquirestream.sh'.
make[2]: Nothing to be done for `test_ewfinfo.sh'.
make[2]: Nothing to be done for `test_ewfexport.sh'.
make[2]: Nothing to be done for `test_ewfexport_logical.sh'.
make[2]: Nothing to be done for `test_ewfverify.sh'.
make[2]: Nothing to be done for `test_ewfverify_logical.sh'.
make[2]: Nothing to be done for `test_glob.sh'.
make[2]: Nothing to be done for `test_pyewf.sh'.
make[2]: Nothing to be done for `test_read.sh'.
make[2]: Nothing to be done for `test_read_write.sh'.
make[2]: Nothing to be done for `test_read_write_delta.sh'.
make[2]: Nothing to be done for `test_seek.sh'.
make[2]: Nothing to be done for `test_write.sh'.
make[2]: Leaving directory `/home/lordyesta/Projects/libewf/tests'
make  check-TESTS
make[2]: Entering directory `/home/lordyesta/Projects/libewf/tests'
Testing glob: for basename: PREFIX.e01 and schema: .e01  (PASS)
Testing glob: for basename: PREFIX.e01 and schema: .e01  (PASS)
Testing glob: for basename: PREFIX.e01 and schema: .e01  (PASS)
Testing glob: for basename: PREFIX.e01 and schema: .e01  (PASS)
Testing glob: for basename: PREFIX.e01 and schema: .e01  (PASS)
Testing glob: for basename: PREFIX.s01 and schema: .s01  (PASS)
Testing glob: for basename: PREFIX.s01 and schema: .s01  (PASS)
Testing glob: for basename: PREFIX.s01 and schema: .s01  (PASS)
Testing glob: for basename: PREFIX.s01 and schema: .s01  (PASS)
Testing glob: for basename: PREFIX.s01 and schema: .s01  (PASS)
Testing glob: for basename: PREFIX.E01 and schema: .E01  (PASS)
Testing glob: for basename: PREFIX.E01 and schema: .E01  (PASS)
Testing glob: for basename: PREFIX.E01 and schema: .E01  (PASS)
Testing glob: for basename: PREFIX.E01 and schema: .E01  (PASS)
Testing glob: for basename: PREFIX.E01 and schema: .E01  (PASS)
Testing glob: for basename: PREFIX.L01 and schema: .L01  (PASS)
Testing glob: for basename: PREFIX.L01 and schema: .L01  (PASS)
Testing glob: for basename: PREFIX.L01 and schema: .L01  (PASS)
Testing glob: for basename: PREFIX.L01 and schema: .L01  (PASS)
Testing glob: for basename: PREFIX.L01 and schema: .L01  (PASS)
PASS: test_glob.sh
Testing seek offset of input: input/floppy-encase1.99l-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase2.17a-compression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase2.17a-compression-password.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase2.17a-nocompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase2.17a-nocompression-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase2.17a-nocompression-password.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase3.21b-bestcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase3.21b-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase3.21b-nocompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase3.21b-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase3.21b-password.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase3.21b-password-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-bestcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-nocompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-password-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-password-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase4.22-pasword.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-bestcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-bs128-e128.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-bs128-e64.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-nocompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-password.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-password-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-password-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase5.04a-split.E01 input/floppy-encase5.04a-split.E02
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.12-md5_sha1.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.12-sha1.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-bestcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-bs128eg128.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-bs128eg64.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-goodcompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-nocompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-password.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-encase6.1-split.E01 input/floppy-encase6.1-split.E02
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-ftk-imager.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen5.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen5-compression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen5-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-bs128eg128.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-bs128eg64.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-compression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-nocompression.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-nohash.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-password.E01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/floppy-linen6.01-split.E01 input/floppy-linen6.01-split.E02
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/ftk_imager_smart_best_compression.s01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/ftk_imager_smart_fast_compression.s01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/ftk_imager_smart_no_compression.s01
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

Testing seek offset of input: input/ftk_imager_smart_split.s01 input/ftk_imager_smart_split.s02
Testing seek of offset: 0 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1474560 and whence: SEEK_SET	(PASS)
Testing seek of offset: 294912 and whence: SEEK_SET	(PASS)
Testing seek of offset: 1475547 and whence: SEEK_SET	(PASS)
Testing seek of offset: -987 and whence: SEEK_SET	(PASS)
Testing seek of offset: 0 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -1475547 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 491520 and whence: SEEK_CUR	(PASS)
Testing seek of offset: -983040 and whence: SEEK_CUR	(PASS)
Testing seek of offset: 0 and whence: SEEK_END	(PASS)
Testing seek of offset: -1474560 and whence: SEEK_END	(PASS)
Testing seek of offset: -368640 and whence: SEEK_END	(PASS)
Testing seek of offset: 542 and whence: SEEK_END	(PASS)
Testing seek of offset: -1475102 and whence: SEEK_END	(PASS)
Testing seek of offset: 0 and whence: UNKNOWN	(PASS)

PASS: test_seek.sh
Testing read of input: input/floppy-encase1.99l-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase2.17a-compression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase2.17a-compression-password.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase2.17a-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase2.17a-nocompression-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase2.17a-nocompression-password.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase3.21b-bestcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase3.21b-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase3.21b-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase3.21b-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase3.21b-password.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase3.21b-password-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-bestcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-password-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-password-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase4.22-pasword.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-bestcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-bs128-e128.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read of input: input/floppy-encase5.04a-bs128-e64.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read of input: input/floppy-encase5.04a-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-password.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-password-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-password-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase5.04a-split.E01 input/floppy-encase5.04a-split.E02
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.12-md5_sha1.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.12-sha1.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.1-bestcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.1-bs128eg128.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read of input: input/floppy-encase6.1-bs128eg64.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read of input: input/floppy-encase6.1-goodcompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.1-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.1-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.1-password.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-encase6.1-split.E01 input/floppy-encase6.1-split.E02
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-ftk-imager.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen5.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen5-compression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen5-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen6.01-bs128eg128.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read of input: input/floppy-linen6.01-bs128eg64.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read of input: input/floppy-linen6.01-compression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen6.01-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen6.01-nohash.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen6.01-password.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/floppy-linen6.01-split.E01 input/floppy-linen6.01-split.E02
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/ftk_imager_smart_best_compression.s01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/ftk_imager_smart_fast_compression.s01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/ftk_imager_smart_no_compression.s01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input/ftk_imager_smart_split.s01 input/ftk_imager_smart_split.s02
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read of input: input_delta/floppy-encase5.04a-nocompression.d01 input_delta/floppy-encase5.04a-nocompression.E01
Media size: 1474560 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

PASS: test_read.sh
Testing write with media size: 0, maximum segment size: 0 and compression level: none  (PASS)
Testing write with media size: 0, maximum segment size: 10000 and compression level: none  (PASS)
Testing write with media size: 100000, maximum segment size: 0 and compression level: none  (PASS)
Testing write with media size: 100000, maximum segment size: 10000 and compression level: none  (PASS)

Testing write chunk with media size: 0, maximum segment size: 0 and compression level: none  (PASS)
Testing write chunk with media size: 0, maximum segment size: 10000 and compression level: none  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 0 and compression level: none  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 10000 and compression level: none  (PASS)

Testing write with media size: 0, maximum segment size: 0 and compression level: empty-block  (PASS)
Testing write with media size: 0, maximum segment size: 10000 and compression level: empty-block  (PASS)
Testing write with media size: 100000, maximum segment size: 0 and compression level: empty-block  (PASS)
Testing write with media size: 100000, maximum segment size: 10000 and compression level: empty-block  (PASS)

Testing write chunk with media size: 0, maximum segment size: 0 and compression level: empty-block  (PASS)
Testing write chunk with media size: 0, maximum segment size: 10000 and compression level: empty-block  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 0 and compression level: empty-block  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 10000 and compression level: empty-block  (PASS)

Testing write with media size: 0, maximum segment size: 0 and compression level: fast  (PASS)
Testing write with media size: 0, maximum segment size: 10000 and compression level: fast  (PASS)
Testing write with media size: 100000, maximum segment size: 0 and compression level: fast  (PASS)
Testing write with media size: 100000, maximum segment size: 10000 and compression level: fast  (PASS)

Testing write chunk with media size: 0, maximum segment size: 0 and compression level: fast  (PASS)
Testing write chunk with media size: 0, maximum segment size: 10000 and compression level: fast  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 0 and compression level: fast  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 10000 and compression level: fast  (PASS)

Testing write with media size: 0, maximum segment size: 0 and compression level: best  (PASS)
Testing write with media size: 0, maximum segment size: 10000 and compression level: best  (PASS)
Testing write with media size: 100000, maximum segment size: 0 and compression level: best  (PASS)
Testing write with media size: 100000, maximum segment size: 10000 and compression level: best  (PASS)

Testing write chunk with media size: 0, maximum segment size: 0 and compression level: best  (PASS)
Testing write chunk with media size: 0, maximum segment size: 10000 and compression level: best  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 0 and compression level: best  (PASS)
Testing write chunk with media size: 100000, maximum segment size: 10000 and compression level: best  (PASS)

PASS: test_write.sh
Testing read/write of input: input/floppy-encase1.99l-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase2.17a-compression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase2.17a-compression-password.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase2.17a-nocompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase2.17a-nocompression-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase2.17a-nocompression-password.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase3.21b-bestcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase3.21b-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase3.21b-nocompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase3.21b-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase3.21b-password.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase3.21b-password-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-bestcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-nocompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-password-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-password-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase4.22-pasword.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-bestcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-bs128-e128.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read/write of input: input/floppy-encase5.04a-bs128-e64.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read/write of input: input/floppy-encase5.04a-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-nocompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-password.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-password-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-password-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase5.04a-split.E01 input/floppy-encase5.04a-split.E02
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.12-md5_sha1.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.12-sha1.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.1-bestcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.1-bs128eg128.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read/write of input: input/floppy-encase6.1-bs128eg64.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read/write of input: input/floppy-encase6.1-goodcompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.1-nocompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.1-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.1-password.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-encase6.1-split.E01 input/floppy-encase6.1-split.E02
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-ftk-imager.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen5.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen5-compression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen5-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen6.01-bs128eg128.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read/write of input: input/floppy-linen6.01-bs128eg64.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 65536 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 786432	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 65536	(PASS)

Testing read/write of input: input/floppy-linen6.01-compression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen6.01-nocompression.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen6.01-nohash.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen6.01-password.E01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/floppy-linen6.01-split.E01 input/floppy-linen6.01-split.E02
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/ftk_imager_smart_best_compression.s01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/ftk_imager_smart_fast_compression.s01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/ftk_imager_smart_no_compression.s01
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

Testing read/write of input: input/ftk_imager_smart_split.s01 input/ftk_imager_smart_split.s02
Media size: 1474560 bytes
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 210651, whence: SEEK_SET and size: 737280	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)
Testing reading and writing range with offset: 1473536, whence: SEEK_SET and size: 4096	(PASS)

Chunk size: 32768 bytes
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 0, whence: SEEK_SET and size: 1474560	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 196608, whence: SEEK_SET and size: 753664	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)
Testing reading range and writing with offset: 1473536, whence: SEEK_SET and size: 32768	(PASS)

PASS: test_read_write.sh
Testing read/write with offset: 0 and size: 100000 and compression level: none  (PASS)
Testing read/write with offset: 512 and size: 512 and compression level: none  (PASS)
Testing read/write with offset: 32512 and size: 512 and compression level: none  (PASS)
Testing read/write with offset: 32512 and size: 40000 and compression level: none  (PASS)
Testing read/write with offset: 0 and size: 100000 and compression level: empty-block  (PASS)
Testing read/write with offset: 512 and size: 512 and compression level: empty-block  (PASS)
Testing read/write with offset: 32512 and size: 512 and compression level: empty-block  (PASS)
Testing read/write with offset: 32512 and size: 40000 and compression level: empty-block  (PASS)
Testing read/write with offset: 0 and size: 100000 and compression level: fast  (PASS)
Testing read/write with offset: 512 and size: 512 and compression level: fast  (PASS)
Testing read/write with offset: 32512 and size: 512 and compression level: fast  (PASS)
Testing read/write with offset: 32512 and size: 40000 and compression level: fast  (PASS)
Testing read/write with offset: 0 and size: 100000 and compression level: best  (PASS)
Testing read/write with offset: 512 and size: 512 and compression level: best  (PASS)
Testing read/write with offset: 32512 and size: 512 and compression level: best  (PASS)
Testing read/write with offset: 32512 and size: 40000 and compression level: best  (PASS)
PASS: test_read_write_delta.sh
ewfverify 20111031


MD5 hash stored in file:		f4bf6b6508940f4347bfe66d864d5c41
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		a16bc5ad203a3e9440dfc5dba483297a
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		a16bc5ad203a3e9440dfc5dba483297a
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		a16bc5ad203a3e9440dfc5dba483297a
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		a16bc5ad203a3e9440dfc5dba483297a
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		5c174bf289e5a0eaddef719c5959affc1dff8d23
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		5c174bf289e5a0eaddef719c5959affc1dff8d23
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-password.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-encase6.1-split.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-ftk-imager.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen5-compression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen5.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen5-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		N/A
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-password.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		1801744843f566c62a6045c926651af7
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23

ewfverify: SUCCESS

Testing ewfverify of input: input/floppy-linen6.01-split.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		7ac506e0f6aaeb94c17216ad78cfdcd2
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b

ewfverify: SUCCESS

Testing ewfverify of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		7ac506e0f6aaeb94c17216ad78cfdcd2
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b

ewfverify: SUCCESS

Testing ewfverify of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		7ac506e0f6aaeb94c17216ad78cfdcd2
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b

ewfverify: SUCCESS

Testing ewfverify of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		7ac506e0f6aaeb94c17216ad78cfdcd2
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b

ewfverify: SUCCESS

Testing ewfverify of input: input/ftk_imager_smart_split.s01  (PASS)
ewfverify 20111031

Unable to open EWF image file(s).
libewf_section_start_read: mismatch in next section offset (stored: 1052591, calculated: 2031).
libewf_handle_open_read_segment_files: unable to read section start.
libewf_handle_open_file_io_pool: unable to read segment files.
libewf_handle_open: unable to open handle using a file IO pool.
verification_handle_open_input: unable to open files.

Testing ewfverify of input: input_error/dual-ewf.E01  (FAIL)
ewfverify 20111031


Sector validation errors:
	total number: 1
	at sector(s): 0 - 191 (number: 192) in segment file(s): input_error/floppy-checksum-errors1.E01

MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		04e3471f3415c06c79847bcf9343bcc3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		768881ca44c21b2f3cee55e2f6fb1f926adf751a

Unable to verify input.
ewfverify: FAILURE

Testing ewfverify of input: input_error/floppy-checksum-errors1.E01  (FAIL)
ewfverify 20111031


Sector validation errors:
	total number: 1
	at sector(s): 0 - 63 (number: 64) in segment file(s): input_error/floppy-checksum-errors2.E01

MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		b91dcef6358772d9b5ab1b09602d3813
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		cfe0e0867d5732b7d4e6ab63b21427c972686a6d

Unable to verify input.
ewfverify: FAILURE

Testing ewfverify of input: input_error/floppy-checksum-errors2.E01  (FAIL)
ewfverify 20111031

Unable to verify input.
libewf_chunk_data_unpack: unable to decompress chunk data.
libewf_read_io_handle_read_chunk_data: unable to unpack chunk data: 0.
libewf_handle_read_buffer: unable to read chunk data: 0.
verification_handle_read_buffer: unable to read storage media buffer.
verification_handle_verify_input: unable to read data.
ewfverify: FAILURE

Testing ewfverify of input: input_error/floppy-checksum-errors3.E01  (FAIL)
ewfverify 20111031

Unable to open EWF image file(s).
libewf_section_data_read: GUID does not match.
libewf_handle_open_read_segment_files: unable to read section: data.
libewf_handle_open_file_io_pool: unable to read segment files.
libewf_handle_open: unable to open handle using a file IO pool.
verification_handle_open_input: unable to open files.

Testing ewfverify of input: input_error/floppy-split-error1.E01  (FAIL)
ewfverify 20111031


MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		da39a3ee5e6b4b0d3255bfef95601890afd80709

ewfverify: SUCCESS

Testing ewfverify of input: input_more/empty.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfverify of input: input_more/floppy-corrupted-table.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		6a9cc7be4c747a09d9d0204ccaa9c51f
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1

ewfverify: SUCCESS

Testing ewfverify of input: input_more/test_4gb_random.E01  (PASS)
ewfverify 20111031


MD5 hash stored in file:		c9a5a6878d97b48cc965c1e41859f034
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229

ewfverify: SUCCESS

Testing ewfverify of input: input_more/test_4gb_zero.E01  (PASS)
PASS: test_ewfverify.sh
ewfverify 20111031

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-bestcompression.E01
MD5 hash stored in file:		6fef2a64afbf070a264366183698bb5e
MD5 hash calculated over data:		6fef2a64afbf070a264366183698bb5e

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-goodcompression.E01
MD5 hash stored in file:		ae46b7c4574db12d849c6cb5814ef4d9
MD5 hash calculated over data:		ae46b7c4574db12d849c6cb5814ef4d9

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-nohash.E01
MD5 hash stored in file:		1bf5b5ce0ec9d59f0fc506d8c87f45f7
MD5 hash calculated over data:		1bf5b5ce0ec9d59f0fc506d8c87f45f7

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-password-goodcompression.E01
MD5 hash stored in file:		4ec89ac32f5bd6092cd6ef43dad4a57f
MD5 hash calculated over data:		4ec89ac32f5bd6092cd6ef43dad4a57f

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-password.E01
MD5 hash stored in file:		3e9e7cce5a287b92bbdb5e7fd4629bda
MD5 hash calculated over data:		3e9e7cce5a287b92bbdb5e7fd4629bda

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3.21b-nocompression.E01
MD5 hash stored in file:		0bd9de272f4ce1255ff634c678503a80
MD5 hash calculated over data:		0bd9de272f4ce1255ff634c678503a80

Single file: /targetf/EnCase4/CASE/libewf-encase4.22.Case
MD5 hash stored in file:		75cc67090a143188f8717c0d4ad047b0
MD5 hash calculated over data:		75cc67090a143188f8717c0d4ad047b0

Single file: /targetf/EnCase4/CASE/libewf-encase4.22.cbak
MD5 hash stored in file:		fc036c8b7ff5655e386131c4ba417c7c
MD5 hash calculated over data:		fc036c8b7ff5655e386131c4ba417c7c

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-bestcompression.E01
MD5 hash stored in file:		32b4d18d7917ff18a91ae04aaee5b588
MD5 hash calculated over data:		32b4d18d7917ff18a91ae04aaee5b588

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-goodcompression.E01
MD5 hash stored in file:		f2c2e4dd28715c5da233991162738d3d
MD5 hash calculated over data:		f2c2e4dd28715c5da233991162738d3d

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-nocompression.E01
MD5 hash stored in file:		b6fa11c3a3c793fa6e476b26d2ce657f
MD5 hash calculated over data:		b6fa11c3a3c793fa6e476b26d2ce657f

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-nohash.E01
MD5 hash stored in file:		abe9780a23418bb225c259e8bd4a437c
MD5 hash calculated over data:		abe9780a23418bb225c259e8bd4a437c

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-password-goodcompression.E01
MD5 hash stored in file:		1d54acfdc077e752db03a12d09ca6595
MD5 hash calculated over data:		1d54acfdc077e752db03a12d09ca6595

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-password-nohash.E01
MD5 hash stored in file:		f72ec1ffd5ba286f6a2dfb97bf15b7b4
MD5 hash calculated over data:		f72ec1ffd5ba286f6a2dfb97bf15b7b4

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-pasword.E01
MD5 hash stored in file:		b810b47da747410a14a9e42093c50bad
MD5 hash calculated over data:		b810b47da747410a14a9e42093c50bad

Single file: /targetf/EnCase4/EXPORT/REPORT.RTF
MD5 hash stored in file:		f9313db9107646dde5c12a29feb15974
MD5 hash calculated over data:		f9313db9107646dde5c12a29feb15974

Single file: /targetf/ENCASE5/CASE/libewf-encase5.04a.Case
MD5 hash stored in file:		9b9e6811bd1fbc29af6103b39dbb35ab
MD5 hash calculated over data:		9b9e6811bd1fbc29af6103b39dbb35ab

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bestcompression.E01
MD5 hash stored in file:		d26ef9a6079f060e0a4b74dfbd385a4d
MD5 hash calculated over data:		d26ef9a6079f060e0a4b74dfbd385a4d

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bs128-e128.E01
MD5 hash stored in file:		4dc190a90b426588961e92e728824d01
MD5 hash calculated over data:		4dc190a90b426588961e92e728824d01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bs128-e64.E01
MD5 hash stored in file:		84a487caef2f2b2b211ded62493a4cbb
MD5 hash calculated over data:		84a487caef2f2b2b211ded62493a4cbb

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-goodcompression.E01
MD5 hash stored in file:		b22738c08fa078dbe3af360b67565f37
MD5 hash calculated over data:		b22738c08fa078dbe3af360b67565f37

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-nocompression.E01
MD5 hash stored in file:		22b45d54911956dd11ef97cab066b90d
MD5 hash calculated over data:		22b45d54911956dd11ef97cab066b90d

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-nohash.E01
MD5 hash stored in file:		5322a45af84e793469b78c123adf5d46
MD5 hash calculated over data:		5322a45af84e793469b78c123adf5d46

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password-goodcompression.E01
MD5 hash stored in file:		777c0ca7a3a1c17509d82f1098ba98fc
MD5 hash calculated over data:		777c0ca7a3a1c17509d82f1098ba98fc

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password-nohash.E01
MD5 hash stored in file:		09c71a7ebcf30da83cce60997739844d
MD5 hash calculated over data:		09c71a7ebcf30da83cce60997739844d

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password.E01
MD5 hash stored in file:		763fbc519221abf2d6363e84e1f0ba90
MD5 hash calculated over data:		763fbc519221abf2d6363e84e1f0ba90

Single file: /targetf/ENCASE5/EVIDENCE/floppy-split.E01
MD5 hash stored in file:		040d2c0f56e3b1a397959e56e30474ac
MD5 hash calculated over data:		040d2c0f56e3b1a397959e56e30474ac

Single file: /targetf/ENCASE5/EVIDENCE/floppy-split.E02
MD5 hash stored in file:		0d2ad1e7f7c5f22e2d98b7b9918bc1ee
MD5 hash calculated over data:		0d2ad1e7f7c5f22e2d98b7b9918bc1ee

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-b128-e128-goodcompression.E01
MD5 hash stored in file:		7650b46093722890ebf524fce826ca1e
MD5 hash calculated over data:		7650b46093722890ebf524fce826ca1e

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-b128-e64-goodcompression.E01
MD5 hash stored in file:		6adb2ab9b01abd63a5d1bb99d2cb6c31
MD5 hash calculated over data:		6adb2ab9b01abd63a5d1bb99d2cb6c31

Single file: /targetf/ENCASE5/EVIDENCE.TXT
MD5 hash stored in file:		5ef7752be937537804071f290a35ab5a
MD5 hash calculated over data:		5ef7752be937537804071f290a35ab5a

Single file: /targetf/FTK/floppy-ftk-imager.e01.E01
MD5 hash stored in file:		362f9f8ea82907a3c30eb597709b1481
MD5 hash calculated over data:		362f9f8ea82907a3c30eb597709b1481

Single file: /targetf/FTK/floppy-ftk-imager.e01.E01.txt
MD5 hash stored in file:		3b9b96bfb1d0a2c99cecf6d83c44626d
MD5 hash calculated over data:		3b9b96bfb1d0a2c99cecf6d83c44626d

ewfverify: SUCCESS

Testing ewfverify of input: input_logical/logicalname.L01  (PASS)
ewfverify 20111031

Single file: /Single Files/libewf-20110610/ABOUT-NLS
MD5 hash stored in file:		b5a080b27b5b4c1a160d2bed1fcfaf9f
MD5 hash calculated over data:		b5a080b27b5b4c1a160d2bed1fcfaf9f

Single file: /Single Files/libewf-20110610/acinclude.m4
MD5 hash stored in file:		fa66ee506b70ad74331e90cd7bb7f10d
MD5 hash calculated over data:		fa66ee506b70ad74331e90cd7bb7f10d

Single file: /Single Files/libewf-20110610/aclocal.m4
MD5 hash stored in file:		23cd486ecd5fd0437cda9125a5f4a08b
MD5 hash calculated over data:		23cd486ecd5fd0437cda9125a5f4a08b

Single file: /Single Files/libewf-20110610/AUTHORS
MD5 hash stored in file:		0cfb73b80afd7b439634a1c2e12627a0
MD5 hash calculated over data:		0cfb73b80afd7b439634a1c2e12627a0

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquire/ewfacquire.bpf
MD5 hash stored in file:		65eea49bfa22cf0060af944362316688
MD5 hash calculated over data:		65eea49bfa22cf0060af944362316688

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquire/ewfacquire.bpr
MD5 hash stored in file:		e4c3f95983e61e9b8ee98c369fe4818f
MD5 hash calculated over data:		e4c3f95983e61e9b8ee98c369fe4818f

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquirestream/ewfacquirestream.bpf
MD5 hash stored in file:		27932751a2956497a4d9fdc732175dbf
MD5 hash calculated over data:		27932751a2956497a4d9fdc732175dbf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquirestream/ewfacquirestream.bpr
MD5 hash stored in file:		7dd3e45e40f0f98e9ab95c99328b26b5
MD5 hash calculated over data:		7dd3e45e40f0f98e9ab95c99328b26b5

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfexport/ewfexport.bpf
MD5 hash stored in file:		7766cefa72bf758e39e8fc640151d928
MD5 hash calculated over data:		7766cefa72bf758e39e8fc640151d928

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfexport/ewfexport.bpr
MD5 hash stored in file:		3fe77e9ae69cd6a6efa1ede485ce1fba
MD5 hash calculated over data:		3fe77e9ae69cd6a6efa1ede485ce1fba

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfinfo/ewfinfo.bpf
MD5 hash stored in file:		a9fed35607bb8dcdc239e3f907b9752d
MD5 hash calculated over data:		a9fed35607bb8dcdc239e3f907b9752d

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfinfo/ewfinfo.bpr
MD5 hash stored in file:		227883b61d33cb6deb4865a4252d8fc0
MD5 hash calculated over data:		227883b61d33cb6deb4865a4252d8fc0

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfverify/ewfverify.bpf
MD5 hash stored in file:		e8986b8f77fc166021bdbee5bddc208d
MD5 hash calculated over data:		e8986b8f77fc166021bdbee5bddc208d

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfverify/ewfverify.bpr
MD5 hash stored in file:		fa14d5acff6da735d1c469aa29a20c64
MD5 hash calculated over data:		fa14d5acff6da735d1c469aa29a20c64

Single file: /Single Files/libewf-20110610/borlandc/builder5/libbfio/libbfio.bpf
MD5 hash stored in file:		6ca63ae30f6599335e3a5d7e334484b9
MD5 hash calculated over data:		6ca63ae30f6599335e3a5d7e334484b9

Single file: /Single Files/libewf-20110610/borlandc/builder5/libbfio/libbfio.bpr
MD5 hash stored in file:		78793c0cd5e2798306976216636d6cf8
MD5 hash calculated over data:		78793c0cd5e2798306976216636d6cf8

Single file: /Single Files/libewf-20110610/borlandc/builder5/libcstring/libcstring.bpf
MD5 hash stored in file:		56ebebacf86d4d2c2d85ebe83065126d
MD5 hash calculated over data:		56ebebacf86d4d2c2d85ebe83065126d

Single file: /Single Files/libewf-20110610/borlandc/builder5/libcstring/libcstring.bpr
MD5 hash stored in file:		4c6f817c040153b1b2afcc592e00a338
MD5 hash calculated over data:		4c6f817c040153b1b2afcc592e00a338

Single file: /Single Files/libewf-20110610/borlandc/builder5/liberror/liberror.bpf
MD5 hash stored in file:		86a6339729d6e3491c2985d494bf7f93
MD5 hash calculated over data:		86a6339729d6e3491c2985d494bf7f93

Single file: /Single Files/libewf-20110610/borlandc/builder5/liberror/liberror.bpr
MD5 hash stored in file:		abb3a93869cf261f750bf27ec75fe4be
MD5 hash calculated over data:		abb3a93869cf261f750bf27ec75fe4be

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf/libewf.bpf
MD5 hash stored in file:		a9774221ecee375bf9b0d8b1db25b5ed
MD5 hash calculated over data:		a9774221ecee375bf9b0d8b1db25b5ed

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf/libewf.bpr
MD5 hash stored in file:		7a8bdca2f6a393fe1618bf4288427cb8
MD5 hash calculated over data:		7a8bdca2f6a393fe1618bf4288427cb8

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf.bpg
MD5 hash stored in file:		71eaac28637b0bdec3f644be002f2f80
MD5 hash calculated over data:		71eaac28637b0bdec3f644be002f2f80

Single file: /Single Files/libewf-20110610/borlandc/builder5/libfvalue/libfvalue.bpf
MD5 hash stored in file:		7a083c92cfd9f2a318538207157968e3
MD5 hash calculated over data:		7a083c92cfd9f2a318538207157968e3

Single file: /Single Files/libewf-20110610/borlandc/builder5/libfvalue/libfvalue.bpr
MD5 hash stored in file:		c474a0a8bd9e771d3fa4567921d84b7f
MD5 hash calculated over data:		c474a0a8bd9e771d3fa4567921d84b7f

Single file: /Single Files/libewf-20110610/borlandc/builder5/libmfdata/libmfdata.bpf
MD5 hash stored in file:		9aafc5b55b9e08025a2db32055e82e31
MD5 hash calculated over data:		9aafc5b55b9e08025a2db32055e82e31

Single file: /Single Files/libewf-20110610/borlandc/builder5/libmfdata/libmfdata.bpr
MD5 hash stored in file:		0afbe8d5da8aafbcefa4ea2e067c9d4b
MD5 hash calculated over data:		0afbe8d5da8aafbcefa4ea2e067c9d4b

Single file: /Single Files/libewf-20110610/borlandc/builder5/libnotify/libnotify.bpf
MD5 hash stored in file:		1f09988f69f908c2a219b3061c9b126d
MD5 hash calculated over data:		1f09988f69f908c2a219b3061c9b126d

Single file: /Single Files/libewf-20110610/borlandc/builder5/libnotify/libnotify.bpr
MD5 hash stored in file:		1bf9f9233218bf03b3d40ba777f9584c
MD5 hash calculated over data:		1bf9f9233218bf03b3d40ba777f9584c

Single file: /Single Files/libewf-20110610/borlandc/builder5/libodraw/libodraw.bpf
MD5 hash stored in file:		489b2225d685971bb339c603da343dc2
MD5 hash calculated over data:		489b2225d685971bb339c603da343dc2

Single file: /Single Files/libewf-20110610/borlandc/builder5/libodraw/libodraw.bpr
MD5 hash stored in file:		70485a1bbaf5a631f0b17c76a42a4bed
MD5 hash calculated over data:		70485a1bbaf5a631f0b17c76a42a4bed

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmdev/libsmdev.bpf
MD5 hash stored in file:		fe55d52223af6f64ce15060d6f25b817
MD5 hash calculated over data:		fe55d52223af6f64ce15060d6f25b817

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmdev/libsmdev.bpr
MD5 hash stored in file:		4d72b24eae7267916110de02519829b1
MD5 hash calculated over data:		4d72b24eae7267916110de02519829b1

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmraw/libsmraw.bpf
MD5 hash stored in file:		b13caa83a778bbc0c46e200bc400e93e
MD5 hash calculated over data:		b13caa83a778bbc0c46e200bc400e93e

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmraw/libsmraw.bpr
MD5 hash stored in file:		8efdae34adb31e2e75b2264bd6ee7230
MD5 hash calculated over data:		8efdae34adb31e2e75b2264bd6ee7230

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsystem/libsystem.bpf
MD5 hash stored in file:		e9f20848f2c2ab73ba65b927d9f5d82c
MD5 hash calculated over data:		e9f20848f2c2ab73ba65b927d9f5d82c

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsystem/libsystem.bpr
MD5 hash stored in file:		477d7143e7a7c5d0a8857271697786b0
MD5 hash calculated over data:		477d7143e7a7c5d0a8857271697786b0

Single file: /Single Files/libewf-20110610/borlandc/builder5/libuna/libuna.bpf
MD5 hash stored in file:		2d287e601191afbf89a20033aef95dda
MD5 hash calculated over data:		2d287e601191afbf89a20033aef95dda

Single file: /Single Files/libewf-20110610/borlandc/builder5/libuna/libuna.bpr
MD5 hash stored in file:		e4541756fe3d4d17519c9bce0d269e4e
MD5 hash calculated over data:		e4541756fe3d4d17519c9bce0d269e4e

Single file: /Single Files/libewf-20110610/borlandc/builder5/zlib/zlib.bpf
MD5 hash stored in file:		d97771fff23970a73defd0a9041f04a0
MD5 hash calculated over data:		d97771fff23970a73defd0a9041f04a0

Single file: /Single Files/libewf-20110610/borlandc/builder5/zlib/zlib.bpr
MD5 hash stored in file:		fed6fdb4406e26c1b796b66efcfb4b67
MD5 hash calculated over data:		fed6fdb4406e26c1b796b66efcfb4b67

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquire/ewfacquire.cbproj
MD5 hash stored in file:		4d6638c4f224dd7ed3751dc8cb153ebc
MD5 hash calculated over data:		4d6638c4f224dd7ed3751dc8cb153ebc

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquire/ewfacquire_static.cbproj
MD5 hash stored in file:		c959358c8d8a2ca84ff41ad52e57a651
MD5 hash calculated over data:		c959358c8d8a2ca84ff41ad52e57a651

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquirestream/ewfacquirestream.cbproj
MD5 hash stored in file:		56c6f9da96eb2a0ba99b2c1caa6ea3d0
MD5 hash calculated over data:		56c6f9da96eb2a0ba99b2c1caa6ea3d0

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquirestream/ewfacquirestream_static.cbproj
MD5 hash stored in file:		a1673bca9864bca2c902484224ff085d
MD5 hash calculated over data:		a1673bca9864bca2c902484224ff085d

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfexport/ewfexport.cbproj
MD5 hash stored in file:		e5150b901205110a6f15ccb331fe53b3
MD5 hash calculated over data:		e5150b901205110a6f15ccb331fe53b3

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfexport/ewfexport_static.cbproj
MD5 hash stored in file:		dbb12080f763317bed1df7246a421b5f
MD5 hash calculated over data:		dbb12080f763317bed1df7246a421b5f

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfinfo/ewfinfo.cbproj
MD5 hash stored in file:		500a8aee9c42471fb1995da0b042a1a8
MD5 hash calculated over data:		500a8aee9c42471fb1995da0b042a1a8

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfinfo/ewfinfo_static.cbproj
MD5 hash stored in file:		9712ed6d1ba118e9ddb19d5301d5449c
MD5 hash calculated over data:		9712ed6d1ba118e9ddb19d5301d5449c

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfverify/ewfverify.cbproj
MD5 hash stored in file:		39556c62da8490cee7d26ddebf5a434e
MD5 hash calculated over data:		39556c62da8490cee7d26ddebf5a434e

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfverify/ewfverify_static.cbproj
MD5 hash stored in file:		ad9e68bf79fc4ba42cc9524da26f0e56
MD5 hash calculated over data:		ad9e68bf79fc4ba42cc9524da26f0e56

Single file: /Single Files/libewf-20110610/borlandc/codegear/libbfio/libbfio.cbproj
MD5 hash stored in file:		48157605a18efc38c59b754e650e0265
MD5 hash calculated over data:		48157605a18efc38c59b754e650e0265

Single file: /Single Files/libewf-20110610/borlandc/codegear/libcstring/libcstring.cbproj
MD5 hash stored in file:		69f40470374918fbb2a522cea2d98d3f
MD5 hash calculated over data:		69f40470374918fbb2a522cea2d98d3f

Single file: /Single Files/libewf-20110610/borlandc/codegear/liberror/liberror.cbproj
MD5 hash stored in file:		6a227da6e56fded3282d14dfe6117626
MD5 hash calculated over data:		6a227da6e56fded3282d14dfe6117626

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf/libewf.cbproj
MD5 hash stored in file:		6422b4e1e72ef4a2f019b65d19284040
MD5 hash calculated over data:		6422b4e1e72ef4a2f019b65d19284040

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf/libewf_static.cbproj
MD5 hash stored in file:		8318b0fa3ccc4166f8f8fe31b973eb65
MD5 hash calculated over data:		8318b0fa3ccc4166f8f8fe31b973eb65

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf.groupproj
MD5 hash stored in file:		c8d6a78f2eb35290bc5b0061a6c165f2
MD5 hash calculated over data:		c8d6a78f2eb35290bc5b0061a6c165f2

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf_static.groupproj
MD5 hash stored in file:		517f2b0aad1780eb7893d228110db9dd
MD5 hash calculated over data:		517f2b0aad1780eb7893d228110db9dd

Single file: /Single Files/libewf-20110610/borlandc/codegear/libfvalue/libfvalue.cbproj
MD5 hash stored in file:		584e633c28eb24547ecd746d8165890e
MD5 hash calculated over data:		584e633c28eb24547ecd746d8165890e

Single file: /Single Files/libewf-20110610/borlandc/codegear/libmfdata/libmfdata.cbproj
MD5 hash stored in file:		e0971a6775eb6712cd3398a3e133b231
MD5 hash calculated over data:		e0971a6775eb6712cd3398a3e133b231

Single file: /Single Files/libewf-20110610/borlandc/codegear/libnotify/libnotify.cbproj
MD5 hash stored in file:		441d202241dc5148260569b847db6782
MD5 hash calculated over data:		441d202241dc5148260569b847db6782

Single file: /Single Files/libewf-20110610/borlandc/codegear/libodraw/libodraw.cbproj
MD5 hash stored in file:		681457e8b451602fd73ad63a9e761cb8
MD5 hash calculated over data:		681457e8b451602fd73ad63a9e761cb8

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsmdev/libsmdev.cbproj
MD5 hash stored in file:		c7f5525ef9b7ddcacc0a5e1ed7a1433f
MD5 hash calculated over data:		c7f5525ef9b7ddcacc0a5e1ed7a1433f

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsmraw/libsmraw.cbproj
MD5 hash stored in file:		a7601a906d2c70f50e369cbdc34e9e3b
MD5 hash calculated over data:		a7601a906d2c70f50e369cbdc34e9e3b

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsystem/libsystem.cbproj
MD5 hash stored in file:		01ef9dbf70426518b4ac38c640fddf92
MD5 hash calculated over data:		01ef9dbf70426518b4ac38c640fddf92

Single file: /Single Files/libewf-20110610/borlandc/codegear/libuna/libuna.cbproj
MD5 hash stored in file:		f74a86533c8704684de7ac9490580b14
MD5 hash calculated over data:		f74a86533c8704684de7ac9490580b14

Single file: /Single Files/libewf-20110610/borlandc/codegear/zlib/zlib.cbproj
MD5 hash stored in file:		01e521f0c84151daed423937b2fd72a1
MD5 hash calculated over data:		01e521f0c84151daed423937b2fd72a1

Single file: /Single Files/libewf-20110610/borlandc/codegear/zlib/zlib_static.cbproj
MD5 hash stored in file:		3eb7623117efc9724229ccd4d05b9ce9
MD5 hash calculated over data:		3eb7623117efc9724229ccd4d05b9ce9

Single file: /Single Files/libewf-20110610/borlandc/Makefile.am
MD5 hash stored in file:		43d07c6e65b1272afd02281d93906ff7
MD5 hash calculated over data:		43d07c6e65b1272afd02281d93906ff7

Single file: /Single Files/libewf-20110610/borlandc/Makefile.in
MD5 hash stored in file:		ccf733e9dac4461059c4c8a64f090f50
MD5 hash calculated over data:		ccf733e9dac4461059c4c8a64f090f50

Single file: /Single Files/libewf-20110610/ChangeLog
MD5 hash stored in file:		9815f458e45aac261e9e753f3f60ef67
MD5 hash calculated over data:		9815f458e45aac261e9e753f3f60ef67

Single file: /Single Files/libewf-20110610/common/byte_stream.h
MD5 hash stored in file:		26bcfe794ac289259606a99f40644f23
MD5 hash calculated over data:		26bcfe794ac289259606a99f40644f23

Single file: /Single Files/libewf-20110610/common/common.h
MD5 hash stored in file:		d411bc350732a7a7b050b7f06ced32d0
MD5 hash calculated over data:		d411bc350732a7a7b050b7f06ced32d0

Single file: /Single Files/libewf-20110610/common/config.h
MD5 hash stored in file:		6e29d893e99a7927e85ff0c6d7536a36
MD5 hash calculated over data:		6e29d893e99a7927e85ff0c6d7536a36

Single file: /Single Files/libewf-20110610/common/config.h.in
MD5 hash stored in file:		d28cb004999ee9da67c28a98c240f39e
MD5 hash calculated over data:		d28cb004999ee9da67c28a98c240f39e

Single file: /Single Files/libewf-20110610/common/config_borlandc.h
MD5 hash stored in file:		3c415803cc6f33273eb2a10b88d7a1d4
MD5 hash calculated over data:		3c415803cc6f33273eb2a10b88d7a1d4

Single file: /Single Files/libewf-20110610/common/config_msc.h
MD5 hash stored in file:		b5adf581fb8f51ed2a021545c9c26365
MD5 hash calculated over data:		b5adf581fb8f51ed2a021545c9c26365

Single file: /Single Files/libewf-20110610/common/file_stream.h
MD5 hash stored in file:		a90bc104d09ed90a9f18fc3b8ed3cc7c
MD5 hash calculated over data:		a90bc104d09ed90a9f18fc3b8ed3cc7c

Single file: /Single Files/libewf-20110610/common/gettext.h
MD5 hash stored in file:		fa3b4dda702716fa2307902f7be5e486
MD5 hash calculated over data:		fa3b4dda702716fa2307902f7be5e486

Single file: /Single Files/libewf-20110610/common/Makefile.am
MD5 hash stored in file:		12afde642052f926973eeed3595479ae
MD5 hash calculated over data:		12afde642052f926973eeed3595479ae

Single file: /Single Files/libewf-20110610/common/Makefile.in
MD5 hash stored in file:		acf8c084cb4f63137c8eed79e2322b4b
MD5 hash calculated over data:		acf8c084cb4f63137c8eed79e2322b4b

Single file: /Single Files/libewf-20110610/common/memory.h
MD5 hash stored in file:		9407da970a954ccdb505d33f46c9d8fe
MD5 hash calculated over data:		9407da970a954ccdb505d33f46c9d8fe

Single file: /Single Files/libewf-20110610/common/memwatch.c
MD5 hash stored in file:		9c6722a1a6fd24af99ee99b992361ce8
MD5 hash calculated over data:		9c6722a1a6fd24af99ee99b992361ce8

Single file: /Single Files/libewf-20110610/common/memwatch.h
MD5 hash stored in file:		8f91e18ea08fa881a1936e24c063a8b6
MD5 hash calculated over data:		8f91e18ea08fa881a1936e24c063a8b6

Single file: /Single Files/libewf-20110610/common/types.h
MD5 hash stored in file:		cd95f62a809aac14e78dd5f9cea723d4
MD5 hash calculated over data:		cd95f62a809aac14e78dd5f9cea723d4

Single file: /Single Files/libewf-20110610/common/types.h.in
MD5 hash stored in file:		77eb89755b6b496ebadb304535ef842a
MD5 hash calculated over data:		77eb89755b6b496ebadb304535ef842a

Single file: /Single Files/libewf-20110610/config.guess
MD5 hash stored in file:		34101ed5b91d2dc3affe2492cc54fd62
MD5 hash calculated over data:		34101ed5b91d2dc3affe2492cc54fd62

Single file: /Single Files/libewf-20110610/config.rpath
MD5 hash stored in file:		997e6d6329fdd69c134439110922c96b
MD5 hash calculated over data:		997e6d6329fdd69c134439110922c96b

Single file: /Single Files/libewf-20110610/config.sub
MD5 hash stored in file:		588158fcdcf4b03387aeb9a210e9eb0b
MD5 hash calculated over data:		588158fcdcf4b03387aeb9a210e9eb0b

Single file: /Single Files/libewf-20110610/configure
MD5 hash stored in file:		9b3fcff700702157b4eb5a4700811cb3
MD5 hash calculated over data:		9b3fcff700702157b4eb5a4700811cb3

Single file: /Single Files/libewf-20110610/configure.ac
MD5 hash stored in file:		63c24511de56c2f5871f3854cdeeb457
MD5 hash calculated over data:		63c24511de56c2f5871f3854cdeeb457

Single file: /Single Files/libewf-20110610/COPYING
MD5 hash stored in file:		58c39b26c0549f8e1bb4122173f474cd
MD5 hash calculated over data:		58c39b26c0549f8e1bb4122173f474cd

Single file: /Single Files/libewf-20110610/depcomp
MD5 hash stored in file:		21504de31981a67b5b93b265029d1865
MD5 hash calculated over data:		21504de31981a67b5b93b265029d1865

Single file: /Single Files/libewf-20110610/documents/header.txt
MD5 hash stored in file:		74610980785f23850e51cd889e8f2432
MD5 hash calculated over data:		74610980785f23850e51cd889e8f2432

Single file: /Single Files/libewf-20110610/documents/header2.txt
MD5 hash stored in file:		12fa9f0dd19b0fcbfab967697f7ce472
MD5 hash calculated over data:		12fa9f0dd19b0fcbfab967697f7ce472

Single file: /Single Files/libewf-20110610/documents/Makefile.am
MD5 hash stored in file:		2cd82082287c5e288b2b12678a89b76e
MD5 hash calculated over data:		2cd82082287c5e288b2b12678a89b76e

Single file: /Single Files/libewf-20110610/documents/Makefile.in
MD5 hash stored in file:		d59ba1071f572df438e4f247e87a9707
MD5 hash calculated over data:		d59ba1071f572df438e4f247e87a9707

Single file: /Single Files/libewf-20110610/documents/programming.txt
MD5 hash stored in file:		dc22467785f827e1bc23662e050d221a
MD5 hash calculated over data:		dc22467785f827e1bc23662e050d221a

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.cpp
MD5 hash stored in file:		d1ff489913b024e1c975a4418923542a
MD5 hash calculated over data:		d1ff489913b024e1c975a4418923542a

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.h
MD5 hash stored in file:		63758bc4fbc2bd1130868696126ce26b
MD5 hash calculated over data:		63758bc4fbc2bd1130868696126ce26b

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.rc
MD5 hash stored in file:		083fed78bdee1e411cfd9b3e88f17397
MD5 hash calculated over data:		083fed78bdee1e411cfd9b3e88f17397

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.rc.in
MD5 hash stored in file:		adedfcf7d30dc2509995d5adc9499305
MD5 hash calculated over data:		adedfcf7d30dc2509995d5adc9499305

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_file_entry.cpp
MD5 hash stored in file:		3b9488c73c9f695b1843958469fbcfb1
MD5 hash calculated over data:		3b9488c73c9f695b1843958469fbcfb1

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_file_entry.h
MD5 hash stored in file:		3de4d5e790d7cc2524f8e62eabc8cc82
MD5 hash calculated over data:		3de4d5e790d7cc2524f8e62eabc8cc82

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_handle.cpp
MD5 hash stored in file:		ac6d474e0f3d271066019db2f9474c71
MD5 hash calculated over data:		ac6d474e0f3d271066019db2f9474c71

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_handle.h
MD5 hash stored in file:		15130f25499d945d8b46aa3d7b8fd8d3
MD5 hash calculated over data:		15130f25499d945d8b46aa3d7b8fd8d3

Single file: /Single Files/libewf-20110610/ewf.net/Makefile.am
MD5 hash stored in file:		bbcd1ec3af6db5ae6eeaa87f61edff46
MD5 hash calculated over data:		bbcd1ec3af6db5ae6eeaa87f61edff46

Single file: /Single Files/libewf-20110610/ewf.net/Makefile.in
MD5 hash stored in file:		25f2917b9b2f584eb80f87c9aee35e83
MD5 hash calculated over data:		25f2917b9b2f584eb80f87c9aee35e83

Single file: /Single Files/libewf-20110610/ewftools/byte_size_string.c
MD5 hash stored in file:		595212c015cf4e1460b86748f6896420
MD5 hash calculated over data:		595212c015cf4e1460b86748f6896420

Single file: /Single Files/libewf-20110610/ewftools/byte_size_string.h
MD5 hash stored in file:		4b5b75c508d880f4f87f2289922f92d8
MD5 hash calculated over data:		4b5b75c508d880f4f87f2289922f92d8

Single file: /Single Files/libewf-20110610/ewftools/device_handle.c
MD5 hash stored in file:		4aa7e61df102592aec8076e04a9c83a8
MD5 hash calculated over data:		4aa7e61df102592aec8076e04a9c83a8

Single file: /Single Files/libewf-20110610/ewftools/device_handle.h
MD5 hash stored in file:		37755ac6ab336abc0b38d6df6f4c26bd
MD5 hash calculated over data:		37755ac6ab336abc0b38d6df6f4c26bd

Single file: /Single Files/libewf-20110610/ewftools/digest_context.c
MD5 hash stored in file:		d293b55f384fef7512cb67b37fafb9bb
MD5 hash calculated over data:		d293b55f384fef7512cb67b37fafb9bb

Single file: /Single Files/libewf-20110610/ewftools/digest_context.h
MD5 hash stored in file:		fd4e6545b92b9c266f6515d1e68dec15
MD5 hash calculated over data:		fd4e6545b92b9c266f6515d1e68dec15

Single file: /Single Files/libewf-20110610/ewftools/digest_hash.c
MD5 hash stored in file:		b7b2a0474ad3fd2d2e22d69421ccd6f8
MD5 hash calculated over data:		b7b2a0474ad3fd2d2e22d69421ccd6f8

Single file: /Single Files/libewf-20110610/ewftools/digest_hash.h
MD5 hash stored in file:		e2c2f1e20a750fbdab85e5d411a1a855
MD5 hash calculated over data:		e2c2f1e20a750fbdab85e5d411a1a855

Single file: /Single Files/libewf-20110610/ewftools/ewfacquire.c
MD5 hash stored in file:		ff900e515070db180f47143fb6774ce9
MD5 hash calculated over data:		ff900e515070db180f47143fb6774ce9

Single file: /Single Files/libewf-20110610/ewftools/ewfacquirestream.c
MD5 hash stored in file:		5ac0fe40d977928750c61884f0b7a49c
MD5 hash calculated over data:		5ac0fe40d977928750c61884f0b7a49c

Single file: /Single Files/libewf-20110610/ewftools/ewfcommon.h
MD5 hash stored in file:		c2a1df0ae834b8895d4a2004739b47a4
MD5 hash calculated over data:		c2a1df0ae834b8895d4a2004739b47a4

Single file: /Single Files/libewf-20110610/ewftools/ewfdebug.c
MD5 hash stored in file:		98775bfd602ae033c1770de0c72db935
MD5 hash calculated over data:		98775bfd602ae033c1770de0c72db935

Single file: /Single Files/libewf-20110610/ewftools/ewfexport.c
MD5 hash stored in file:		2a2dcc32028406dcd9cd55f19698ea64
MD5 hash calculated over data:		2a2dcc32028406dcd9cd55f19698ea64

Single file: /Single Files/libewf-20110610/ewftools/ewfinfo.c
MD5 hash stored in file:		cc98b363e062f31684652164f01d0279
MD5 hash calculated over data:		cc98b363e062f31684652164f01d0279

Single file: /Single Files/libewf-20110610/ewftools/ewfinput.c
MD5 hash stored in file:		7d448f6a680fc8c812a298480885703b
MD5 hash calculated over data:		7d448f6a680fc8c812a298480885703b

Single file: /Single Files/libewf-20110610/ewftools/ewfinput.h
MD5 hash stored in file:		13040dd7cf290bde1661ae97bfbd84c4
MD5 hash calculated over data:		13040dd7cf290bde1661ae97bfbd84c4

Single file: /Single Files/libewf-20110610/ewftools/ewfoutput.c
MD5 hash stored in file:		b1aba1d71d0fc7aaee6b98e9700389c6
MD5 hash calculated over data:		b1aba1d71d0fc7aaee6b98e9700389c6

Single file: /Single Files/libewf-20110610/ewftools/ewfoutput.h
MD5 hash stored in file:		645bfa6476b89abcd8a3a083d0012d65
MD5 hash calculated over data:		645bfa6476b89abcd8a3a083d0012d65

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libewf.h
MD5 hash stored in file:		92915a6b7d42065570fda9aa9b2b29c2
MD5 hash calculated over data:		92915a6b7d42065570fda9aa9b2b29c2

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libodraw.h
MD5 hash stored in file:		34c6c4cbc6023c439b9fd087e91ff176
MD5 hash calculated over data:		34c6c4cbc6023c439b9fd087e91ff176

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libsmdev.h
MD5 hash stored in file:		5a4039b6c7822f5e8a9611fee80deda6
MD5 hash calculated over data:		5a4039b6c7822f5e8a9611fee80deda6

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libsmraw.h
MD5 hash stored in file:		2b445028fbb0486ce26844787e1c84d3
MD5 hash calculated over data:		2b445028fbb0486ce26844787e1c84d3

Single file: /Single Files/libewf-20110610/ewftools/ewfverify.c
MD5 hash stored in file:		97c0f9f981a0282e9cbaef2c2e2e1065
MD5 hash calculated over data:		97c0f9f981a0282e9cbaef2c2e2e1065

Single file: /Single Files/libewf-20110610/ewftools/export_handle.c
MD5 hash stored in file:		11dd8a128c4ed49c6323882b1158e731
MD5 hash calculated over data:		11dd8a128c4ed49c6323882b1158e731

Single file: /Single Files/libewf-20110610/ewftools/export_handle.h
MD5 hash stored in file:		525f9350318e206f554133039d05d49f
MD5 hash calculated over data:		525f9350318e206f554133039d05d49f

Single file: /Single Files/libewf-20110610/ewftools/guid.c
MD5 hash stored in file:		801bfb16a8d82a7da2abe3dea11ee9fc
MD5 hash calculated over data:		801bfb16a8d82a7da2abe3dea11ee9fc

Single file: /Single Files/libewf-20110610/ewftools/guid.h
MD5 hash stored in file:		f8c5820d1b49704bd6fb35c11a6a6025
MD5 hash calculated over data:		f8c5820d1b49704bd6fb35c11a6a6025

Single file: /Single Files/libewf-20110610/ewftools/imaging_handle.c
MD5 hash stored in file:		1016083a30f7c4ad75c83e85f9f5c0d1
MD5 hash calculated over data:		1016083a30f7c4ad75c83e85f9f5c0d1

Single file: /Single Files/libewf-20110610/ewftools/imaging_handle.h
MD5 hash stored in file:		297a18d55e5dc2907157505867614b7e
MD5 hash calculated over data:		297a18d55e5dc2907157505867614b7e

Single file: /Single Files/libewf-20110610/ewftools/info_handle.c
MD5 hash stored in file:		e60d8a6f9797784cf790bcc343931b0e
MD5 hash calculated over data:		e60d8a6f9797784cf790bcc343931b0e

Single file: /Single Files/libewf-20110610/ewftools/info_handle.h
MD5 hash stored in file:		ca35c09f2ef8c7d43c5627619bee9822
MD5 hash calculated over data:		ca35c09f2ef8c7d43c5627619bee9822

Single file: /Single Files/libewf-20110610/ewftools/log_handle.c
MD5 hash stored in file:		7abb664f11420512c5581879cbd072d5
MD5 hash calculated over data:		7abb664f11420512c5581879cbd072d5

Single file: /Single Files/libewf-20110610/ewftools/log_handle.h
MD5 hash stored in file:		b11eb61a44da74f151ce8a7ee3e8547a
MD5 hash calculated over data:		b11eb61a44da74f151ce8a7ee3e8547a

Single file: /Single Files/libewf-20110610/ewftools/Makefile.am
MD5 hash stored in file:		66060ca84463b9b6959d1eaaf14f8788
MD5 hash calculated over data:		66060ca84463b9b6959d1eaaf14f8788

Single file: /Single Files/libewf-20110610/ewftools/Makefile.in
MD5 hash stored in file:		ba1f00a7eb95c404a288e4b7e5e07105
MD5 hash calculated over data:		ba1f00a7eb95c404a288e4b7e5e07105

Single file: /Single Files/libewf-20110610/ewftools/md5.h
MD5 hash stored in file:		954ba515a2fffa535161eae78b705820
MD5 hash calculated over data:		954ba515a2fffa535161eae78b705820

Single file: /Single Files/libewf-20110610/ewftools/platform.c
MD5 hash stored in file:		aa9b79ea158771e7d3e907f7bba8e371
MD5 hash calculated over data:		aa9b79ea158771e7d3e907f7bba8e371

Single file: /Single Files/libewf-20110610/ewftools/platform.h
MD5 hash stored in file:		03e21fc4d1d65ce03a74ee243630642f
MD5 hash calculated over data:		03e21fc4d1d65ce03a74ee243630642f

Single file: /Single Files/libewf-20110610/ewftools/process_status.c
MD5 hash stored in file:		e6eb9ced1e85606ac7fb9e2caad206f8
MD5 hash calculated over data:		e6eb9ced1e85606ac7fb9e2caad206f8

Single file: /Single Files/libewf-20110610/ewftools/process_status.h
MD5 hash stored in file:		67092face539d1c68c902d8918f4fe6b
MD5 hash calculated over data:		67092face539d1c68c902d8918f4fe6b

Single file: /Single Files/libewf-20110610/ewftools/sha1.h
MD5 hash stored in file:		170488b51f01111e5e34620395b10cd9
MD5 hash calculated over data:		170488b51f01111e5e34620395b10cd9

Single file: /Single Files/libewf-20110610/ewftools/storage_media_buffer.c
MD5 hash stored in file:		f997122838ceced7352ba6418a560c6e
MD5 hash calculated over data:		f997122838ceced7352ba6418a560c6e

Single file: /Single Files/libewf-20110610/ewftools/storage_media_buffer.h
MD5 hash stored in file:		3b99f0eab967b3337a95976635004b5e
MD5 hash calculated over data:		3b99f0eab967b3337a95976635004b5e

Single file: /Single Files/libewf-20110610/ewftools/verification_handle.c
MD5 hash stored in file:		9850dcdd3d7b262b4a5510927e13540a
MD5 hash calculated over data:		9850dcdd3d7b262b4a5510927e13540a

Single file: /Single Files/libewf-20110610/ewftools/verification_handle.h
MD5 hash stored in file:		ee19b9630661a27ec89ff5647952fab7
MD5 hash calculated over data:		ee19b9630661a27ec89ff5647952fab7

Single file: /Single Files/libewf-20110610/examples/libewf/open_close.c
MD5 hash stored in file:		708b4536a96d970fbf29478862aa6ed4
MD5 hash calculated over data:		708b4536a96d970fbf29478862aa6ed4

Single file: /Single Files/libewf-20110610/examples/Makefile.am
MD5 hash stored in file:		757cbc415a3ddad3e670b53d4931eecd
MD5 hash calculated over data:		757cbc415a3ddad3e670b53d4931eecd

Single file: /Single Files/libewf-20110610/examples/Makefile.in
MD5 hash stored in file:		b6d702c847ab33daa11897c627e345cc
MD5 hash calculated over data:		b6d702c847ab33daa11897c627e345cc

Single file: /Single Files/libewf-20110610/examples/pyewf/glob.py
MD5 hash stored in file:		5baa958aed366a32961765c4679ae15f
MD5 hash calculated over data:		5baa958aed366a32961765c4679ae15f

Single file: /Single Files/libewf-20110610/examples/pyewf/metadata.py
MD5 hash stored in file:		8cd150e1bf9397cc3e60c682db05bf64
MD5 hash calculated over data:		8cd150e1bf9397cc3e60c682db05bf64

Single file: /Single Files/libewf-20110610/examples/pyewf/open_close.py
MD5 hash stored in file:		5b4e0b51c503400fe94e5b4b96e47d6f
MD5 hash calculated over data:		5b4e0b51c503400fe94e5b4b96e47d6f

Single file: /Single Files/libewf-20110610/include/libewf/codepage.h
MD5 hash stored in file:		878bf769b8b62777cea6c90fa7a102af
MD5 hash calculated over data:		878bf769b8b62777cea6c90fa7a102af

Single file: /Single Files/libewf-20110610/include/libewf/definitions.h
MD5 hash stored in file:		5d17a5091c546e567508b0de1589c0ec
MD5 hash calculated over data:		5d17a5091c546e567508b0de1589c0ec

Single file: /Single Files/libewf-20110610/include/libewf/definitions.h.in
MD5 hash stored in file:		67e8b07aa21661aa5426fb59408151a7
MD5 hash calculated over data:		67e8b07aa21661aa5426fb59408151a7

Single file: /Single Files/libewf-20110610/include/libewf/error.h
MD5 hash stored in file:		74a3699ba29838f82e4b8a69c5cde30d
MD5 hash calculated over data:		74a3699ba29838f82e4b8a69c5cde30d

Single file: /Single Files/libewf-20110610/include/libewf/extern.h
MD5 hash stored in file:		e1c86398004f52d55a6f8d2bc36f40f2
MD5 hash calculated over data:		e1c86398004f52d55a6f8d2bc36f40f2

Single file: /Single Files/libewf-20110610/include/libewf/features.h
MD5 hash stored in file:		858d014f0bfadb5616de6a771535fa72
MD5 hash calculated over data:		858d014f0bfadb5616de6a771535fa72

Single file: /Single Files/libewf-20110610/include/libewf/features.h.in
MD5 hash stored in file:		a5d4b7eff614db7afaf260aaabd343cb
MD5 hash calculated over data:		a5d4b7eff614db7afaf260aaabd343cb

Single file: /Single Files/libewf-20110610/include/libewf/types.h
MD5 hash stored in file:		def545f2b7451e224a2224bc7d2bbcc4
MD5 hash calculated over data:		def545f2b7451e224a2224bc7d2bbcc4

Single file: /Single Files/libewf-20110610/include/libewf/types.h.in
MD5 hash stored in file:		addacdafb0fb6ad3f7a3ca824f015cad
MD5 hash calculated over data:		addacdafb0fb6ad3f7a3ca824f015cad

Single file: /Single Files/libewf-20110610/include/libewf.h
MD5 hash stored in file:		6bfba1e53f7a8b5ae136abdd3a4fb16c
MD5 hash calculated over data:		6bfba1e53f7a8b5ae136abdd3a4fb16c

Single file: /Single Files/libewf-20110610/include/libewf.h.in
MD5 hash stored in file:		49cffd4119dde74fcca70f9784973c40
MD5 hash calculated over data:		49cffd4119dde74fcca70f9784973c40

Single file: /Single Files/libewf-20110610/include/Makefile.am
MD5 hash stored in file:		b57b1f703029fde0f135e121d87d9350
MD5 hash calculated over data:		b57b1f703029fde0f135e121d87d9350

Single file: /Single Files/libewf-20110610/include/Makefile.in
MD5 hash stored in file:		28f167887c4ca4b7e84fbe3d9879c585
MD5 hash calculated over data:		28f167887c4ca4b7e84fbe3d9879c585

Single file: /Single Files/libewf-20110610/INSTALL
MD5 hash stored in file:		974f8ebfb787af664ca683a3cb6b71b5
MD5 hash calculated over data:		974f8ebfb787af664ca683a3cb6b71b5

Single file: /Single Files/libewf-20110610/install-sh
MD5 hash stored in file:		0afce91a3daa1fdc32ee36370c1129dd
MD5 hash calculated over data:		0afce91a3daa1fdc32ee36370c1129dd

Single file: /Single Files/libewf-20110610/libbfio/libbfio_codepage.h
MD5 hash stored in file:		527da573833b9a3a71fe49f86f33a678
MD5 hash calculated over data:		527da573833b9a3a71fe49f86f33a678

Single file: /Single Files/libewf-20110610/libbfio/libbfio_definitions.h
MD5 hash stored in file:		280e19c24f94bde10afcebf2bb2517e3
MD5 hash calculated over data:		280e19c24f94bde10afcebf2bb2517e3

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error.c
MD5 hash stored in file:		71c406dafb33ba5b9c9ecbcf60ad4b56
MD5 hash calculated over data:		71c406dafb33ba5b9c9ecbcf60ad4b56

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error.h
MD5 hash stored in file:		8f949e60e3a4c44babd1457b5be67eab
MD5 hash calculated over data:		8f949e60e3a4c44babd1457b5be67eab

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error_string.c
MD5 hash stored in file:		2ae63fe482e30b76a30885cd973e9b9e
MD5 hash calculated over data:		2ae63fe482e30b76a30885cd973e9b9e

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error_string.h
MD5 hash stored in file:		511a24a07e09158872f498fd5d13e13b
MD5 hash calculated over data:		511a24a07e09158872f498fd5d13e13b

Single file: /Single Files/libewf-20110610/libbfio/libbfio_extern.h
MD5 hash stored in file:		5588a28af8d324520c7d66cc30191338
MD5 hash calculated over data:		5588a28af8d324520c7d66cc30191338

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file.c
MD5 hash stored in file:		c8fc4aba0c9542d280bff576098a9a95
MD5 hash calculated over data:		c8fc4aba0c9542d280bff576098a9a95

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file.h
MD5 hash stored in file:		f359bc2eb0bc512bc5bf69f9f57b8e37
MD5 hash calculated over data:		f359bc2eb0bc512bc5bf69f9f57b8e37

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file_pool.c
MD5 hash stored in file:		06318332a1162668def66bc2b411648a
MD5 hash calculated over data:		06318332a1162668def66bc2b411648a

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file_pool.h
MD5 hash stored in file:		f76a36f7dedddc0bfbf6ce41b84c0a16
MD5 hash calculated over data:		f76a36f7dedddc0bfbf6ce41b84c0a16

Single file: /Single Files/libewf-20110610/libbfio/libbfio_handle.c
MD5 hash stored in file:		92ef83f2d67d8b827ccf8f0930c324ed
MD5 hash calculated over data:		92ef83f2d67d8b827ccf8f0930c324ed

Single file: /Single Files/libewf-20110610/libbfio/libbfio_handle.h
MD5 hash stored in file:		a0cbe8d5677459b0d6f4f62e7bd39700
MD5 hash calculated over data:		a0cbe8d5677459b0d6f4f62e7bd39700

Single file: /Single Files/libewf-20110610/libbfio/libbfio_legacy.c
MD5 hash stored in file:		238c6e0824425ddb2acaf0798f5534eb
MD5 hash calculated over data:		238c6e0824425ddb2acaf0798f5534eb

Single file: /Single Files/libewf-20110610/libbfio/libbfio_legacy.h
MD5 hash stored in file:		24b84b5f353839da2bff41daa8d855f5
MD5 hash calculated over data:		24b84b5f353839da2bff41daa8d855f5

Single file: /Single Files/libewf-20110610/libbfio/libbfio_libuna.h
MD5 hash stored in file:		d8b1fd8ad22cc2316a03ae13ab66c21b
MD5 hash calculated over data:		d8b1fd8ad22cc2316a03ae13ab66c21b

Single file: /Single Files/libewf-20110610/libbfio/libbfio_list_type.c
MD5 hash stored in file:		d7dff8e3ba842e30f7fe3dbad445afd5
MD5 hash calculated over data:		d7dff8e3ba842e30f7fe3dbad445afd5

Single file: /Single Files/libewf-20110610/libbfio/libbfio_list_type.h
MD5 hash stored in file:		f593b3b8e75c7d51476c4936edfa3334
MD5 hash calculated over data:		f593b3b8e75c7d51476c4936edfa3334

Single file: /Single Files/libewf-20110610/libbfio/libbfio_memory_range.c
MD5 hash stored in file:		8bcbb31e714194f11d1b7dbf0a402f9b
MD5 hash calculated over data:		8bcbb31e714194f11d1b7dbf0a402f9b

Single file: /Single Files/libewf-20110610/libbfio/libbfio_memory_range.h
MD5 hash stored in file:		75ab5412673933c54eab2f6f7583e4e2
MD5 hash calculated over data:		75ab5412673933c54eab2f6f7583e4e2

Single file: /Single Files/libewf-20110610/libbfio/libbfio_offset_list.c
MD5 hash stored in file:		ef2cf909a8443bb722e70d0994a48a8a
MD5 hash calculated over data:		ef2cf909a8443bb722e70d0994a48a8a

Single file: /Single Files/libewf-20110610/libbfio/libbfio_offset_list.h
MD5 hash stored in file:		190f6b5d97f56496d36015efd84b8c4f
MD5 hash calculated over data:		190f6b5d97f56496d36015efd84b8c4f

Single file: /Single Files/libewf-20110610/libbfio/libbfio_pool.c
MD5 hash stored in file:		99cb8ac88f0b3d88ee1f67ba80874a42
MD5 hash calculated over data:		99cb8ac88f0b3d88ee1f67ba80874a42

Single file: /Single Files/libewf-20110610/libbfio/libbfio_pool.h
MD5 hash stored in file:		7b4139e46275c4381f4f61eee4a022eb
MD5 hash calculated over data:		7b4139e46275c4381f4f61eee4a022eb

Single file: /Single Files/libewf-20110610/libbfio/libbfio_support.c
MD5 hash stored in file:		7bb957e7be44149303d9df8fb4b4e631
MD5 hash calculated over data:		7bb957e7be44149303d9df8fb4b4e631

Single file: /Single Files/libewf-20110610/libbfio/libbfio_support.h
MD5 hash stored in file:		88235653376834e6e68beaff8e303f4c
MD5 hash calculated over data:		88235653376834e6e68beaff8e303f4c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_types.h
MD5 hash stored in file:		2b16f7866e8684307d98e6857d8cf469
MD5 hash calculated over data:		2b16f7866e8684307d98e6857d8cf469

Single file: /Single Files/libewf-20110610/libbfio/libbfio_unused.h
MD5 hash stored in file:		6f8d17ce58916370530f63d68943be1e
MD5 hash calculated over data:		6f8d17ce58916370530f63d68943be1e

Single file: /Single Files/libewf-20110610/libbfio/Makefile.am
MD5 hash stored in file:		e9e0f1591d8b93125a5655e8aa2216fc
MD5 hash calculated over data:		e9e0f1591d8b93125a5655e8aa2216fc

Single file: /Single Files/libewf-20110610/libbfio/Makefile.in
MD5 hash stored in file:		c610c36cf1dcf6271640f4032a4ffab3
MD5 hash calculated over data:		c610c36cf1dcf6271640f4032a4ffab3

Single file: /Single Files/libewf-20110610/libcstring/libcstring.h
MD5 hash stored in file:		c0c14d3fc8a0f91fbc0ea51c8f65d880
MD5 hash calculated over data:		c0c14d3fc8a0f91fbc0ea51c8f65d880

Single file: /Single Files/libewf-20110610/libcstring/libcstring_codepage.h
MD5 hash stored in file:		6f8c32f6889d041b720f72631610a544
MD5 hash calculated over data:		6f8c32f6889d041b720f72631610a544

Single file: /Single Files/libewf-20110610/libcstring/libcstring_definitions.h
MD5 hash stored in file:		64a7e79f924a41448fff88cdd8a37f51
MD5 hash calculated over data:		64a7e79f924a41448fff88cdd8a37f51

Single file: /Single Files/libewf-20110610/libcstring/libcstring_locale.c
MD5 hash stored in file:		c24683c043438cf3af8fbee385427d14
MD5 hash calculated over data:		c24683c043438cf3af8fbee385427d14

Single file: /Single Files/libewf-20110610/libcstring/libcstring_locale.h
MD5 hash stored in file:		fe91c77293012ae8561c9c28cded2e3e
MD5 hash calculated over data:		fe91c77293012ae8561c9c28cded2e3e

Single file: /Single Files/libewf-20110610/libcstring/libcstring_narrow.h
MD5 hash stored in file:		d04c2918d77e00fd7647414f4d0b6d0a
MD5 hash calculated over data:		d04c2918d77e00fd7647414f4d0b6d0a

Single file: /Single Files/libewf-20110610/libcstring/libcstring_string.h
MD5 hash stored in file:		d29f13c9a8d339425bb22717c63b48fb
MD5 hash calculated over data:		d29f13c9a8d339425bb22717c63b48fb

Single file: /Single Files/libewf-20110610/libcstring/libcstring_system_string.c
MD5 hash stored in file:		bd4d514a733930684c62233773acf669
MD5 hash calculated over data:		bd4d514a733930684c62233773acf669

Single file: /Single Files/libewf-20110610/libcstring/libcstring_system_string.h
MD5 hash stored in file:		af584dad9e08abab92e51aa23aecf3ff
MD5 hash calculated over data:		af584dad9e08abab92e51aa23aecf3ff

Single file: /Single Files/libewf-20110610/libcstring/libcstring_types.h
MD5 hash stored in file:		55e965cd7fda0ef061eabbdcf552703f
MD5 hash calculated over data:		55e965cd7fda0ef061eabbdcf552703f

Single file: /Single Files/libewf-20110610/libcstring/libcstring_wide.c
MD5 hash stored in file:		c8e0a1cf0e4f1b8a544243246282a350
MD5 hash calculated over data:		c8e0a1cf0e4f1b8a544243246282a350

Single file: /Single Files/libewf-20110610/libcstring/libcstring_wide.h
MD5 hash stored in file:		a4b478d8f6ae63f1945df88c8d49cb6d
MD5 hash calculated over data:		a4b478d8f6ae63f1945df88c8d49cb6d

Single file: /Single Files/libewf-20110610/libcstring/Makefile.am
MD5 hash stored in file:		5620e0b45089365c7b9777a759b97de4
MD5 hash calculated over data:		5620e0b45089365c7b9777a759b97de4

Single file: /Single Files/libewf-20110610/libcstring/Makefile.in
MD5 hash stored in file:		5a8d50070bd8103f0d50b68b1cec196f
MD5 hash calculated over data:		5a8d50070bd8103f0d50b68b1cec196f

Single file: /Single Files/libewf-20110610/liberror/liberror.h
MD5 hash stored in file:		c55aaba8b2af68ee56f9137302b4ee91
MD5 hash calculated over data:		c55aaba8b2af68ee56f9137302b4ee91

Single file: /Single Files/libewf-20110610/liberror/liberror_definitions.h
MD5 hash stored in file:		b4c31835d47955f762712d09674dfe03
MD5 hash calculated over data:		b4c31835d47955f762712d09674dfe03

Single file: /Single Files/libewf-20110610/liberror/liberror_error.c
MD5 hash stored in file:		0bfece8bfa2ef83512caf1984cfe22fd
MD5 hash calculated over data:		0bfece8bfa2ef83512caf1984cfe22fd

Single file: /Single Files/libewf-20110610/liberror/liberror_error.h
MD5 hash stored in file:		1bf5c51984945a1c75dbb63f5da3fd2d
MD5 hash calculated over data:		1bf5c51984945a1c75dbb63f5da3fd2d

Single file: /Single Files/libewf-20110610/liberror/liberror_types.h
MD5 hash stored in file:		635fade776d0059c4641448a52c6b4ee
MD5 hash calculated over data:		635fade776d0059c4641448a52c6b4ee

Single file: /Single Files/libewf-20110610/liberror/Makefile.am
MD5 hash stored in file:		a7eb61a82a142d4bd83f11048c37a334
MD5 hash calculated over data:		a7eb61a82a142d4bd83f11048c37a334

Single file: /Single Files/libewf-20110610/liberror/Makefile.in
MD5 hash stored in file:		907077704234596b05c2da395827be95
MD5 hash calculated over data:		907077704234596b05c2da395827be95

Single file: /Single Files/libewf-20110610/libewf/ewfx_delta_chunk.h
MD5 hash stored in file:		ac1c0ed5b7b14d5f79206d88355c5792
MD5 hash calculated over data:		ac1c0ed5b7b14d5f79206d88355c5792

Single file: /Single Files/libewf-20110610/libewf/ewf_checksum.h
MD5 hash stored in file:		1717a9309772ce590616b2d472221e79
MD5 hash calculated over data:		1717a9309772ce590616b2d472221e79

Single file: /Single Files/libewf-20110610/libewf/ewf_data.h
MD5 hash stored in file:		5ec9295c4e52447a3410c74e1672bd54
MD5 hash calculated over data:		5ec9295c4e52447a3410c74e1672bd54

Single file: /Single Files/libewf-20110610/libewf/ewf_definitions.h
MD5 hash stored in file:		c5231395d8c7b745f9794a8aebf58db6
MD5 hash calculated over data:		c5231395d8c7b745f9794a8aebf58db6

Single file: /Single Files/libewf-20110610/libewf/ewf_digest.h
MD5 hash stored in file:		4db075ce33f24ec867104e6becbc6c35
MD5 hash calculated over data:		4db075ce33f24ec867104e6becbc6c35

Single file: /Single Files/libewf-20110610/libewf/ewf_error2.h
MD5 hash stored in file:		9c91d44d98f0beff69479a110f05150b
MD5 hash calculated over data:		9c91d44d98f0beff69479a110f05150b

Single file: /Single Files/libewf-20110610/libewf/ewf_file_header.h
MD5 hash stored in file:		8affbf08ef868b95c0b55495001314c3
MD5 hash calculated over data:		8affbf08ef868b95c0b55495001314c3

Single file: /Single Files/libewf-20110610/libewf/ewf_hash.h
MD5 hash stored in file:		443f15ec7d752533ce6b777c27b0b403
MD5 hash calculated over data:		443f15ec7d752533ce6b777c27b0b403

Single file: /Single Files/libewf-20110610/libewf/ewf_ltree.h
MD5 hash stored in file:		e3ebb1ebbce95d60fa0bd0205a46ac6e
MD5 hash calculated over data:		e3ebb1ebbce95d60fa0bd0205a46ac6e

Single file: /Single Files/libewf-20110610/libewf/ewf_section.h
MD5 hash stored in file:		011a61e4498c6c0a3465594058472523
MD5 hash calculated over data:		011a61e4498c6c0a3465594058472523

Single file: /Single Files/libewf-20110610/libewf/ewf_session.h
MD5 hash stored in file:		8c806c19001c5f3062b9bd0b848d8864
MD5 hash calculated over data:		8c806c19001c5f3062b9bd0b848d8864

Single file: /Single Files/libewf-20110610/libewf/ewf_table.h
MD5 hash stored in file:		49e021b3057435ada69eaa69652bf9f9
MD5 hash calculated over data:		49e021b3057435ada69eaa69652bf9f9

Single file: /Single Files/libewf-20110610/libewf/ewf_volume.h
MD5 hash stored in file:		a7cb199b15dae8ba9715fcca75ab2062
MD5 hash calculated over data:		a7cb199b15dae8ba9715fcca75ab2062

Single file: /Single Files/libewf-20110610/libewf/ewf_volume_smart.h
MD5 hash stored in file:		672392b65fe44774bf380f359183f59d
MD5 hash calculated over data:		672392b65fe44774bf380f359183f59d

Single file: /Single Files/libewf-20110610/libewf/libewf.c
MD5 hash stored in file:		4ba8bba58f2c2eb79c7ed9390a817172
MD5 hash calculated over data:		4ba8bba58f2c2eb79c7ed9390a817172

Single file: /Single Files/libewf-20110610/libewf/libewf.rc
MD5 hash stored in file:		07169a701f62ec442f741bcbae11ad56
MD5 hash calculated over data:		07169a701f62ec442f741bcbae11ad56

Single file: /Single Files/libewf-20110610/libewf/libewf.rc.in
MD5 hash stored in file:		189fd5924903c0a435e611acad5e7f87
MD5 hash calculated over data:		189fd5924903c0a435e611acad5e7f87

Single file: /Single Files/libewf-20110610/libewf/libewf_array_type.c
MD5 hash stored in file:		c91caa5b56f4597b7bf74fc474250778
MD5 hash calculated over data:		c91caa5b56f4597b7bf74fc474250778

Single file: /Single Files/libewf-20110610/libewf/libewf_array_type.h
MD5 hash stored in file:		b44ea9e2d50f97afc65b72f58488adfa
MD5 hash calculated over data:		b44ea9e2d50f97afc65b72f58488adfa

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_data.c
MD5 hash stored in file:		44216dadf652e5944d824b6d04af7d5d
MD5 hash calculated over data:		44216dadf652e5944d824b6d04af7d5d

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_data.h
MD5 hash stored in file:		fc60d00f18be45a53c4af1b12d7dea06
MD5 hash calculated over data:		fc60d00f18be45a53c4af1b12d7dea06

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_table.c
MD5 hash stored in file:		af37329cdc7df493695a5ef8b5ca63ec
MD5 hash calculated over data:		af37329cdc7df493695a5ef8b5ca63ec

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_table.h
MD5 hash stored in file:		9fa8c2c6986e12dc9eb44ab66a77bb4a
MD5 hash calculated over data:		9fa8c2c6986e12dc9eb44ab66a77bb4a

Single file: /Single Files/libewf-20110610/libewf/libewf_codepage.h
MD5 hash stored in file:		4bfd29218e84191d98790f7fdbd632d8
MD5 hash calculated over data:		4bfd29218e84191d98790f7fdbd632d8

Single file: /Single Files/libewf-20110610/libewf/libewf_compression.c
MD5 hash stored in file:		7362f5693ea5298e10a0b72538f8870e
MD5 hash calculated over data:		7362f5693ea5298e10a0b72538f8870e

Single file: /Single Files/libewf-20110610/libewf/libewf_compression.h
MD5 hash stored in file:		5223294c8de56d417bec4f4cfd8b415c
MD5 hash calculated over data:		5223294c8de56d417bec4f4cfd8b415c

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time.c
MD5 hash stored in file:		2963537098f4c1e52a9e1f02c93fb462
MD5 hash calculated over data:		2963537098f4c1e52a9e1f02c93fb462

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time.h
MD5 hash stored in file:		51d5cd47c201001f429149499f144922
MD5 hash calculated over data:		51d5cd47c201001f429149499f144922

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time_values.c
MD5 hash stored in file:		925b4617439e83d80ed06dee995ce681
MD5 hash calculated over data:		925b4617439e83d80ed06dee995ce681

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time_values.h
MD5 hash stored in file:		051d67c8d4c245b8ba3bc13c2e3bbbc2
MD5 hash calculated over data:		051d67c8d4c245b8ba3bc13c2e3bbbc2

Single file: /Single Files/libewf-20110610/libewf/libewf_debug.c
MD5 hash stored in file:		7dd482c0606a500d1735de3e2fe61ff4
MD5 hash calculated over data:		7dd482c0606a500d1735de3e2fe61ff4

Single file: /Single Files/libewf-20110610/libewf/libewf_debug.h
MD5 hash stored in file:		9ce32b89e3340a4e87228fc8bb3bff97
MD5 hash calculated over data:		9ce32b89e3340a4e87228fc8bb3bff97

Single file: /Single Files/libewf-20110610/libewf/libewf_definitions.h
MD5 hash stored in file:		3d9b6fd127505c2ecb4fcb5e1bcda61d
MD5 hash calculated over data:		3d9b6fd127505c2ecb4fcb5e1bcda61d

Single file: /Single Files/libewf-20110610/libewf/libewf_definitions.h.in
MD5 hash stored in file:		20e850ab9d57249cf3ea25fad7cf8e6c
MD5 hash calculated over data:		20e850ab9d57249cf3ea25fad7cf8e6c

Single file: /Single Files/libewf-20110610/libewf/libewf_empty_block.c
MD5 hash stored in file:		6ffeeb717ded023b2c9cc51ed9ead969
MD5 hash calculated over data:		6ffeeb717ded023b2c9cc51ed9ead969

Single file: /Single Files/libewf-20110610/libewf/libewf_empty_block.h
MD5 hash stored in file:		228f0c195bdf06df86696fce42b0d292
MD5 hash calculated over data:		228f0c195bdf06df86696fce42b0d292

Single file: /Single Files/libewf-20110610/libewf/libewf_error.c
MD5 hash stored in file:		01d168132ffa9967b4c39440878e3d95
MD5 hash calculated over data:		01d168132ffa9967b4c39440878e3d95

Single file: /Single Files/libewf-20110610/libewf/libewf_error.h
MD5 hash stored in file:		709d24ce9bce8b8d71f1eac3e6751e1b
MD5 hash calculated over data:		709d24ce9bce8b8d71f1eac3e6751e1b

Single file: /Single Files/libewf-20110610/libewf/libewf_extern.h
MD5 hash stored in file:		8f6a1a054cff3ad3e769316c6bc8e50b
MD5 hash calculated over data:		8f6a1a054cff3ad3e769316c6bc8e50b

Single file: /Single Files/libewf-20110610/libewf/libewf_filename.c
MD5 hash stored in file:		7a50c0a9649e9e02791531fc25f886a6
MD5 hash calculated over data:		7a50c0a9649e9e02791531fc25f886a6

Single file: /Single Files/libewf-20110610/libewf/libewf_filename.h
MD5 hash stored in file:		94fb7dcd361d55a3f61bdfa677ba3cf4
MD5 hash calculated over data:		94fb7dcd361d55a3f61bdfa677ba3cf4

Single file: /Single Files/libewf-20110610/libewf/libewf_file_entry.c
MD5 hash stored in file:		a66ce326f7139eef6ce00296cc9851c7
MD5 hash calculated over data:		a66ce326f7139eef6ce00296cc9851c7

Single file: /Single Files/libewf-20110610/libewf/libewf_file_entry.h
MD5 hash stored in file:		9fe3895acf46e2673daa02bf7579cf8b
MD5 hash calculated over data:		9fe3895acf46e2673daa02bf7579cf8b

Single file: /Single Files/libewf-20110610/libewf/libewf_handle.c
MD5 hash stored in file:		30aa29cf42f37b42f4a016c62bd0bcaf
MD5 hash calculated over data:		30aa29cf42f37b42f4a016c62bd0bcaf

Single file: /Single Files/libewf-20110610/libewf/libewf_handle.h
MD5 hash stored in file:		1f125eb970be9219bca8e3681b86c2b5
MD5 hash calculated over data:		1f125eb970be9219bca8e3681b86c2b5

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_sections.c
MD5 hash stored in file:		034b91517acf0ffe85305ddfac2e6a67
MD5 hash calculated over data:		034b91517acf0ffe85305ddfac2e6a67

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_sections.h
MD5 hash stored in file:		c0fe76dbf448127ecc2d8dba4c1908f3
MD5 hash calculated over data:		c0fe76dbf448127ecc2d8dba4c1908f3

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_values.c
MD5 hash stored in file:		6d5a89fa8c0624e164c4ab9fd24601cd
MD5 hash calculated over data:		6d5a89fa8c0624e164c4ab9fd24601cd

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_values.h
MD5 hash stored in file:		fc351121cc82c6ecf3faf39cc9540be4
MD5 hash calculated over data:		fc351121cc82c6ecf3faf39cc9540be4

Single file: /Single Files/libewf-20110610/libewf/libewf_header_sections.c
MD5 hash stored in file:		dc38e35085606b70407427b6f5aa1c33
MD5 hash calculated over data:		dc38e35085606b70407427b6f5aa1c33

Single file: /Single Files/libewf-20110610/libewf/libewf_header_sections.h
MD5 hash stored in file:		1d2b4df8704a13c22faec89430779967
MD5 hash calculated over data:		1d2b4df8704a13c22faec89430779967

Single file: /Single Files/libewf-20110610/libewf/libewf_header_values.c
MD5 hash stored in file:		f1c9eb34064c81a1b597c2de7282729e
MD5 hash calculated over data:		f1c9eb34064c81a1b597c2de7282729e

Single file: /Single Files/libewf-20110610/libewf/libewf_header_values.h
MD5 hash stored in file:		24d5db14c8311873b962e7c2ec0a1c52
MD5 hash calculated over data:		24d5db14c8311873b962e7c2ec0a1c52

Single file: /Single Files/libewf-20110610/libewf/libewf_io_handle.c
MD5 hash stored in file:		c43b712297fbb240dd5e312731b8fb98
MD5 hash calculated over data:		c43b712297fbb240dd5e312731b8fb98

Single file: /Single Files/libewf-20110610/libewf/libewf_io_handle.h
MD5 hash stored in file:		c699bab7fdc8fd6e37fb0c44da44705f
MD5 hash calculated over data:		c699bab7fdc8fd6e37fb0c44da44705f

Single file: /Single Files/libewf-20110610/libewf/libewf_legacy.c
MD5 hash stored in file:		ea3d210e0020641775b1f0538e955093
MD5 hash calculated over data:		ea3d210e0020641775b1f0538e955093

Single file: /Single Files/libewf-20110610/libewf/libewf_legacy.h
MD5 hash stored in file:		1e79c4979233797b7e7a0101b110504c
MD5 hash calculated over data:		1e79c4979233797b7e7a0101b110504c

Single file: /Single Files/libewf-20110610/libewf/libewf_libbfio.h
MD5 hash stored in file:		1fbe5e9920cb18c77c467ef9d0eb3043
MD5 hash calculated over data:		1fbe5e9920cb18c77c467ef9d0eb3043

Single file: /Single Files/libewf-20110610/libewf/libewf_libfvalue.h
MD5 hash stored in file:		30a50483d899b39c395440185b2ef9fd
MD5 hash calculated over data:		30a50483d899b39c395440185b2ef9fd

Single file: /Single Files/libewf-20110610/libewf/libewf_libmfdata.h
MD5 hash stored in file:		269b011ad609d8f78c5a80726e553805
MD5 hash calculated over data:		269b011ad609d8f78c5a80726e553805

Single file: /Single Files/libewf-20110610/libewf/libewf_libuna.h
MD5 hash stored in file:		1ddb7fefa711246d6ff4379a091308d8
MD5 hash calculated over data:		1ddb7fefa711246d6ff4379a091308d8

Single file: /Single Files/libewf-20110610/libewf/libewf_list_type.c
MD5 hash stored in file:		5a8b6b40c3529b990d05081541186343
MD5 hash calculated over data:		5a8b6b40c3529b990d05081541186343

Single file: /Single Files/libewf-20110610/libewf/libewf_list_type.h
MD5 hash stored in file:		f8f115b42ae052dfdc42e8a39b114166
MD5 hash calculated over data:		f8f115b42ae052dfdc42e8a39b114166

Single file: /Single Files/libewf-20110610/libewf/libewf_media_values.c
MD5 hash stored in file:		0e47f8dbd8adcfe2214dc1068a77f33c
MD5 hash calculated over data:		0e47f8dbd8adcfe2214dc1068a77f33c

Single file: /Single Files/libewf-20110610/libewf/libewf_media_values.h
MD5 hash stored in file:		9a7bb1bedb969cd30f60dbe86e98ddfb
MD5 hash calculated over data:		9a7bb1bedb969cd30f60dbe86e98ddfb

Single file: /Single Files/libewf-20110610/libewf/libewf_metadata.c
MD5 hash stored in file:		f44a929c028d08388e383a2f9504a075
MD5 hash calculated over data:		f44a929c028d08388e383a2f9504a075

Single file: /Single Files/libewf-20110610/libewf/libewf_metadata.h
MD5 hash stored in file:		6e3e38f4b65af7a3eeabcc9e69e571c3
MD5 hash calculated over data:		6e3e38f4b65af7a3eeabcc9e69e571c3

Single file: /Single Files/libewf-20110610/libewf/libewf_notify.c
MD5 hash stored in file:		89325b1dbdefd55798c0d159b5095b77
MD5 hash calculated over data:		89325b1dbdefd55798c0d159b5095b77

Single file: /Single Files/libewf-20110610/libewf/libewf_notify.h
MD5 hash stored in file:		69681584fd3088aebf0a20dfdacb2daf
MD5 hash calculated over data:		69681584fd3088aebf0a20dfdacb2daf

Single file: /Single Files/libewf-20110610/libewf/libewf_read_io_handle.c
MD5 hash stored in file:		6fa14e823e5a2fcabd97ee7f8baea64f
MD5 hash calculated over data:		6fa14e823e5a2fcabd97ee7f8baea64f

Single file: /Single Files/libewf-20110610/libewf/libewf_read_io_handle.h
MD5 hash stored in file:		af4542cdafc0d18ab6987aa97e210980
MD5 hash calculated over data:		af4542cdafc0d18ab6987aa97e210980

Single file: /Single Files/libewf-20110610/libewf/libewf_section.c
MD5 hash stored in file:		7482dc62145691b854acaae071b31169
MD5 hash calculated over data:		7482dc62145691b854acaae071b31169

Single file: /Single Files/libewf-20110610/libewf/libewf_section.h
MD5 hash stored in file:		e0a30d74491888ef6d29e060baed3adf
MD5 hash calculated over data:		e0a30d74491888ef6d29e060baed3adf

Single file: /Single Files/libewf-20110610/libewf/libewf_sector_list.c
MD5 hash stored in file:		68e3eda15dfb7e53132cdc7d94d3c3c9
MD5 hash calculated over data:		68e3eda15dfb7e53132cdc7d94d3c3c9

Single file: /Single Files/libewf-20110610/libewf/libewf_sector_list.h
MD5 hash stored in file:		25dea6f8fd32f5260316f6595429c2cd
MD5 hash calculated over data:		25dea6f8fd32f5260316f6595429c2cd

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file.c
MD5 hash stored in file:		cb60e1586720763661c9615a12f99fad
MD5 hash calculated over data:		cb60e1586720763661c9615a12f99fad

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file.h
MD5 hash stored in file:		0c538ac6846229066e7c0b6bd0a10d21
MD5 hash calculated over data:		0c538ac6846229066e7c0b6bd0a10d21

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file_handle.c
MD5 hash stored in file:		9e0a04d661477c847054e799b1414ec2
MD5 hash calculated over data:		9e0a04d661477c847054e799b1414ec2

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file_handle.h
MD5 hash stored in file:		803d141f8888dff409654b3d37382dea
MD5 hash calculated over data:		803d141f8888dff409654b3d37382dea

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_table.c
MD5 hash stored in file:		6b9868b4e42f5858b02ad25e05611d9a
MD5 hash calculated over data:		6b9868b4e42f5858b02ad25e05611d9a

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_table.h
MD5 hash stored in file:		05f204e2aae23ef2d56a6c1a4d7fc66e
MD5 hash calculated over data:		05f204e2aae23ef2d56a6c1a4d7fc66e

Single file: /Single Files/libewf-20110610/libewf/libewf_single_files.c
MD5 hash stored in file:		22c70edbe4f771aa073bd668823407fd
MD5 hash calculated over data:		22c70edbe4f771aa073bd668823407fd

Single file: /Single Files/libewf-20110610/libewf/libewf_single_files.h
MD5 hash stored in file:		1df2aadcbd2eb8bfa9a70044364ab4ec
MD5 hash calculated over data:		1df2aadcbd2eb8bfa9a70044364ab4ec

Single file: /Single Files/libewf-20110610/libewf/libewf_single_file_entry.c
MD5 hash stored in file:		f877b9e6202006b1ad2f155ad13679f5
MD5 hash calculated over data:		f877b9e6202006b1ad2f155ad13679f5

Single file: /Single Files/libewf-20110610/libewf/libewf_single_file_entry.h
MD5 hash stored in file:		94041dcbfff5a2c451ee6d03a049334f
MD5 hash calculated over data:		94041dcbfff5a2c451ee6d03a049334f

Single file: /Single Files/libewf-20110610/libewf/libewf_split_values.c
MD5 hash stored in file:		dbd49443cec927f49b8d2152c45eed59
MD5 hash calculated over data:		dbd49443cec927f49b8d2152c45eed59

Single file: /Single Files/libewf-20110610/libewf/libewf_split_values.h
MD5 hash stored in file:		af7c7f75b2cdca9f63d367d14abe0086
MD5 hash calculated over data:		af7c7f75b2cdca9f63d367d14abe0086

Single file: /Single Files/libewf-20110610/libewf/libewf_support.c
MD5 hash stored in file:		f297106d3f0d1b2339c195241d7f03ef
MD5 hash calculated over data:		f297106d3f0d1b2339c195241d7f03ef

Single file: /Single Files/libewf-20110610/libewf/libewf_support.h
MD5 hash stored in file:		f0cb2f190282c29b3b967f59ddf09793
MD5 hash calculated over data:		f0cb2f190282c29b3b967f59ddf09793

Single file: /Single Files/libewf-20110610/libewf/libewf_tree_type.c
MD5 hash stored in file:		192dc4cb855e88ed8a04aa73aa6f2d00
MD5 hash calculated over data:		192dc4cb855e88ed8a04aa73aa6f2d00

Single file: /Single Files/libewf-20110610/libewf/libewf_tree_type.h
MD5 hash stored in file:		4137a5d517ce7e89610092df0cb2a52d
MD5 hash calculated over data:		4137a5d517ce7e89610092df0cb2a52d

Single file: /Single Files/libewf-20110610/libewf/libewf_types.h
MD5 hash stored in file:		14339c790594eb4c814d8b5956529499
MD5 hash calculated over data:		14339c790594eb4c814d8b5956529499

Single file: /Single Files/libewf-20110610/libewf/libewf_unused.h
MD5 hash stored in file:		23e38de865bcce06261749e1e645152f
MD5 hash calculated over data:		23e38de865bcce06261749e1e645152f

Single file: /Single Files/libewf-20110610/libewf/libewf_write_io_handle.c
MD5 hash stored in file:		fde914ef380ba59da04466422bc4c6d1
MD5 hash calculated over data:		fde914ef380ba59da04466422bc4c6d1

Single file: /Single Files/libewf-20110610/libewf/libewf_write_io_handle.h
MD5 hash stored in file:		161edab756aca298859fc781a9f88c9b
MD5 hash calculated over data:		161edab756aca298859fc781a9f88c9b

Single file: /Single Files/libewf-20110610/libewf/Makefile.am
MD5 hash stored in file:		2ea876b13991f26f7d8ef0c5330ec9ae
MD5 hash calculated over data:		2ea876b13991f26f7d8ef0c5330ec9ae

Single file: /Single Files/libewf-20110610/libewf/Makefile.in
MD5 hash stored in file:		fe2a0479039f3e8213ae69dc1f5525ec
MD5 hash calculated over data:		fe2a0479039f3e8213ae69dc1f5525ec

Single file: /Single Files/libewf-20110610/libewf.pc.in
MD5 hash stored in file:		a94a5a3be93f33e6e456ab0c8ce695dc
MD5 hash calculated over data:		a94a5a3be93f33e6e456ab0c8ce695dc

Single file: /Single Files/libewf-20110610/libewf.spec
MD5 hash stored in file:		6cf24548178fcbeb420f637a8982d367
MD5 hash calculated over data:		6cf24548178fcbeb420f637a8982d367

Single file: /Single Files/libewf-20110610/libewf.spec.in
MD5 hash stored in file:		9beed8e6c9e1e3864750cc42476f42f5
MD5 hash calculated over data:		9beed8e6c9e1e3864750cc42476f42f5

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_array_type.c
MD5 hash stored in file:		23323e1f7669e1ce66a487b8758d41ad
MD5 hash calculated over data:		23323e1f7669e1ce66a487b8758d41ad

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_array_type.h
MD5 hash stored in file:		e9cbcc8a3384bdafa1f89c648c19e768
MD5 hash calculated over data:		e9cbcc8a3384bdafa1f89c648c19e768

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_codepage.h
MD5 hash stored in file:		5b3530507c3d467d898ba0d2d850d503
MD5 hash calculated over data:		5b3530507c3d467d898ba0d2d850d503

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_debug.c
MD5 hash stored in file:		f406a54529c389e817c9df83354a2f08
MD5 hash calculated over data:		f406a54529c389e817c9df83354a2f08

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_debug.h
MD5 hash stored in file:		86949c221ebc57981bbe90359b0de9ff
MD5 hash calculated over data:		86949c221ebc57981bbe90359b0de9ff

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_definitions.h
MD5 hash stored in file:		6393e2dea256552b88864f9985ee09b2
MD5 hash calculated over data:		6393e2dea256552b88864f9985ee09b2

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_extern.h
MD5 hash stored in file:		b9a06acd14e7aec830c76950640f23db
MD5 hash calculated over data:		b9a06acd14e7aec830c76950640f23db

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libfdatetime.h
MD5 hash stored in file:		54c9fd19bc8c028e40fb75d6c2a61a4f
MD5 hash calculated over data:		54c9fd19bc8c028e40fb75d6c2a61a4f

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libfguid.h
MD5 hash stored in file:		15131c45ddebc201586c13d1ccf305ab
MD5 hash calculated over data:		15131c45ddebc201586c13d1ccf305ab

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libuna.h
MD5 hash stored in file:		151f6e1d9a3e71044f505e68e5a9459c
MD5 hash calculated over data:		151f6e1d9a3e71044f505e68e5a9459c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_split_string.c
MD5 hash stored in file:		5cd560dc93f6a65048757d5e472ea24b
MD5 hash calculated over data:		5cd560dc93f6a65048757d5e472ea24b

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_split_string.h
MD5 hash stored in file:		6e1dcc3a6696895502df49f321f18d27
MD5 hash calculated over data:		6e1dcc3a6696895502df49f321f18d27

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_string.c
MD5 hash stored in file:		dc2ee545d556eeaaf348a4b7446c91b8
MD5 hash calculated over data:		dc2ee545d556eeaaf348a4b7446c91b8

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_string.h
MD5 hash stored in file:		5b886d4f3e472765aa6b729003fa911f
MD5 hash calculated over data:		5b886d4f3e472765aa6b729003fa911f

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_table.c
MD5 hash stored in file:		c68487048954f46eed77f69d1f8811a1
MD5 hash calculated over data:		c68487048954f46eed77f69d1f8811a1

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_table.h
MD5 hash stored in file:		77bf6770ba6f64b0109e04974359b785
MD5 hash calculated over data:		77bf6770ba6f64b0109e04974359b785

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_types.h
MD5 hash stored in file:		6d2bc097bc59c4ec7ab6b7e009e23857
MD5 hash calculated over data:		6d2bc097bc59c4ec7ab6b7e009e23857

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value.c
MD5 hash stored in file:		3ef84ba4acc1bfaeca861b4148be5240
MD5 hash calculated over data:		3ef84ba4acc1bfaeca861b4148be5240

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value.h
MD5 hash stored in file:		78708f5b7c3e74ebf001de554dd7047a
MD5 hash calculated over data:		78708f5b7c3e74ebf001de554dd7047a

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value_entry.c
MD5 hash stored in file:		9b7c4307aea206fe30a26f0f6a0fac6f
MD5 hash calculated over data:		9b7c4307aea206fe30a26f0f6a0fac6f

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value_entry.h
MD5 hash stored in file:		dff036e1d9cfc4fb6d20f39127e160bc
MD5 hash calculated over data:		dff036e1d9cfc4fb6d20f39127e160bc

Single file: /Single Files/libewf-20110610/libfvalue/Makefile.am
MD5 hash stored in file:		0c8c921da36849fbe4907eb611a10450
MD5 hash calculated over data:		0c8c921da36849fbe4907eb611a10450

Single file: /Single Files/libewf-20110610/libfvalue/Makefile.in
MD5 hash stored in file:		e7939b4a053ffab043a0a3fd2a8e2cd6
MD5 hash calculated over data:		e7939b4a053ffab043a0a3fd2a8e2cd6

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_array_type.c
MD5 hash stored in file:		a06865dc363795a08f1d736dd82ec6d9
MD5 hash calculated over data:		a06865dc363795a08f1d736dd82ec6d9

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_array_type.h
MD5 hash stored in file:		4de31367306579891fc663ce74bfddf3
MD5 hash calculated over data:		4de31367306579891fc663ce74bfddf3

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache.c
MD5 hash stored in file:		321419cb50834d40ac4c83ea1764c8d0
MD5 hash calculated over data:		321419cb50834d40ac4c83ea1764c8d0

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache.h
MD5 hash stored in file:		bcc7cfae1dd2ff9195a79234571624d5
MD5 hash calculated over data:		bcc7cfae1dd2ff9195a79234571624d5

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache_value.c
MD5 hash stored in file:		1aa75525cb9cecf2c798bfda12285124
MD5 hash calculated over data:		1aa75525cb9cecf2c798bfda12285124

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache_value.h
MD5 hash stored in file:		342f2850568604b23267d32f7569638e
MD5 hash calculated over data:		342f2850568604b23267d32f7569638e

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_date_time.h
MD5 hash stored in file:		defd044715ddb7451e23f527d9205f2a
MD5 hash calculated over data:		defd044715ddb7451e23f527d9205f2a

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_definitions.h
MD5 hash stored in file:		9d855b02faad32e83a3dabba688d385d
MD5 hash calculated over data:		9d855b02faad32e83a3dabba688d385d

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_error.c
MD5 hash stored in file:		363b18d4774be698e05b397984c86b77
MD5 hash calculated over data:		363b18d4774be698e05b397984c86b77

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_error.h
MD5 hash stored in file:		af165ea636f4e09f8d1b6399d2ca78d0
MD5 hash calculated over data:		af165ea636f4e09f8d1b6399d2ca78d0

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_extern.h
MD5 hash stored in file:		7194a76b298cf5c607ebb831ae15f494
MD5 hash calculated over data:		7194a76b298cf5c607ebb831ae15f494

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file.c
MD5 hash stored in file:		c26a087e15d0a571c5ec1cec32ca97f0
MD5 hash calculated over data:		c26a087e15d0a571c5ec1cec32ca97f0

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file.h
MD5 hash stored in file:		e09a7af89bba9e35d66bc3c7388eb7dc
MD5 hash calculated over data:		e09a7af89bba9e35d66bc3c7388eb7dc

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file_list.c
MD5 hash stored in file:		70a69bc05eab013238dc2a07941eff8e
MD5 hash calculated over data:		70a69bc05eab013238dc2a07941eff8e

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file_list.h
MD5 hash stored in file:		b62b2620156374f7a5aaa5a5e2c30bc0
MD5 hash calculated over data:		b62b2620156374f7a5aaa5a5e2c30bc0

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_group.c
MD5 hash stored in file:		e5be54a9d00658319dfe2e8ae1416a2b
MD5 hash calculated over data:		e5be54a9d00658319dfe2e8ae1416a2b

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_group.h
MD5 hash stored in file:		411db345d8fb303e08e9d27d186f28a5
MD5 hash calculated over data:		411db345d8fb303e08e9d27d186f28a5

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_inline.h
MD5 hash stored in file:		24b87a0fbe347499345afe9de3759a64
MD5 hash calculated over data:		24b87a0fbe347499345afe9de3759a64

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_libbfio.h
MD5 hash stored in file:		8834b67873c1b8cd82d55cccce456717
MD5 hash calculated over data:		8834b67873c1b8cd82d55cccce456717

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list.c
MD5 hash stored in file:		53a69ec85e36e8deef9dec87cde30f25
MD5 hash calculated over data:		53a69ec85e36e8deef9dec87cde30f25

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list.h
MD5 hash stored in file:		f3cde3e752cdbcca05e4ac1b145f9b96
MD5 hash calculated over data:		f3cde3e752cdbcca05e4ac1b145f9b96

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list_element.c
MD5 hash stored in file:		840a168d48e6bb5e954b0746f4447f97
MD5 hash calculated over data:		840a168d48e6bb5e954b0746f4447f97

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list_element.h
MD5 hash stored in file:		be948a7b3edfd14658a4cc7000905a38
MD5 hash calculated over data:		be948a7b3edfd14658a4cc7000905a38

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_notify.c
MD5 hash stored in file:		0adb6ac1a5de7b5ae87df86bfe77a86a
MD5 hash calculated over data:		0adb6ac1a5de7b5ae87df86bfe77a86a

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_notify.h
MD5 hash stored in file:		796af094576916ae5376b4bb35462d26
MD5 hash calculated over data:		796af094576916ae5376b4bb35462d26

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_range.c
MD5 hash stored in file:		9fb16e260993e8ff657e655f0ee78759
MD5 hash calculated over data:		9fb16e260993e8ff657e655f0ee78759

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_range.h
MD5 hash stored in file:		b6163445f36225b4432c9e251582f8b6
MD5 hash calculated over data:		b6163445f36225b4432c9e251582f8b6

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment.c
MD5 hash stored in file:		290ccb047fc87254368724cc6fcc672f
MD5 hash calculated over data:		290ccb047fc87254368724cc6fcc672f

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment.h
MD5 hash stored in file:		bbb02757262c53bb9195310130c8924f
MD5 hash calculated over data:		bbb02757262c53bb9195310130c8924f

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment_table.c
MD5 hash stored in file:		66ca7139230cf340dd05e01038d9b00a
MD5 hash calculated over data:		66ca7139230cf340dd05e01038d9b00a

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment_table.h
MD5 hash stored in file:		ee0b26058143664acb86a6bd792eb635
MD5 hash calculated over data:		ee0b26058143664acb86a6bd792eb635

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_support.c
MD5 hash stored in file:		50dff400f67c3d30913c0621dc653596
MD5 hash calculated over data:		50dff400f67c3d30913c0621dc653596

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_support.h
MD5 hash stored in file:		cb3d1ea9d675b54ec8f409414af4d9a3
MD5 hash calculated over data:		cb3d1ea9d675b54ec8f409414af4d9a3

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_types.h
MD5 hash stored in file:		783571d89148705a267ad3ff871355bb
MD5 hash calculated over data:		783571d89148705a267ad3ff871355bb

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_unused.h
MD5 hash stored in file:		610934d25523dced00d2222a43e535aa
MD5 hash calculated over data:		610934d25523dced00d2222a43e535aa

Single file: /Single Files/libewf-20110610/libmfdata/Makefile.am
MD5 hash stored in file:		6e452c17b6fd1bf3b703c23549fb16c2
MD5 hash calculated over data:		6e452c17b6fd1bf3b703c23549fb16c2

Single file: /Single Files/libewf-20110610/libmfdata/Makefile.in
MD5 hash stored in file:		cc732f86d5bd3a67c801e3898d41bcab
MD5 hash calculated over data:		cc732f86d5bd3a67c801e3898d41bcab

Single file: /Single Files/libewf-20110610/libnotify/libnotify.c
MD5 hash stored in file:		d4c432814efca3de964e180158ae8e92
MD5 hash calculated over data:		d4c432814efca3de964e180158ae8e92

Single file: /Single Files/libewf-20110610/libnotify/libnotify.h
MD5 hash stored in file:		84cf95c000f5623957f635ab917a4ce1
MD5 hash calculated over data:		84cf95c000f5623957f635ab917a4ce1

Single file: /Single Files/libewf-20110610/libnotify/libnotify_print.c
MD5 hash stored in file:		d856c5fe1280111707881a61cfd64e42
MD5 hash calculated over data:		d856c5fe1280111707881a61cfd64e42

Single file: /Single Files/libewf-20110610/libnotify/libnotify_print.h
MD5 hash stored in file:		dbfe3f1cfe3a221e5e95195229945ec2
MD5 hash calculated over data:		dbfe3f1cfe3a221e5e95195229945ec2

Single file: /Single Files/libewf-20110610/libnotify/libnotify_stream.c
MD5 hash stored in file:		8ce0d77251cecbafc9f6699735c77761
MD5 hash calculated over data:		8ce0d77251cecbafc9f6699735c77761

Single file: /Single Files/libewf-20110610/libnotify/libnotify_stream.h
MD5 hash stored in file:		9479ae2f014954c379428510ab2791d9
MD5 hash calculated over data:		9479ae2f014954c379428510ab2791d9

Single file: /Single Files/libewf-20110610/libnotify/Makefile.am
MD5 hash stored in file:		f4977221e04f73e51a299db6f9435c90
MD5 hash calculated over data:		f4977221e04f73e51a299db6f9435c90

Single file: /Single Files/libewf-20110610/libnotify/Makefile.in
MD5 hash stored in file:		e6b3832d4ec7420ab95504165588bbbf
MD5 hash calculated over data:		e6b3832d4ec7420ab95504165588bbbf

Single file: /Single Files/libewf-20110610/libodraw/libodraw_array_type.c
MD5 hash stored in file:		505a95e7b7545b5fa8eec33397b981bd
MD5 hash calculated over data:		505a95e7b7545b5fa8eec33397b981bd

Single file: /Single Files/libewf-20110610/libodraw/libodraw_array_type.h
MD5 hash stored in file:		9130da9d5d44e4dbcb5a492fe6aaaead
MD5 hash calculated over data:		9130da9d5d44e4dbcb5a492fe6aaaead

Single file: /Single Files/libewf-20110610/libodraw/libodraw_codepage.h
MD5 hash stored in file:		68db0100ff174b999fa8d0e6503421ca
MD5 hash calculated over data:		68db0100ff174b999fa8d0e6503421ca

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.c
MD5 hash stored in file:		063ec3572bfe8ac319b0bb97fe1a711b
MD5 hash calculated over data:		063ec3572bfe8ac319b0bb97fe1a711b

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.h
MD5 hash stored in file:		163935bc9f4b8dc926bac7abc674ad9f
MD5 hash calculated over data:		163935bc9f4b8dc926bac7abc674ad9f

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.y
MD5 hash stored in file:		c9faa6590d3f4dca57c52dd132e13390
MD5 hash calculated over data:		c9faa6590d3f4dca57c52dd132e13390

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_scanner.c
MD5 hash stored in file:		9982f2038a5630b44ece1c0638e01e58
MD5 hash calculated over data:		9982f2038a5630b44ece1c0638e01e58

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_scanner.l
MD5 hash stored in file:		5f72e4039287fc0c263942b0b30a999c
MD5 hash calculated over data:		5f72e4039287fc0c263942b0b30a999c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file.c
MD5 hash stored in file:		6bd71f32e7d77310154ac67362448d96
MD5 hash calculated over data:		6bd71f32e7d77310154ac67362448d96

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file.h
MD5 hash stored in file:		832d2eba9d4596efb5454bab8b2bb127
MD5 hash calculated over data:		832d2eba9d4596efb5454bab8b2bb127

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file_descriptor.c
MD5 hash stored in file:		684c8b99d9d54e926d3ad4aa4b723fa5
MD5 hash calculated over data:		684c8b99d9d54e926d3ad4aa4b723fa5

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file_descriptor.h
MD5 hash stored in file:		9309f54c77bd7cc6f82aac07b96a89dd
MD5 hash calculated over data:		9309f54c77bd7cc6f82aac07b96a89dd

Single file: /Single Files/libewf-20110610/libodraw/libodraw_debug.c
MD5 hash stored in file:		aeb0501891399721e9f79e1754b53df0
MD5 hash calculated over data:		aeb0501891399721e9f79e1754b53df0

Single file: /Single Files/libewf-20110610/libodraw/libodraw_debug.h
MD5 hash stored in file:		37760c1ba062529605561b9e7d034928
MD5 hash calculated over data:		37760c1ba062529605561b9e7d034928

Single file: /Single Files/libewf-20110610/libodraw/libodraw_definitions.h
MD5 hash stored in file:		ebff9f9a54281660ce15a170a8d246c0
MD5 hash calculated over data:		ebff9f9a54281660ce15a170a8d246c0

Single file: /Single Files/libewf-20110610/libodraw/libodraw_error.c
MD5 hash stored in file:		cb26e245b3cdb0066c57259b928bce1a
MD5 hash calculated over data:		cb26e245b3cdb0066c57259b928bce1a

Single file: /Single Files/libewf-20110610/libodraw/libodraw_error.h
MD5 hash stored in file:		68aad6a6ad3d944fd1e9f1800d08187e
MD5 hash calculated over data:		68aad6a6ad3d944fd1e9f1800d08187e

Single file: /Single Files/libewf-20110610/libodraw/libodraw_extern.h
MD5 hash stored in file:		fcc3f3e2128a5750c710380bcbd8c3c3
MD5 hash calculated over data:		fcc3f3e2128a5750c710380bcbd8c3c3

Single file: /Single Files/libewf-20110610/libodraw/libodraw_handle.c
MD5 hash stored in file:		d00131b014dbb2796c2cd65cf10e4ebe
MD5 hash calculated over data:		d00131b014dbb2796c2cd65cf10e4ebe

Single file: /Single Files/libewf-20110610/libodraw/libodraw_handle.h
MD5 hash stored in file:		64ded20c8c9eb620a11f826ed7a07c99
MD5 hash calculated over data:		64ded20c8c9eb620a11f826ed7a07c99

Single file: /Single Files/libewf-20110610/libodraw/libodraw_io_handle.c
MD5 hash stored in file:		95f2f32cb2e4fdba6ceef96eb2c5b10c
MD5 hash calculated over data:		95f2f32cb2e4fdba6ceef96eb2c5b10c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_io_handle.h
MD5 hash stored in file:		56417dc9677885412e18b03bcbb67def
MD5 hash calculated over data:		56417dc9677885412e18b03bcbb67def

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libbfio.h
MD5 hash stored in file:		121cf71bd3bee555c7e40a18bf2dfe6e
MD5 hash calculated over data:		121cf71bd3bee555c7e40a18bf2dfe6e

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libfvalue.h
MD5 hash stored in file:		5f658a8a15113bed65f1cb4dbcea90d0
MD5 hash calculated over data:		5f658a8a15113bed65f1cb4dbcea90d0

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libuna.h
MD5 hash stored in file:		987f7daa28a553ee0bd386621200f622
MD5 hash calculated over data:		987f7daa28a553ee0bd386621200f622

Single file: /Single Files/libewf-20110610/libodraw/libodraw_metadata.c
MD5 hash stored in file:		506c402304da8fdc759ad3c81853166c
MD5 hash calculated over data:		506c402304da8fdc759ad3c81853166c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_metadata.h
MD5 hash stored in file:		60ba47da46271bf38674ffc08584849a
MD5 hash calculated over data:		60ba47da46271bf38674ffc08584849a

Single file: /Single Files/libewf-20110610/libodraw/libodraw_notify.c
MD5 hash stored in file:		f056c88938dc6d05df48085c2ff00c94
MD5 hash calculated over data:		f056c88938dc6d05df48085c2ff00c94

Single file: /Single Files/libewf-20110610/libodraw/libodraw_notify.h
MD5 hash stored in file:		3e2f32e0cc3e7a1cdb93cf72aabd8c5d
MD5 hash calculated over data:		3e2f32e0cc3e7a1cdb93cf72aabd8c5d

Single file: /Single Files/libewf-20110610/libodraw/libodraw_sector_range.c
MD5 hash stored in file:		bc68be18a44c093252614cc29afe3a41
MD5 hash calculated over data:		bc68be18a44c093252614cc29afe3a41

Single file: /Single Files/libewf-20110610/libodraw/libodraw_sector_range.h
MD5 hash stored in file:		faeebd2dcee7f2ce50e640e107ea2869
MD5 hash calculated over data:		faeebd2dcee7f2ce50e640e107ea2869

Single file: /Single Files/libewf-20110610/libodraw/libodraw_support.c
MD5 hash stored in file:		c1d582dd1ddd8faef10197f14c5205eb
MD5 hash calculated over data:		c1d582dd1ddd8faef10197f14c5205eb

Single file: /Single Files/libewf-20110610/libodraw/libodraw_support.h
MD5 hash stored in file:		8284f3c0cc34a0ca95e2085e90566127
MD5 hash calculated over data:		8284f3c0cc34a0ca95e2085e90566127

Single file: /Single Files/libewf-20110610/libodraw/libodraw_track_value.c
MD5 hash stored in file:		1411f23cd0725d5f65b55a5f89a80e2a
MD5 hash calculated over data:		1411f23cd0725d5f65b55a5f89a80e2a

Single file: /Single Files/libewf-20110610/libodraw/libodraw_track_value.h
MD5 hash stored in file:		14237ba7818bfc43d1b94ea266508cf8
MD5 hash calculated over data:		14237ba7818bfc43d1b94ea266508cf8

Single file: /Single Files/libewf-20110610/libodraw/libodraw_types.h
MD5 hash stored in file:		a1e6509007790a0613ba27a6b0632676
MD5 hash calculated over data:		a1e6509007790a0613ba27a6b0632676

Single file: /Single Files/libewf-20110610/libodraw/Makefile.am
MD5 hash stored in file:		0f8805d1941f4603bbfab0ba84e2b86d
MD5 hash calculated over data:		0f8805d1941f4603bbfab0ba84e2b86d

Single file: /Single Files/libewf-20110610/libodraw/Makefile.in
MD5 hash stored in file:		c43d64056eff73317648898a76902911
MD5 hash calculated over data:		c43d64056eff73317648898a76902911

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_ata.c
MD5 hash stored in file:		7829edab6841979434744527cc398413
MD5 hash calculated over data:		7829edab6841979434744527cc398413

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_ata.h
MD5 hash stored in file:		d6f37e1c4d993dbabeb3b8257c4a99fa
MD5 hash calculated over data:		d6f37e1c4d993dbabeb3b8257c4a99fa

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_codepage.h
MD5 hash stored in file:		0819af019909b3ce23a0837fd9440024
MD5 hash calculated over data:		0819af019909b3ce23a0837fd9440024

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_definitions.h
MD5 hash stored in file:		aa931392aed33d50cfc846650ed79f33
MD5 hash calculated over data:		aa931392aed33d50cfc846650ed79f33

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error.c
MD5 hash stored in file:		e8dab93b1c86bcf5f4c67e7e20b073e6
MD5 hash calculated over data:		e8dab93b1c86bcf5f4c67e7e20b073e6

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error.h
MD5 hash stored in file:		b06a7ddec4110dfc5be8189b178d072e
MD5 hash calculated over data:		b06a7ddec4110dfc5be8189b178d072e

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error_string.c
MD5 hash stored in file:		551179aa952a47f9d9108e24e984e6d8
MD5 hash calculated over data:		551179aa952a47f9d9108e24e984e6d8

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error_string.h
MD5 hash stored in file:		b92c8e31554986e16903cc941762f00c
MD5 hash calculated over data:		b92c8e31554986e16903cc941762f00c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_extern.h
MD5 hash stored in file:		b4edfe215a9f27a9352047f7fa3a30db
MD5 hash calculated over data:		b4edfe215a9f27a9352047f7fa3a30db

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_handle.c
MD5 hash stored in file:		c4fb9265583cbb2dc7544138bead1206
MD5 hash calculated over data:		c4fb9265583cbb2dc7544138bead1206

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_handle.h
MD5 hash stored in file:		b997d40621b81af54fb90acf3098863c
MD5 hash calculated over data:		b997d40621b81af54fb90acf3098863c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_legacy.c
MD5 hash stored in file:		ce03c24228457e9906d31a84f17a30e7
MD5 hash calculated over data:		ce03c24228457e9906d31a84f17a30e7

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_legacy.h
MD5 hash stored in file:		5bf7fb5081e31ee7800f42cd5394f755
MD5 hash calculated over data:		5bf7fb5081e31ee7800f42cd5394f755

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_libuna.h
MD5 hash stored in file:		3580c810f1d53b3da8a62b8f6c7c94a5
MD5 hash calculated over data:		3580c810f1d53b3da8a62b8f6c7c94a5

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_list_type.c
MD5 hash stored in file:		27ad1aa1e2f2f49ef56a94ba7022c6e3
MD5 hash calculated over data:		27ad1aa1e2f2f49ef56a94ba7022c6e3

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_list_type.h
MD5 hash stored in file:		cbf4cf3cde1ad57d0b2f280e406e9b3d
MD5 hash calculated over data:		cbf4cf3cde1ad57d0b2f280e406e9b3d

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_metadata.c
MD5 hash stored in file:		053ea75e06c9588d8f5d6cc63789aac8
MD5 hash calculated over data:		053ea75e06c9588d8f5d6cc63789aac8

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_metadata.h
MD5 hash stored in file:		0ae500c9368f86f517db1ee45125fd5c
MD5 hash calculated over data:		0ae500c9368f86f517db1ee45125fd5c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_notify.c
MD5 hash stored in file:		f009d3c411785fb27cf10956459e0a0e
MD5 hash calculated over data:		f009d3c411785fb27cf10956459e0a0e

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_notify.h
MD5 hash stored in file:		c0b277deb3b6672894f06d48eb6260e5
MD5 hash calculated over data:		c0b277deb3b6672894f06d48eb6260e5

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_offset_list.c
MD5 hash stored in file:		41e03d9713ab8497a7d5c7bcc192ba42
MD5 hash calculated over data:		41e03d9713ab8497a7d5c7bcc192ba42

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_offset_list.h
MD5 hash stored in file:		ae3c69ba6c635b30a77ed0b27ba5275b
MD5 hash calculated over data:		ae3c69ba6c635b30a77ed0b27ba5275b

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_optical_disk.c
MD5 hash stored in file:		ea36b436cdcaf6d6da42b35b0c09dfb9
MD5 hash calculated over data:		ea36b436cdcaf6d6da42b35b0c09dfb9

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_optical_disk.h
MD5 hash stored in file:		7597e5392a92dd905d8f1dd1c3daffa6
MD5 hash calculated over data:		7597e5392a92dd905d8f1dd1c3daffa6

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_scsi.c
MD5 hash stored in file:		00f8f4bf77878c2b58e14cd0d4e23213
MD5 hash calculated over data:		00f8f4bf77878c2b58e14cd0d4e23213

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_scsi.h
MD5 hash stored in file:		31416347e06b6f74c3b703db3aef3cbc
MD5 hash calculated over data:		31416347e06b6f74c3b703db3aef3cbc

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_sector_list.c
MD5 hash stored in file:		e547c655db1a7f31f1f765da94ae4acf
MD5 hash calculated over data:		e547c655db1a7f31f1f765da94ae4acf

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_sector_list.h
MD5 hash stored in file:		3bb7b2a6d8de0e5fc716c6eef733148f
MD5 hash calculated over data:		3bb7b2a6d8de0e5fc716c6eef733148f

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_string.c
MD5 hash stored in file:		eb2b9038b327512f103c2a56281178fa
MD5 hash calculated over data:		eb2b9038b327512f103c2a56281178fa

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_string.h
MD5 hash stored in file:		e92b6d4e35d8deafc2151bbc65559b16
MD5 hash calculated over data:		e92b6d4e35d8deafc2151bbc65559b16

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_support.c
MD5 hash stored in file:		0e1f2d598a6473720964865803fd8773
MD5 hash calculated over data:		0e1f2d598a6473720964865803fd8773

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_support.h
MD5 hash stored in file:		f67b6f507998a8934b64818ba0348aae
MD5 hash calculated over data:		f67b6f507998a8934b64818ba0348aae

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_types.h
MD5 hash stored in file:		cea397dd3dda555f12485ff9d5a2e4c4
MD5 hash calculated over data:		cea397dd3dda555f12485ff9d5a2e4c4

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_unused.h
MD5 hash stored in file:		d793d58925055f8d5087e70b130e1a77
MD5 hash calculated over data:		d793d58925055f8d5087e70b130e1a77

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_usb.c
MD5 hash stored in file:		3e3ccc8a1ebfd4f10aea6265e8401950
MD5 hash calculated over data:		3e3ccc8a1ebfd4f10aea6265e8401950

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_usb.h
MD5 hash stored in file:		038a5752168686b9e0e07deb405b203f
MD5 hash calculated over data:		038a5752168686b9e0e07deb405b203f

Single file: /Single Files/libewf-20110610/libsmdev/Makefile.am
MD5 hash stored in file:		cd9360bda146af2495fd527b52d41cd7
MD5 hash calculated over data:		cd9360bda146af2495fd527b52d41cd7

Single file: /Single Files/libewf-20110610/libsmdev/Makefile.in
MD5 hash stored in file:		ab8470da43e2fb5365b240c8c7bc6a47
MD5 hash calculated over data:		ab8470da43e2fb5365b240c8c7bc6a47

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_codepage.h
MD5 hash stored in file:		5ad558f16015ca71a4460bf0053d3c0b
MD5 hash calculated over data:		5ad558f16015ca71a4460bf0053d3c0b

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_definitions.h
MD5 hash stored in file:		73fc90ceee0a0a2a0e2e81ffb73510ab
MD5 hash calculated over data:		73fc90ceee0a0a2a0e2e81ffb73510ab

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_error.c
MD5 hash stored in file:		ffc05df80c498236b7211ef1a7392b00
MD5 hash calculated over data:		ffc05df80c498236b7211ef1a7392b00

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_error.h
MD5 hash stored in file:		12ed783e9d0a93f2585093b5f7387c2e
MD5 hash calculated over data:		12ed783e9d0a93f2585093b5f7387c2e

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_extern.h
MD5 hash stored in file:		7b380a894091bc94477c3694e69f7899
MD5 hash calculated over data:		7b380a894091bc94477c3694e69f7899

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_filename.c
MD5 hash stored in file:		e751feefe9790d8a95bfa2d234346790
MD5 hash calculated over data:		e751feefe9790d8a95bfa2d234346790

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_filename.h
MD5 hash stored in file:		9f7c0f2b6abf1b5d855e7d737562cb20
MD5 hash calculated over data:		9f7c0f2b6abf1b5d855e7d737562cb20

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_handle.c
MD5 hash stored in file:		b368ab24fd48adc72cbf3fabc05f0943
MD5 hash calculated over data:		b368ab24fd48adc72cbf3fabc05f0943

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_handle.h
MD5 hash stored in file:		0985dae82569b0d3c5760869cffd6aa4
MD5 hash calculated over data:		0985dae82569b0d3c5760869cffd6aa4

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_information_file.c
MD5 hash stored in file:		1d8dab15c1f6223a07c7a2eb182be170
MD5 hash calculated over data:		1d8dab15c1f6223a07c7a2eb182be170

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_information_file.h
MD5 hash stored in file:		849b079f07a4cee86bc654e8b8bf70e7
MD5 hash calculated over data:		849b079f07a4cee86bc654e8b8bf70e7

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_legacy.c
MD5 hash stored in file:		f513b8e708f36c5166947a70c690de40
MD5 hash calculated over data:		f513b8e708f36c5166947a70c690de40

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_legacy.h
MD5 hash stored in file:		1851c8bca1676a94d50cedb384f058bf
MD5 hash calculated over data:		1851c8bca1676a94d50cedb384f058bf

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libbfio.h
MD5 hash stored in file:		057344f324bf954d1eca44974c0d1d1c
MD5 hash calculated over data:		057344f324bf954d1eca44974c0d1d1c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libfvalue.h
MD5 hash stored in file:		aab278bbf282d14d54ea630f5c1e3af0
MD5 hash calculated over data:		aab278bbf282d14d54ea630f5c1e3af0

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libmfdata.h
MD5 hash stored in file:		b932600a5959f104915c123e1b454a05
MD5 hash calculated over data:		b932600a5959f104915c123e1b454a05

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libuna.h
MD5 hash stored in file:		13356705454751d51a5461bd6b8f2fba
MD5 hash calculated over data:		13356705454751d51a5461bd6b8f2fba

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_metadata.c
MD5 hash stored in file:		0c6ed7f6455b3dcec21d75fa71ad6d2c
MD5 hash calculated over data:		0c6ed7f6455b3dcec21d75fa71ad6d2c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_metadata.h
MD5 hash stored in file:		a2a2ae8d08fc0956ca372d66a5eae93f
MD5 hash calculated over data:		a2a2ae8d08fc0956ca372d66a5eae93f

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_notify.c
MD5 hash stored in file:		ac508c61d60e4cd39a5788a85b8f6ccd
MD5 hash calculated over data:		ac508c61d60e4cd39a5788a85b8f6ccd

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_notify.h
MD5 hash stored in file:		f2a2cbf4a64cc68472ccf0bd6a80266a
MD5 hash calculated over data:		f2a2cbf4a64cc68472ccf0bd6a80266a

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_support.c
MD5 hash stored in file:		4799baeba762b3412236e3d8e9fa29ba
MD5 hash calculated over data:		4799baeba762b3412236e3d8e9fa29ba

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_support.h
MD5 hash stored in file:		448617a1dcb4438c747b6c42d2cbae25
MD5 hash calculated over data:		448617a1dcb4438c747b6c42d2cbae25

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_types.h
MD5 hash stored in file:		1ae48bd5de90ede1c08f322b2f0b6b2f
MD5 hash calculated over data:		1ae48bd5de90ede1c08f322b2f0b6b2f

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_unused.h
MD5 hash stored in file:		991f59edd6a044f2b076581519079a3f
MD5 hash calculated over data:		991f59edd6a044f2b076581519079a3f

Single file: /Single Files/libewf-20110610/libsmraw/Makefile.am
MD5 hash stored in file:		978bdae778c38277c8022849ecb92080
MD5 hash calculated over data:		978bdae778c38277c8022849ecb92080

Single file: /Single Files/libewf-20110610/libsmraw/Makefile.in
MD5 hash stored in file:		aae8cf9f6c46fc776a33b4a34338dbd0
MD5 hash calculated over data:		aae8cf9f6c46fc776a33b4a34338dbd0

Single file: /Single Files/libewf-20110610/libsystem/libsystem.h
MD5 hash stored in file:		0edc395f969cd38d56c1598953e4caed
MD5 hash calculated over data:		0edc395f969cd38d56c1598953e4caed

Single file: /Single Files/libewf-20110610/libsystem/libsystem_date_time.c
MD5 hash stored in file:		aee5bd361a2ed44b9c50400a16673b7c
MD5 hash calculated over data:		aee5bd361a2ed44b9c50400a16673b7c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_date_time.h
MD5 hash stored in file:		4e47833b7c80a358ff68a338a6083030
MD5 hash calculated over data:		4e47833b7c80a358ff68a338a6083030

Single file: /Single Files/libewf-20110610/libsystem/libsystem_directory.h
MD5 hash stored in file:		a71aea4df9b675b2bebfcb2e07ac1714
MD5 hash calculated over data:		a71aea4df9b675b2bebfcb2e07ac1714

Single file: /Single Files/libewf-20110610/libsystem/libsystem_directory_io.h
MD5 hash stored in file:		1d8e12b14f23a52ee41f0203a5413d24
MD5 hash calculated over data:		1d8e12b14f23a52ee41f0203a5413d24

Single file: /Single Files/libewf-20110610/libsystem/libsystem_error_string.c
MD5 hash stored in file:		0ca8086a744a573892b4100a35195cc5
MD5 hash calculated over data:		0ca8086a744a573892b4100a35195cc5

Single file: /Single Files/libewf-20110610/libsystem/libsystem_error_string.h
MD5 hash stored in file:		7a398180149854478a688da7e08c078a
MD5 hash calculated over data:		7a398180149854478a688da7e08c078a

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file.c
MD5 hash stored in file:		03da7ba4501a83bcc81efdbc59d5672c
MD5 hash calculated over data:		03da7ba4501a83bcc81efdbc59d5672c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file.h
MD5 hash stored in file:		36d42e76a7d2f6710292e9cfd34f681b
MD5 hash calculated over data:		36d42e76a7d2f6710292e9cfd34f681b

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file_io.h
MD5 hash stored in file:		2f9b50d6b6bcd3e1decd744853a575e3
MD5 hash calculated over data:		2f9b50d6b6bcd3e1decd744853a575e3

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file_stream.h
MD5 hash stored in file:		f6243874542532345f86f8ebf6951e53
MD5 hash calculated over data:		f6243874542532345f86f8ebf6951e53

Single file: /Single Files/libewf-20110610/libsystem/libsystem_find.h
MD5 hash stored in file:		634ecc5419b06f1123ea8d35a8ab57fc
MD5 hash calculated over data:		634ecc5419b06f1123ea8d35a8ab57fc

Single file: /Single Files/libewf-20110610/libsystem/libsystem_getopt.c
MD5 hash stored in file:		b38c275272f05c2a513b6e4f74f09807
MD5 hash calculated over data:		b38c275272f05c2a513b6e4f74f09807

Single file: /Single Files/libewf-20110610/libsystem/libsystem_getopt.h
MD5 hash stored in file:		e9595291e48689f1b56717908d7d0944
MD5 hash calculated over data:		e9595291e48689f1b56717908d7d0944

Single file: /Single Files/libewf-20110610/libsystem/libsystem_glob.c
MD5 hash stored in file:		40b816f8b00945099a93da73a26df0a1
MD5 hash calculated over data:		40b816f8b00945099a93da73a26df0a1

Single file: /Single Files/libewf-20110610/libsystem/libsystem_glob.h
MD5 hash stored in file:		dfd0d6453cd2e39f05897060a02e823c
MD5 hash calculated over data:		dfd0d6453cd2e39f05897060a02e823c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_i18n.h
MD5 hash stored in file:		b6d60803d0581840a031c9b2698b6ceb
MD5 hash calculated over data:		b6d60803d0581840a031c9b2698b6ceb

Single file: /Single Files/libewf-20110610/libsystem/libsystem_libuna.h
MD5 hash stored in file:		ee098457a10af39484657f6fdd966527
MD5 hash calculated over data:		ee098457a10af39484657f6fdd966527

Single file: /Single Files/libewf-20110610/libsystem/libsystem_notify.c
MD5 hash stored in file:		88c2eb6174537c8ce60941b213565b0f
MD5 hash calculated over data:		88c2eb6174537c8ce60941b213565b0f

Single file: /Single Files/libewf-20110610/libsystem/libsystem_notify.h
MD5 hash stored in file:		7de97f1010c5a875fe5502974f473eef
MD5 hash calculated over data:		7de97f1010c5a875fe5502974f473eef

Single file: /Single Files/libewf-20110610/libsystem/libsystem_path.c
MD5 hash stored in file:		1031f16ac98e30805b49fe9cef80f1c1
MD5 hash calculated over data:		1031f16ac98e30805b49fe9cef80f1c1

Single file: /Single Files/libewf-20110610/libsystem/libsystem_path.h
MD5 hash stored in file:		d32db89b055f320b65a35f6cbcf6a4d8
MD5 hash calculated over data:		d32db89b055f320b65a35f6cbcf6a4d8

Single file: /Single Files/libewf-20110610/libsystem/libsystem_signal.c
MD5 hash stored in file:		5d6a31b3d4fbd9eeb0396ec27401fe0f
MD5 hash calculated over data:		5d6a31b3d4fbd9eeb0396ec27401fe0f

Single file: /Single Files/libewf-20110610/libsystem/libsystem_signal.h
MD5 hash stored in file:		cea68eba3d63bc4472d91c6d91830061
MD5 hash calculated over data:		cea68eba3d63bc4472d91c6d91830061

Single file: /Single Files/libewf-20110610/libsystem/libsystem_split_values.c
MD5 hash stored in file:		df14c87ec31d93365f857516c590b0b5
MD5 hash calculated over data:		df14c87ec31d93365f857516c590b0b5

Single file: /Single Files/libewf-20110610/libsystem/libsystem_split_values.h
MD5 hash stored in file:		74f89fa55c5209b18c4a21a2aa7a7d2c
MD5 hash calculated over data:		74f89fa55c5209b18c4a21a2aa7a7d2c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_string.c
MD5 hash stored in file:		afd59cd734545aaf37948d94f244e866
MD5 hash calculated over data:		afd59cd734545aaf37948d94f244e866

Single file: /Single Files/libewf-20110610/libsystem/libsystem_string.h
MD5 hash stored in file:		56a480e73845152f4687d12a19ba60d0
MD5 hash calculated over data:		56a480e73845152f4687d12a19ba60d0

Single file: /Single Files/libewf-20110610/libsystem/libsystem_support.c
MD5 hash stored in file:		085c3604d802ca502cd2779840d73b8f
MD5 hash calculated over data:		085c3604d802ca502cd2779840d73b8f

Single file: /Single Files/libewf-20110610/libsystem/libsystem_support.h
MD5 hash stored in file:		e2bed70882f72ea4ce0e437a310e934a
MD5 hash calculated over data:		e2bed70882f72ea4ce0e437a310e934a

Single file: /Single Files/libewf-20110610/libsystem/libsystem_unused.h
MD5 hash stored in file:		191c1619489233859987dc703baaa822
MD5 hash calculated over data:		191c1619489233859987dc703baaa822

Single file: /Single Files/libewf-20110610/libsystem/Makefile.am
MD5 hash stored in file:		228ca54abe8b967acc0b903e03fb05e4
MD5 hash calculated over data:		228ca54abe8b967acc0b903e03fb05e4

Single file: /Single Files/libewf-20110610/libsystem/Makefile.in
MD5 hash stored in file:		778a375d2b7bd9148d090441796fa2fd
MD5 hash calculated over data:		778a375d2b7bd9148d090441796fa2fd

Single file: /Single Files/libewf-20110610/libuna/libuna_base16_stream.c
MD5 hash stored in file:		319083c983dc2e092a6a0cf8ed880ec7
MD5 hash calculated over data:		319083c983dc2e092a6a0cf8ed880ec7

Single file: /Single Files/libewf-20110610/libuna/libuna_base16_stream.h
MD5 hash stored in file:		92fe272f99041913d61dfb7693a6df12
MD5 hash calculated over data:		92fe272f99041913d61dfb7693a6df12

Single file: /Single Files/libewf-20110610/libuna/libuna_base64url_stream.c
MD5 hash stored in file:		164aa147c4d69e326af1300c930a669b
MD5 hash calculated over data:		164aa147c4d69e326af1300c930a669b

Single file: /Single Files/libewf-20110610/libuna/libuna_base64url_stream.h
MD5 hash stored in file:		0029960480b80410ccfe516fdf2c1d04
MD5 hash calculated over data:		0029960480b80410ccfe516fdf2c1d04

Single file: /Single Files/libewf-20110610/libuna/libuna_base64_stream.c
MD5 hash stored in file:		a71b1d83431c66b6b7077e430679b061
MD5 hash calculated over data:		a71b1d83431c66b6b7077e430679b061

Single file: /Single Files/libewf-20110610/libuna/libuna_base64_stream.h
MD5 hash stored in file:		5c39393e72896a55f5bda102bd04dfed
MD5 hash calculated over data:		5c39393e72896a55f5bda102bd04dfed

Single file: /Single Files/libewf-20110610/libuna/libuna_byte_stream.c
MD5 hash stored in file:		b746bb5b41e93396bcdce49d8eefaf66
MD5 hash calculated over data:		b746bb5b41e93396bcdce49d8eefaf66

Single file: /Single Files/libewf-20110610/libuna/libuna_byte_stream.h
MD5 hash stored in file:		fd9bc5117e8676cfd0950b7b98f6186c
MD5 hash calculated over data:		fd9bc5117e8676cfd0950b7b98f6186c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_ascii.h
MD5 hash stored in file:		1c11354401a3f5e55360fa87119dd275
MD5 hash calculated over data:		1c11354401a3f5e55360fa87119dd275

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_1.h
MD5 hash stored in file:		1afa9a6fd5278729701278322a5ca096
MD5 hash calculated over data:		1afa9a6fd5278729701278322a5ca096

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_10.c
MD5 hash stored in file:		482c098338f4940bc6eff3fc7f68b70f
MD5 hash calculated over data:		482c098338f4940bc6eff3fc7f68b70f

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_10.h
MD5 hash stored in file:		fc1b07f1a8f4fbdba936c4680a971f22
MD5 hash calculated over data:		fc1b07f1a8f4fbdba936c4680a971f22

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_11.h
MD5 hash stored in file:		4b4322fef988b166bae0de664c461d91
MD5 hash calculated over data:		4b4322fef988b166bae0de664c461d91

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_13.c
MD5 hash stored in file:		b5444aec1cde48e8b4d6cdef21e2a998
MD5 hash calculated over data:		b5444aec1cde48e8b4d6cdef21e2a998

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_13.h
MD5 hash stored in file:		7d5ba45263ed5279d1381e2dfef490d4
MD5 hash calculated over data:		7d5ba45263ed5279d1381e2dfef490d4

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_14.c
MD5 hash stored in file:		bf6ce53e3e803884f8a4a433885439d4
MD5 hash calculated over data:		bf6ce53e3e803884f8a4a433885439d4

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_14.h
MD5 hash stored in file:		9cf936c662bc4fb644c497f575e84ae9
MD5 hash calculated over data:		9cf936c662bc4fb644c497f575e84ae9

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_15.c
MD5 hash stored in file:		de39ca334d2dec8ee560d390d921eaaa
MD5 hash calculated over data:		de39ca334d2dec8ee560d390d921eaaa

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_15.h
MD5 hash stored in file:		2ea98949200e9c366d81c739495efc8d
MD5 hash calculated over data:		2ea98949200e9c366d81c739495efc8d

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_16.c
MD5 hash stored in file:		b589a200bb6fc731d2b8a522611f26ad
MD5 hash calculated over data:		b589a200bb6fc731d2b8a522611f26ad

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_16.h
MD5 hash stored in file:		515239fc0d8c49640bfa53235170f64a
MD5 hash calculated over data:		515239fc0d8c49640bfa53235170f64a

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_2.c
MD5 hash stored in file:		69ee6117abe66be264cb5ec26a18c5ed
MD5 hash calculated over data:		69ee6117abe66be264cb5ec26a18c5ed

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_2.h
MD5 hash stored in file:		4678dd52dd2d93c3de886184b233ac96
MD5 hash calculated over data:		4678dd52dd2d93c3de886184b233ac96

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_3.c
MD5 hash stored in file:		c92284c09e520d0a976187190d68f9a5
MD5 hash calculated over data:		c92284c09e520d0a976187190d68f9a5

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_3.h
MD5 hash stored in file:		f8b1c077cfde7ad5f486b0e74c6335b1
MD5 hash calculated over data:		f8b1c077cfde7ad5f486b0e74c6335b1

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_4.c
MD5 hash stored in file:		c5b9a87b15b33c406989f029e37043aa
MD5 hash calculated over data:		c5b9a87b15b33c406989f029e37043aa

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_4.h
MD5 hash stored in file:		f9476345a89d35252840b8b5af494f66
MD5 hash calculated over data:		f9476345a89d35252840b8b5af494f66

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_5.c
MD5 hash stored in file:		6a456bd5a75c94e22d301ddeaaa2bff4
MD5 hash calculated over data:		6a456bd5a75c94e22d301ddeaaa2bff4

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_5.h
MD5 hash stored in file:		3be147683bdd34ce98805f284c9c02ef
MD5 hash calculated over data:		3be147683bdd34ce98805f284c9c02ef

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_6.c
MD5 hash stored in file:		b4dfae8b7f9dc682c4f4dda0ebbfefab
MD5 hash calculated over data:		b4dfae8b7f9dc682c4f4dda0ebbfefab

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_6.h
MD5 hash stored in file:		2887debe6b91a7117286fbf1a966962d
MD5 hash calculated over data:		2887debe6b91a7117286fbf1a966962d

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_7.c
MD5 hash stored in file:		dd27aff07bc82aa0b26c50c422764709
MD5 hash calculated over data:		dd27aff07bc82aa0b26c50c422764709

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_7.h
MD5 hash stored in file:		2be01d144d2f5879c23d4cb0da2df0fc
MD5 hash calculated over data:		2be01d144d2f5879c23d4cb0da2df0fc

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_8.c
MD5 hash stored in file:		223c969528f753b8652ec5a2a1f5e99f
MD5 hash calculated over data:		223c969528f753b8652ec5a2a1f5e99f

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_8.h
MD5 hash stored in file:		8aecaba2530c30727ff1ff7b7086b38b
MD5 hash calculated over data:		8aecaba2530c30727ff1ff7b7086b38b

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_9.c
MD5 hash stored in file:		ee29acef5eb2519b663765ebc8fd5835
MD5 hash calculated over data:		ee29acef5eb2519b663765ebc8fd5835

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_9.h
MD5 hash stored in file:		54f8510974b503ab8d5d6f3304ee480f
MD5 hash calculated over data:		54f8510974b503ab8d5d6f3304ee480f

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_r.c
MD5 hash stored in file:		9b66f1998372e89fab42e9523d90a96d
MD5 hash calculated over data:		9b66f1998372e89fab42e9523d90a96d

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_r.h
MD5 hash stored in file:		e90aec42777cd52f1fc647583e791131
MD5 hash calculated over data:		e90aec42777cd52f1fc647583e791131

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_u.c
MD5 hash stored in file:		da539fe3ce86043782bf9ad8db8fd315
MD5 hash calculated over data:		da539fe3ce86043782bf9ad8db8fd315

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_u.h
MD5 hash stored in file:		36060dd8eb8ee416fa5c6d3b06e8613e
MD5 hash calculated over data:		36060dd8eb8ee416fa5c6d3b06e8613e

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1250.c
MD5 hash stored in file:		a64d1dced92f1f9a144e1418a234ef11
MD5 hash calculated over data:		a64d1dced92f1f9a144e1418a234ef11

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1250.h
MD5 hash stored in file:		d9c28e62ec9ef5a51417293c9e7de1e8
MD5 hash calculated over data:		d9c28e62ec9ef5a51417293c9e7de1e8

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1251.c
MD5 hash stored in file:		3d0b358fd334ff1e2f139f454724e1a0
MD5 hash calculated over data:		3d0b358fd334ff1e2f139f454724e1a0

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1251.h
MD5 hash stored in file:		8dc6cf31155d274a0cd99f7265429210
MD5 hash calculated over data:		8dc6cf31155d274a0cd99f7265429210

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1252.c
MD5 hash stored in file:		b0143db266888f7fb94e1806b834c4e6
MD5 hash calculated over data:		b0143db266888f7fb94e1806b834c4e6

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1252.h
MD5 hash stored in file:		74b85df17fbe9bb2b4210e8edc650c4d
MD5 hash calculated over data:		74b85df17fbe9bb2b4210e8edc650c4d

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1253.c
MD5 hash stored in file:		33292daa8827f169a8f4306f9e90dc77
MD5 hash calculated over data:		33292daa8827f169a8f4306f9e90dc77

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1253.h
MD5 hash stored in file:		e18c658943c82c2b8198f8885f8cfffe
MD5 hash calculated over data:		e18c658943c82c2b8198f8885f8cfffe

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1254.c
MD5 hash stored in file:		00e5daf8a6f5dbf679b7df006d1911d9
MD5 hash calculated over data:		00e5daf8a6f5dbf679b7df006d1911d9

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1254.h
MD5 hash stored in file:		a875095f246f5b970ebf89a69ce2648b
MD5 hash calculated over data:		a875095f246f5b970ebf89a69ce2648b

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1255.c
MD5 hash stored in file:		98dc518ff83e208a6fa1a06c52f5db17
MD5 hash calculated over data:		98dc518ff83e208a6fa1a06c52f5db17

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1255.h
MD5 hash stored in file:		f5564574a099841a24487207a573d24a
MD5 hash calculated over data:		f5564574a099841a24487207a573d24a

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1256.c
MD5 hash stored in file:		66891d1d65c11c876f76b2481d0d3b96
MD5 hash calculated over data:		66891d1d65c11c876f76b2481d0d3b96

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1256.h
MD5 hash stored in file:		7f9e6113c59e57353c7d3332b38bd7c8
MD5 hash calculated over data:		7f9e6113c59e57353c7d3332b38bd7c8

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1257.c
MD5 hash stored in file:		2cf96a9770416c983229010f62af4768
MD5 hash calculated over data:		2cf96a9770416c983229010f62af4768

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1257.h
MD5 hash stored in file:		06818fc40c25706e44f30141b2d5bcc7
MD5 hash calculated over data:		06818fc40c25706e44f30141b2d5bcc7

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1258.c
MD5 hash stored in file:		2173c0e59aa1d87cccf6e685c2bc5ac9
MD5 hash calculated over data:		2173c0e59aa1d87cccf6e685c2bc5ac9

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1258.h
MD5 hash stored in file:		a8d3dc0bc80d3a7b02e37c84dfe70872
MD5 hash calculated over data:		a8d3dc0bc80d3a7b02e37c84dfe70872

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_874.c
MD5 hash stored in file:		2aa59bd2b4e43a50f26cb6bfaef2ea1f
MD5 hash calculated over data:		2aa59bd2b4e43a50f26cb6bfaef2ea1f

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_874.h
MD5 hash stored in file:		6a29651a68f747e57ab7d3abf9042e38
MD5 hash calculated over data:		6a29651a68f747e57ab7d3abf9042e38

Single file: /Single Files/libewf-20110610/libuna/libuna_definitions.h
MD5 hash stored in file:		83f9c1df33bc335278d41d0e2c87fd43
MD5 hash calculated over data:		83f9c1df33bc335278d41d0e2c87fd43

Single file: /Single Files/libewf-20110610/libuna/libuna_error.h
MD5 hash stored in file:		100da5ab6cbe091ad577b34d891676db
MD5 hash calculated over data:		100da5ab6cbe091ad577b34d891676db

Single file: /Single Files/libewf-20110610/libuna/libuna_extern.h
MD5 hash stored in file:		04237fee6f9967ac08a2109359ffd8ec
MD5 hash calculated over data:		04237fee6f9967ac08a2109359ffd8ec

Single file: /Single Files/libewf-20110610/libuna/libuna_inline.h
MD5 hash stored in file:		c87133fafe550d2380e19614f544b200
MD5 hash calculated over data:		c87133fafe550d2380e19614f544b200

Single file: /Single Files/libewf-20110610/libuna/libuna_support.c
MD5 hash stored in file:		27ba65580eed2c08789578edffebc8c3
MD5 hash calculated over data:		27ba65580eed2c08789578edffebc8c3

Single file: /Single Files/libewf-20110610/libuna/libuna_support.h
MD5 hash stored in file:		4b1fa1df5076bfce3005e76835e3fd03
MD5 hash calculated over data:		4b1fa1df5076bfce3005e76835e3fd03

Single file: /Single Files/libewf-20110610/libuna/libuna_types.h
MD5 hash stored in file:		8838b34491ec49086f9efcf0e3f65f29
MD5 hash calculated over data:		8838b34491ec49086f9efcf0e3f65f29

Single file: /Single Files/libewf-20110610/libuna/libuna_unicode_character.c
MD5 hash stored in file:		0afb1812d1b67992106d11d5d317e07d
MD5 hash calculated over data:		0afb1812d1b67992106d11d5d317e07d

Single file: /Single Files/libewf-20110610/libuna/libuna_unicode_character.h
MD5 hash stored in file:		b1fd4124c6ae00c1bdd82b3f1bd629dc
MD5 hash calculated over data:		b1fd4124c6ae00c1bdd82b3f1bd629dc

Single file: /Single Files/libewf-20110610/libuna/libuna_unused.h
MD5 hash stored in file:		64a7e00b36b30c1dbecf7fbba84027d0
MD5 hash calculated over data:		64a7e00b36b30c1dbecf7fbba84027d0

Single file: /Single Files/libewf-20110610/libuna/libuna_url_stream.c
MD5 hash stored in file:		ce39a15fde3a3e97396926c3d64e2abd
MD5 hash calculated over data:		ce39a15fde3a3e97396926c3d64e2abd

Single file: /Single Files/libewf-20110610/libuna/libuna_url_stream.h
MD5 hash stored in file:		579d1edd3faae4635febd4953dd156f5
MD5 hash calculated over data:		579d1edd3faae4635febd4953dd156f5

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_stream.c
MD5 hash stored in file:		0bdc869e8a6f7dfa6e242bd6b361002d
MD5 hash calculated over data:		0bdc869e8a6f7dfa6e242bd6b361002d

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_stream.h
MD5 hash stored in file:		d08c462d8a398ab55417df3e3e8b8be8
MD5 hash calculated over data:		d08c462d8a398ab55417df3e3e8b8be8

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_string.c
MD5 hash stored in file:		6280856503a02116dc50ae4a986b0b46
MD5 hash calculated over data:		6280856503a02116dc50ae4a986b0b46

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_string.h
MD5 hash stored in file:		1e8c7b3c59bb048a654fc1413607335e
MD5 hash calculated over data:		1e8c7b3c59bb048a654fc1413607335e

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_stream.c
MD5 hash stored in file:		296a26480c11feb449b16da240593bcf
MD5 hash calculated over data:		296a26480c11feb449b16da240593bcf

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_stream.h
MD5 hash stored in file:		f620a330c076736c5eec12d64a4226be
MD5 hash calculated over data:		f620a330c076736c5eec12d64a4226be

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_string.c
MD5 hash stored in file:		f84f433a8befb63db8fbb4636a80f2e7
MD5 hash calculated over data:		f84f433a8befb63db8fbb4636a80f2e7

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_string.h
MD5 hash stored in file:		1aec7512214154f16c0470f005bf6bc4
MD5 hash calculated over data:		1aec7512214154f16c0470f005bf6bc4

Single file: /Single Files/libewf-20110610/libuna/libuna_utf7_stream.c
MD5 hash stored in file:		30638057c071715f051d041d5b77995b
MD5 hash calculated over data:		30638057c071715f051d041d5b77995b

Single file: /Single Files/libewf-20110610/libuna/libuna_utf7_stream.h
MD5 hash stored in file:		9942ffd6ed824a9d79a15275e83ab804
MD5 hash calculated over data:		9942ffd6ed824a9d79a15275e83ab804

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_stream.c
MD5 hash stored in file:		2a929eaa1480dda60d92782d8ecdde58
MD5 hash calculated over data:		2a929eaa1480dda60d92782d8ecdde58

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_stream.h
MD5 hash stored in file:		3f6eede0a93b75200e997d227b059497
MD5 hash calculated over data:		3f6eede0a93b75200e997d227b059497

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_string.c
MD5 hash stored in file:		4d31f639ed18ef1e73ee292c8e669a40
MD5 hash calculated over data:		4d31f639ed18ef1e73ee292c8e669a40

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_string.h
MD5 hash stored in file:		26dfe7d41e70f7e1eb0142b2c6631770
MD5 hash calculated over data:		26dfe7d41e70f7e1eb0142b2c6631770

Single file: /Single Files/libewf-20110610/libuna/Makefile.am
MD5 hash stored in file:		2f23ef58e68fa265a2655e69d57eec34
MD5 hash calculated over data:		2f23ef58e68fa265a2655e69d57eec34

Single file: /Single Files/libewf-20110610/libuna/Makefile.in
MD5 hash stored in file:		4c86855258581b22fedc218213ccc9e5
MD5 hash calculated over data:		4c86855258581b22fedc218213ccc9e5

Single file: /Single Files/libewf-20110610/ltmain.sh
MD5 hash stored in file:		0cfa0edd599b3ec14976d6306ea2ef18
MD5 hash calculated over data:		0cfa0edd599b3ec14976d6306ea2ef18

Single file: /Single Files/libewf-20110610/m4/gettext.m4
MD5 hash stored in file:		dab0e2ad4943514530c50faef831db6a
MD5 hash calculated over data:		dab0e2ad4943514530c50faef831db6a

Single file: /Single Files/libewf-20110610/m4/iconv.m4
MD5 hash stored in file:		54b7ef5e957ea5331a19790363d38f01
MD5 hash calculated over data:		54b7ef5e957ea5331a19790363d38f01

Single file: /Single Files/libewf-20110610/m4/lib-ld.m4
MD5 hash stored in file:		4a695a584ba1673823d08f782214ec0b
MD5 hash calculated over data:		4a695a584ba1673823d08f782214ec0b

Single file: /Single Files/libewf-20110610/m4/lib-link.m4
MD5 hash stored in file:		d8679cf4a25e4cf870c5cf6629a242d7
MD5 hash calculated over data:		d8679cf4a25e4cf870c5cf6629a242d7

Single file: /Single Files/libewf-20110610/m4/lib-prefix.m4
MD5 hash stored in file:		9c7b56be0858201c47702461a439f9bf
MD5 hash calculated over data:		9c7b56be0858201c47702461a439f9bf

Single file: /Single Files/libewf-20110610/m4/libtool.m4
MD5 hash stored in file:		68fe61a1c267bdd1a7a0f0aa7efedaa5
MD5 hash calculated over data:		68fe61a1c267bdd1a7a0f0aa7efedaa5

Single file: /Single Files/libewf-20110610/m4/ltoptions.m4
MD5 hash stored in file:		152941207b2a2348e1687f6d9430fdd4
MD5 hash calculated over data:		152941207b2a2348e1687f6d9430fdd4

Single file: /Single Files/libewf-20110610/m4/ltsugar.m4
MD5 hash stored in file:		bc2f6032c98896249eadb56177c7d357
MD5 hash calculated over data:		bc2f6032c98896249eadb56177c7d357

Single file: /Single Files/libewf-20110610/m4/ltversion.m4
MD5 hash stored in file:		3bba5357c51df8357a35c7e345712f3f
MD5 hash calculated over data:		3bba5357c51df8357a35c7e345712f3f

Single file: /Single Files/libewf-20110610/m4/lt~obsolete.m4
MD5 hash stored in file:		13eeb5a2026d18ffe6428827fc7ab406
MD5 hash calculated over data:		13eeb5a2026d18ffe6428827fc7ab406

Single file: /Single Files/libewf-20110610/m4/nls.m4
MD5 hash stored in file:		819c8e2ebb3b017d16dad3563cba360a
MD5 hash calculated over data:		819c8e2ebb3b017d16dad3563cba360a

Single file: /Single Files/libewf-20110610/m4/po.m4
MD5 hash stored in file:		4eafab509f1cc0c70f3281bec07fd77f
MD5 hash calculated over data:		4eafab509f1cc0c70f3281bec07fd77f

Single file: /Single Files/libewf-20110610/m4/progtest.m4
MD5 hash stored in file:		4fe3f809b636d924d9d3377197179d10
MD5 hash calculated over data:		4fe3f809b636d924d9d3377197179d10

Single file: /Single Files/libewf-20110610/macosx/Introduction.rtf
MD5 hash stored in file:		c824067b2903e8d3a10908f903ed0c67
MD5 hash calculated over data:		c824067b2903e8d3a10908f903ed0c67

Single file: /Single Files/libewf-20110610/macosx/Introduction.rtf.in
MD5 hash stored in file:		2079c96f7395fc93fd311b7e02ef71f3
MD5 hash calculated over data:		2079c96f7395fc93fd311b7e02ef71f3

Single file: /Single Files/libewf-20110610/macosx/libewf.pmproj
MD5 hash stored in file:		631916743c565e5a38828654f08ea9d4
MD5 hash calculated over data:		631916743c565e5a38828654f08ea9d4

Single file: /Single Files/libewf-20110610/macosx/License.rtf
MD5 hash stored in file:		2e18fe2b0044b31f3d9a05b118bf616f
MD5 hash calculated over data:		2e18fe2b0044b31f3d9a05b118bf616f

Single file: /Single Files/libewf-20110610/macosx/Makefile.am
MD5 hash stored in file:		f266c0460ab80088c39831598797376b
MD5 hash calculated over data:		f266c0460ab80088c39831598797376b

Single file: /Single Files/libewf-20110610/macosx/Makefile.in
MD5 hash stored in file:		5de1832210617e4738fca4fc4fbf6cc6
MD5 hash calculated over data:		5de1832210617e4738fca4fc4fbf6cc6

Single file: /Single Files/libewf-20110610/macosx/Readme.rtf
MD5 hash stored in file:		ec29c4ba3ffaa0a9c1e0b2163becffcd
MD5 hash calculated over data:		ec29c4ba3ffaa0a9c1e0b2163becffcd

Single file: /Single Files/libewf-20110610/Makefile.am
MD5 hash stored in file:		262ae9cc0b1bd926046838ba9dedb921
MD5 hash calculated over data:		262ae9cc0b1bd926046838ba9dedb921

Single file: /Single Files/libewf-20110610/Makefile.in
MD5 hash stored in file:		61b8d423828628f58b9b44cebf36ddc0
MD5 hash calculated over data:		61b8d423828628f58b9b44cebf36ddc0

Single file: /Single Files/libewf-20110610/manuals/ewfacquire.1
MD5 hash stored in file:		6f3e03284f008e4a00e21c82fbe0f52f
MD5 hash calculated over data:		6f3e03284f008e4a00e21c82fbe0f52f

Single file: /Single Files/libewf-20110610/manuals/ewfacquirestream.1
MD5 hash stored in file:		7eec792067d26819810d187531312870
MD5 hash calculated over data:		7eec792067d26819810d187531312870

Single file: /Single Files/libewf-20110610/manuals/ewfexport.1
MD5 hash stored in file:		9afbc53b5508298ddb6b21c0e977168f
MD5 hash calculated over data:		9afbc53b5508298ddb6b21c0e977168f

Single file: /Single Files/libewf-20110610/manuals/ewfinfo.1
MD5 hash stored in file:		ac187f19a3e393093711a9e5a919528c
MD5 hash calculated over data:		ac187f19a3e393093711a9e5a919528c

Single file: /Single Files/libewf-20110610/manuals/ewfverify.1
MD5 hash stored in file:		c74ca549b0f00f9f7109eecaedf362d2
MD5 hash calculated over data:		c74ca549b0f00f9f7109eecaedf362d2

Single file: /Single Files/libewf-20110610/manuals/libewf.3
MD5 hash stored in file:		be07a023da2d971d4b07372c56c826c2
MD5 hash calculated over data:		be07a023da2d971d4b07372c56c826c2

Single file: /Single Files/libewf-20110610/manuals/Makefile.am
MD5 hash stored in file:		296062ce03f2b53d72a9289f5ac1f268
MD5 hash calculated over data:		296062ce03f2b53d72a9289f5ac1f268

Single file: /Single Files/libewf-20110610/manuals/Makefile.in
MD5 hash stored in file:		a083b690b10629fdcdc0a71378c4e23a
MD5 hash calculated over data:		a083b690b10629fdcdc0a71378c4e23a

Single file: /Single Files/libewf-20110610/missing
MD5 hash stored in file:		9d9668fb32d0542b712be2c34ca79bd7
MD5 hash calculated over data:		9d9668fb32d0542b712be2c34ca79bd7

Single file: /Single Files/libewf-20110610/msvscpp/ewf.net/ewf.net_dll.vcproj
MD5 hash stored in file:		e06f1ecdd58f1a18e015cd59cf7ad312
MD5 hash calculated over data:		e06f1ecdd58f1a18e015cd59cf7ad312

Single file: /Single Files/libewf-20110610/msvscpp/ewfacquire/ewfacquire.vcproj
MD5 hash stored in file:		08029d1444422aafeea5f1c31b8e11d1
MD5 hash calculated over data:		08029d1444422aafeea5f1c31b8e11d1

Single file: /Single Files/libewf-20110610/msvscpp/ewfacquirestream/ewfacquirestream.vcproj
MD5 hash stored in file:		b6b6c165a05ac910cc7df46042a5b880
MD5 hash calculated over data:		b6b6c165a05ac910cc7df46042a5b880

Single file: /Single Files/libewf-20110610/msvscpp/ewfexport/ewfexport.vcproj
MD5 hash stored in file:		7792a956ca3ffd6da3e713f7bcae3060
MD5 hash calculated over data:		7792a956ca3ffd6da3e713f7bcae3060

Single file: /Single Files/libewf-20110610/msvscpp/ewfinfo/ewfinfo.vcproj
MD5 hash stored in file:		c9bc934dc027b93d7c5616b48380a8d8
MD5 hash calculated over data:		c9bc934dc027b93d7c5616b48380a8d8

Single file: /Single Files/libewf-20110610/msvscpp/ewfverify/ewfverify.vcproj
MD5 hash stored in file:		ba886a8f7fe55b867481dc119138825c
MD5 hash calculated over data:		ba886a8f7fe55b867481dc119138825c

Single file: /Single Files/libewf-20110610/msvscpp/libbfio/libbfio.vcproj
MD5 hash stored in file:		1818698704f7264ad3906d4df91524bf
MD5 hash calculated over data:		1818698704f7264ad3906d4df91524bf

Single file: /Single Files/libewf-20110610/msvscpp/libcstring/libcstring.vcproj
MD5 hash stored in file:		78a07cd508af2aa9be51d8b3c8fb70ef
MD5 hash calculated over data:		78a07cd508af2aa9be51d8b3c8fb70ef

Single file: /Single Files/libewf-20110610/msvscpp/liberror/liberror.vcproj
MD5 hash stored in file:		12a73bbee1896ee58418ef3cab5e4c22
MD5 hash calculated over data:		12a73bbee1896ee58418ef3cab5e4c22

Single file: /Single Files/libewf-20110610/msvscpp/libewf.sln
MD5 hash stored in file:		d964d37cb3bec52224c6337deb1ca5f4
MD5 hash calculated over data:		d964d37cb3bec52224c6337deb1ca5f4

Single file: /Single Files/libewf-20110610/msvscpp/libewf_dll/libewf_dll.vcproj
MD5 hash stored in file:		c9e5f3d816bd1206e58ace8e592def53
MD5 hash calculated over data:		c9e5f3d816bd1206e58ace8e592def53

Single file: /Single Files/libewf-20110610/msvscpp/libfvalue/libfvalue.vcproj
MD5 hash stored in file:		244a8e111b2f7829e6e90a164343473f
MD5 hash calculated over data:		244a8e111b2f7829e6e90a164343473f

Single file: /Single Files/libewf-20110610/msvscpp/libmfdata/libmfdata.vcproj
MD5 hash stored in file:		ec02ae243a8a34a42c8f27055bca4fb3
MD5 hash calculated over data:		ec02ae243a8a34a42c8f27055bca4fb3

Single file: /Single Files/libewf-20110610/msvscpp/libnotify/libnotify.vcproj
MD5 hash stored in file:		94a4e87b9ef34c2f03700b818ec0408c
MD5 hash calculated over data:		94a4e87b9ef34c2f03700b818ec0408c

Single file: /Single Files/libewf-20110610/msvscpp/libodraw/libodraw.vcproj
MD5 hash stored in file:		67716a2e534e078cbf5d78ebcd003afe
MD5 hash calculated over data:		67716a2e534e078cbf5d78ebcd003afe

Single file: /Single Files/libewf-20110610/msvscpp/libsmdev/libsmdev.vcproj
MD5 hash stored in file:		df016cb47c6a10dc1a7e34838d3e92b6
MD5 hash calculated over data:		df016cb47c6a10dc1a7e34838d3e92b6

Single file: /Single Files/libewf-20110610/msvscpp/libsmraw/libsmraw.vcproj
MD5 hash stored in file:		f9fc7fc182cee9522d8cf8618b221999
MD5 hash calculated over data:		f9fc7fc182cee9522d8cf8618b221999

Single file: /Single Files/libewf-20110610/msvscpp/libsystem/libsystem.vcproj
MD5 hash stored in file:		021414b1e4904737b1f06bfee235d758
MD5 hash calculated over data:		021414b1e4904737b1f06bfee235d758

Single file: /Single Files/libewf-20110610/msvscpp/libuna/libuna.vcproj
MD5 hash stored in file:		880f0175e63ca72acf459bb4d051b761
MD5 hash calculated over data:		880f0175e63ca72acf459bb4d051b761

Single file: /Single Files/libewf-20110610/msvscpp/Makefile.am
MD5 hash stored in file:		ae12492f7380247a3618a1a789c799d4
MD5 hash calculated over data:		ae12492f7380247a3618a1a789c799d4

Single file: /Single Files/libewf-20110610/msvscpp/Makefile.in
MD5 hash stored in file:		242b24b7fa122922e0fe6018dcc92ca4
MD5 hash calculated over data:		242b24b7fa122922e0fe6018dcc92ca4

Single file: /Single Files/libewf-20110610/msvscpp/zlib_dll/zlib_dll.vcproj
MD5 hash stored in file:		6501a7528eb7a1254753d179bc0ea023
MD5 hash calculated over data:		6501a7528eb7a1254753d179bc0ea023

Single file: /Single Files/libewf-20110610/NEWS
MD5 hash stored in file:		c711bf22f76e56e2a779a6d05776be0a
MD5 hash calculated over data:		c711bf22f76e56e2a779a6d05776be0a

Single file: /Single Files/libewf-20110610/po/boldquot.sed
MD5 hash stored in file:		9f72ef7fe3e7c7330c158be85dc1bd4c
MD5 hash calculated over data:		9f72ef7fe3e7c7330c158be85dc1bd4c

Single file: /Single Files/libewf-20110610/po/ChangeLog
MD5 hash stored in file:		d49836c715d70c6c03dadcbaa04804a9
MD5 hash calculated over data:		d49836c715d70c6c03dadcbaa04804a9

Single file: /Single Files/libewf-20110610/po/en@boldquot.header
MD5 hash stored in file:		140858226cbabd8977f21e2f29168bb1
MD5 hash calculated over data:		140858226cbabd8977f21e2f29168bb1

Single file: /Single Files/libewf-20110610/po/en@quot.header
MD5 hash stored in file:		4fab037eca87181f2066bda633c7aca7
MD5 hash calculated over data:		4fab037eca87181f2066bda633c7aca7

Single file: /Single Files/libewf-20110610/po/insert-header.sin
MD5 hash stored in file:		b8d349a13678a4e0e18c8ee06c1bebea
MD5 hash calculated over data:		b8d349a13678a4e0e18c8ee06c1bebea

Single file: /Single Files/libewf-20110610/po/Makefile.in.in
MD5 hash stored in file:		fb5188af94385b6525e302a7a5f8315d
MD5 hash calculated over data:		fb5188af94385b6525e302a7a5f8315d

Single file: /Single Files/libewf-20110610/po/Makevars
MD5 hash stored in file:		fcb7c2018e112f5cf3611ea33abd17a2
MD5 hash calculated over data:		fcb7c2018e112f5cf3611ea33abd17a2

Single file: /Single Files/libewf-20110610/po/Makevars.in
MD5 hash stored in file:		62320964c2662df73aebe20288bf9251
MD5 hash calculated over data:		62320964c2662df73aebe20288bf9251

Single file: /Single Files/libewf-20110610/po/POTFILES.in
MD5 hash stored in file:		0b9f9895401afa070d1166e7430621c6
MD5 hash calculated over data:		0b9f9895401afa070d1166e7430621c6

Single file: /Single Files/libewf-20110610/po/quot.sed
MD5 hash stored in file:		f652c7cf9496049a47b091513f120a45
MD5 hash calculated over data:		f652c7cf9496049a47b091513f120a45

Single file: /Single Files/libewf-20110610/po/remove-potcdate.sin
MD5 hash stored in file:		ae2ad0156895c4461ca32fe0524ef902
MD5 hash calculated over data:		ae2ad0156895c4461ca32fe0524ef902

Single file: /Single Files/libewf-20110610/po/Rules-quot
MD5 hash stored in file:		6bd69c891f952c0bdc2ac549a06349b2
MD5 hash calculated over data:		6bd69c891f952c0bdc2ac549a06349b2

Single file: /Single Files/libewf-20110610/pyewf/Makefile.am
MD5 hash stored in file:		6193de5eaae3528b23516d1b301937f9
MD5 hash calculated over data:		6193de5eaae3528b23516d1b301937f9

Single file: /Single Files/libewf-20110610/pyewf/Makefile.in
MD5 hash stored in file:		d317659d803ec92930fe28585e1889e1
MD5 hash calculated over data:		d317659d803ec92930fe28585e1889e1

Single file: /Single Files/libewf-20110610/pyewf/pyewf.c
MD5 hash stored in file:		507366523a94d58b1fb932bb05335dfc
MD5 hash calculated over data:		507366523a94d58b1fb932bb05335dfc

Single file: /Single Files/libewf-20110610/pyewf/pyewf.h
MD5 hash stored in file:		5ce006031a85e6909c7c588d8850ab97
MD5 hash calculated over data:		5ce006031a85e6909c7c588d8850ab97

Single file: /Single Files/libewf-20110610/pyewf/pyewf_handle.c
MD5 hash stored in file:		f7310c0dd92ff2dfd34398fbab88bf05
MD5 hash calculated over data:		f7310c0dd92ff2dfd34398fbab88bf05

Single file: /Single Files/libewf-20110610/pyewf/pyewf_handle.h
MD5 hash stored in file:		9de4a3674e065092caafc34693afe95b
MD5 hash calculated over data:		9de4a3674e065092caafc34693afe95b

Single file: /Single Files/libewf-20110610/pyewf/pyewf_metadata.c
MD5 hash stored in file:		ffef6a014599ce0624f57aea182c388f
MD5 hash calculated over data:		ffef6a014599ce0624f57aea182c388f

Single file: /Single Files/libewf-20110610/pyewf/pyewf_metadata.h
MD5 hash stored in file:		e1084636aa8137e803064f3e90db882b
MD5 hash calculated over data:		e1084636aa8137e803064f3e90db882b

Single file: /Single Files/libewf-20110610/pyewf/pyewf_python.h
MD5 hash stored in file:		8254b70b27de5b5ae4129150b776c34f
MD5 hash calculated over data:		8254b70b27de5b5ae4129150b776c34f

Single file: /Single Files/libewf-20110610/README
MD5 hash stored in file:		49590de5c6531b6f9dcbcb579fab603d
MD5 hash calculated over data:		49590de5c6531b6f9dcbcb579fab603d

Single file: /Single Files/libewf-20110610/README.mingw
MD5 hash stored in file:		807ef7e7bfe643fa2176fdbb79f92d68
MD5 hash calculated over data:		807ef7e7bfe643fa2176fdbb79f92d68

Single file: /Single Files/libewf-20110610/README.static
MD5 hash stored in file:		3e9860cee758b1cd0ecb2ae95a5181c9
MD5 hash calculated over data:		3e9860cee758b1cd0ecb2ae95a5181c9

Single file: /Single Files/libewf-20110610/tests/ewf_test_definitions.h
MD5 hash stored in file:		d77d993614734c60db5ee5289c705a58
MD5 hash calculated over data:		d77d993614734c60db5ee5289c705a58

Single file: /Single Files/libewf-20110610/tests/ewf_test_glob.c
MD5 hash stored in file:		598a32734fc3edd7ef32f2f595145b3d
MD5 hash calculated over data:		598a32734fc3edd7ef32f2f595145b3d

Single file: /Single Files/libewf-20110610/tests/ewf_test_read.c
MD5 hash stored in file:		93b27ec0c6879453859ef595f083e908
MD5 hash calculated over data:		93b27ec0c6879453859ef595f083e908

Single file: /Single Files/libewf-20110610/tests/ewf_test_read_write.c
MD5 hash stored in file:		fb04597c20643a3ce5b477c69c08ed0d
MD5 hash calculated over data:		fb04597c20643a3ce5b477c69c08ed0d

Single file: /Single Files/libewf-20110610/tests/ewf_test_read_write_delta.c
MD5 hash stored in file:		c72c25e3d393d2331128873648c26ea8
MD5 hash calculated over data:		c72c25e3d393d2331128873648c26ea8

Single file: /Single Files/libewf-20110610/tests/ewf_test_seek.c
MD5 hash stored in file:		9e535c650ca4f117119b07e5eb107653
MD5 hash calculated over data:		9e535c650ca4f117119b07e5eb107653

Single file: /Single Files/libewf-20110610/tests/ewf_test_truncate.c
MD5 hash stored in file:		35ca7c7db81b33e28c5f369f3404fc9c
MD5 hash calculated over data:		35ca7c7db81b33e28c5f369f3404fc9c

Single file: /Single Files/libewf-20110610/tests/ewf_test_write.c
MD5 hash stored in file:		a60a17ba1e577dd65f0184a715d1417b
MD5 hash calculated over data:		a60a17ba1e577dd65f0184a715d1417b

Single file: /Single Files/libewf-20110610/tests/ewf_test_write_chunk.c
MD5 hash stored in file:		965762e161d8c6be253c18ef8fab2f27
MD5 hash calculated over data:		965762e161d8c6be253c18ef8fab2f27

Single file: /Single Files/libewf-20110610/tests/Makefile.am
MD5 hash stored in file:		8e96e5b4e5a090d8a30ffd2c6efd210a
MD5 hash calculated over data:		8e96e5b4e5a090d8a30ffd2c6efd210a

Single file: /Single Files/libewf-20110610/tests/Makefile.in
MD5 hash stored in file:		44fb73a44561e57d9687c4cc11bef3b4
MD5 hash calculated over data:		44fb73a44561e57d9687c4cc11bef3b4

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire.sh
MD5 hash stored in file:		86f88e638af38c31d19aae205f00b7e8
MD5 hash calculated over data:		86f88e638af38c31d19aae205f00b7e8

Single file: /Single Files/libewf-20110610/tests/test_ewfacquirestream.sh
MD5 hash stored in file:		49304968fa6d54f878fe0f61ea510308
MD5 hash calculated over data:		49304968fa6d54f878fe0f61ea510308

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire_optical.sh
MD5 hash stored in file:		ea22effb32f41c7ceed1d2c5c54aefe7
MD5 hash calculated over data:		ea22effb32f41c7ceed1d2c5c54aefe7

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire_resume.sh
MD5 hash stored in file:		b087793357fca0fbb1ea689e3710f453
MD5 hash calculated over data:		b087793357fca0fbb1ea689e3710f453

Single file: /Single Files/libewf-20110610/tests/test_ewfexport.sh
MD5 hash stored in file:		ea8f72d8aa3a54c738b9cda9880f49a6
MD5 hash calculated over data:		ea8f72d8aa3a54c738b9cda9880f49a6

Single file: /Single Files/libewf-20110610/tests/test_ewfexport_logical.sh
MD5 hash stored in file:		dff14ff3771fc04c91f98e18c4e77782
MD5 hash calculated over data:		dff14ff3771fc04c91f98e18c4e77782

Single file: /Single Files/libewf-20110610/tests/test_ewfinfo.sh
MD5 hash stored in file:		c77230cb01be9abbf6f605f75cec9962
MD5 hash calculated over data:		c77230cb01be9abbf6f605f75cec9962

Single file: /Single Files/libewf-20110610/tests/test_ewfverify.sh
MD5 hash stored in file:		7ffc961d9d369af477ebfc955b749576
MD5 hash calculated over data:		7ffc961d9d369af477ebfc955b749576

Single file: /Single Files/libewf-20110610/tests/test_ewfverify_logical.sh
MD5 hash stored in file:		1c6a71d9db520ad04ef89e5c7371b749
MD5 hash calculated over data:		1c6a71d9db520ad04ef89e5c7371b749

Single file: /Single Files/libewf-20110610/tests/test_glob.sh
MD5 hash stored in file:		1be683895654366c3c879f2fd22f5a96
MD5 hash calculated over data:		1be683895654366c3c879f2fd22f5a96

Single file: /Single Files/libewf-20110610/tests/test_pyewf.sh
MD5 hash stored in file:		921a51c1733b11f74cb7cb4d43e5e9ca
MD5 hash calculated over data:		921a51c1733b11f74cb7cb4d43e5e9ca

Single file: /Single Files/libewf-20110610/tests/test_read.sh
MD5 hash stored in file:		16b578ef6a77f635bd3e8c6ed2833f21
MD5 hash calculated over data:		16b578ef6a77f635bd3e8c6ed2833f21

Single file: /Single Files/libewf-20110610/tests/test_read_write.sh
MD5 hash stored in file:		466dcaa5397e5fbd6ded66ce828efbf9
MD5 hash calculated over data:		466dcaa5397e5fbd6ded66ce828efbf9

Single file: /Single Files/libewf-20110610/tests/test_read_write_delta.sh
MD5 hash stored in file:		7c586182f1ee2eef620b20ec9f3ca54f
MD5 hash calculated over data:		7c586182f1ee2eef620b20ec9f3ca54f

Single file: /Single Files/libewf-20110610/tests/test_seek.sh
MD5 hash stored in file:		a1d5ae065c53398f7e0c866e984f40a1
MD5 hash calculated over data:		a1d5ae065c53398f7e0c866e984f40a1

Single file: /Single Files/libewf-20110610/tests/test_write.sh
MD5 hash stored in file:		ddf880a65e3b704b1eb3373d2d4257a2
MD5 hash calculated over data:		ddf880a65e3b704b1eb3373d2d4257a2

Single file: /Single Files/libewf-20110610/ylwrap
MD5 hash stored in file:		69678e72941d681665c3731bfb3044ab
MD5 hash calculated over data:		69678e72941d681665c3731bfb3044ab

ewfverify: SUCCESS

Testing ewfverify of input: input_logical/lvf_test.L01  (PASS)
ewfverify 20111031

Single file: /.fseventsd/fseventsd-uuid
MD5 hash stored in file:		0ca85dbfa2f81e3e0f6e993db7acdc80
MD5 hash calculated over data:		0ca85dbfa2f81e3e0f6e993db7acdc80

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/tmp.SnowLeopard
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/indexState
MD5 hash stored in file:		d6409fa2e8f7a8a974f031300eedf7da
MD5 hash calculated over data:		d6409fa2e8f7a8a974f031300eedf7da

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexIds
MD5 hash stored in file:		4b7c6ca17d974c53122adc09b607404b
MD5 hash calculated over data:		4b7c6ca17d974c53122adc09b607404b

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexGroups
MD5 hash stored in file:		23d63abf01c9af283ae4043716805e2c
MD5 hash calculated over data:		23d63abf01c9af283ae4043716805e2c

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexHead
MD5 hash stored in file:		5332c294a6fb5b8dd14e0080032c8deb
MD5 hash calculated over data:		5332c294a6fb5b8dd14e0080032c8deb

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexIds
MD5 hash stored in file:		bb7df04e1b0a2570657527a7e108ae23
MD5 hash calculated over data:		bb7df04e1b0a2570657527a7e108ae23

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexGroups
MD5 hash stored in file:		76bc7521fd246e2ba8dece4d901d6373
MD5 hash calculated over data:		76bc7521fd246e2ba8dece4d901d6373

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPostings
MD5 hash stored in file:		620f0b67a91f7f74151bc5be745b7110
MD5 hash calculated over data:		620f0b67a91f7f74151bc5be745b7110

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexTermIds
MD5 hash stored in file:		0829f71740aab1ab98b33eae21dee122
MD5 hash calculated over data:		0829f71740aab1ab98b33eae21dee122

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPositions
MD5 hash stored in file:		620f0b67a91f7f74151bc5be745b7110
MD5 hash calculated over data:		620f0b67a91f7f74151bc5be745b7110

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPositionTable
MD5 hash stored in file:		0829f71740aab1ab98b33eae21dee122
MD5 hash calculated over data:		0829f71740aab1ab98b33eae21dee122

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexDirectory
MD5 hash stored in file:		2402c0986b9e3725e68c045cf71c89b3
MD5 hash calculated over data:		2402c0986b9e3725e68c045cf71c89b3

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexCompactDirectory
MD5 hash stored in file:		0f343b0931126a20f133d67c2b018a3b
MD5 hash calculated over data:		0f343b0931126a20f133d67c2b018a3b

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexArrays
MD5 hash stored in file:		fcd6bcb56c1689fcef28b57c22475bad
MD5 hash calculated over data:		fcd6bcb56c1689fcef28b57c22475bad

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexUpdates
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/store.db
MD5 hash stored in file:		fdefd668220372cf43ccc03fe3b1d2d3
MD5 hash calculated over data:		fdefd668220372cf43ccc03fe3b1d2d3

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/.store.db
MD5 hash stored in file:		3ad01f9b3adbe6a56604ae09bb41430f
MD5 hash calculated over data:		3ad01f9b3adbe6a56604ae09bb41430f

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalLive
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalExclusion
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalSync
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.shadowIndexGroups
MD5 hash stored in file:		df4b078e642930c40eedf0c1d2a43fa1
MD5 hash calculated over data:		df4b078e642930c40eedf0c1d2a43fa1

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexHead
MD5 hash stored in file:		01011884e6dbbd4a391e36fe3312b34a
MD5 hash calculated over data:		01011884e6dbbd4a391e36fe3312b34a

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexTermIds
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexPositionTable
MD5 hash stored in file:		d41d8cd98f00b204e9800998ecf8427e
MD5 hash calculated over data:		d41d8cd98f00b204e9800998ecf8427e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexArrays
MD5 hash stored in file:		fcd6bcb56c1689fcef28b57c22475bad
MD5 hash calculated over data:		fcd6bcb56c1689fcef28b57c22475bad

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexCompactDirectory
MD5 hash stored in file:		7dea362b3fac8e00956a4952a3d4f474
MD5 hash calculated over data:		7dea362b3fac8e00956a4952a3d4f474

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexDirectory
MD5 hash stored in file:		10533d0a8baaaa0cbf467965f2605c04
MD5 hash calculated over data:		10533d0a8baaaa0cbf467965f2605c04

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexGroups
MD5 hash stored in file:		93b885adfe0da089cdf634904fd59f71
MD5 hash calculated over data:		93b885adfe0da089cdf634904fd59f71

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/store.updates
MD5 hash stored in file:		5449f1c95339d13a16f68163ac01965e
MD5 hash calculated over data:		5449f1c95339d13a16f68163ac01965e

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexPostings
MD5 hash stored in file:		96d62ee5ce9f2f26f5cb66a5992d6508
MD5 hash calculated over data:		96d62ee5ce9f2f26f5cb66a5992d6508

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexPositions
MD5 hash stored in file:		f1d3ff8443297732862df21dc4e57262
MD5 hash calculated over data:		f1d3ff8443297732862df21dc4e57262

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexDirectory
MD5 hash stored in file:		a329886ff2940c4f7bf01cf96c770d8c
MD5 hash calculated over data:		a329886ff2940c4f7bf01cf96c770d8c

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexCompactDirectory
MD5 hash stored in file:		7dea362b3fac8e00956a4952a3d4f474
MD5 hash calculated over data:		7dea362b3fac8e00956a4952a3d4f474

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexArrays
MD5 hash stored in file:		6c2cc704c6afeb0ca43b87fd64749fa7
MD5 hash calculated over data:		6c2cc704c6afeb0ca43b87fd64749fa7

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.shadowIndexHead
MD5 hash stored in file:		9eae903fa43424eb0d5f76d8ab2f88cb
MD5 hash calculated over data:		9eae903fa43424eb0d5f76d8ab2f88cb

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexHead
MD5 hash stored in file:		9eae903fa43424eb0d5f76d8ab2f88cb
MD5 hash calculated over data:		9eae903fa43424eb0d5f76d8ab2f88cb

Single file: /.Spotlight-V100/Store-V1/VolumeConfig.plist
MD5 hash stored in file:		4ba0baaf733c26ee53d07b08be418169
MD5 hash calculated over data:		4ba0baaf733c26ee53d07b08be418169

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Epsilon/Digamma/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Epsilon/Digamma/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Pi/Koppa/01/02/2003.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Lambda/Pi/Koppa/01/02/2003.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Lambda/Pi/Koppa/01/02/2003.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Lambda/Pi/Koppa/01/02/2003.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Lambda/Pi/Koppa/01/02/2003.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Lambda/Pi/Koppa/Omega/Bender © Rodriguez.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Lambda/Pi/Koppa/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Pi/Koppa/09/09/2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Lambda/Pi/Koppa/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Lambda/Pi/Koppa/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Lambda/Pi/Koppa/Sample.2009.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Zeta/Eta/Theta/Iota/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Lambda/Zeta/Eta/Theta/Iota/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Lambda/Zeta/Eta/Theta/Kappa/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png
MD5 hash stored in file:		8e4c6183af13dfacc85e9b4542fb9670
MD5 hash calculated over data:		8e4c6183af13dfacc85e9b4542fb9670

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Lambda/Zeta/Eta/Theta/Lambda/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Epsilon/Digamma/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Pi/Koppa/01/02/2003.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Omega/Pi/Koppa/01/02/2003.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Omega/Pi/Koppa/01/02/2003.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Omega/Pi/Koppa/01/02/2003.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Omega/Pi/Koppa/01/02/2003.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Omega/Pi/Koppa/Omega/Bender © Rodriguez.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Omega/Pi/Koppa/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Omega/Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Omega/Pi/Koppa/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Omega/Pi/Koppa/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Omega/Pi/Koppa/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Omega/Pi/Koppa/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Pi/Koppa/09/09/2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Omega/Pi/Koppa/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Omega/Pi/Koppa/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Omega/Pi/Koppa/Sample.2009.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Zeta/Eta/Theta/Iota/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Omega/Zeta/Eta/Theta/Iota/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Omega/Zeta/Eta/Theta/Kappa/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png
MD5 hash stored in file:		8e4c6183af13dfacc85e9b4542fb9670
MD5 hash calculated over data:		8e4c6183af13dfacc85e9b4542fb9670

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Omega/Zeta/Eta/Theta/Lambda/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Pi/Koppa/01/02/2003.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Pi/Koppa/01/02/2003.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Pi/Koppa/01/02/2003.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Pi/Koppa/01/02/2003.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Pi/Koppa/01/02/2003.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Pi/Koppa/Omega/Bender © Rodriguez.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Pi/Koppa/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Pi/Koppa/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Pi/Koppa/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Pi/Koppa/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Pi/Koppa/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Pi/Koppa/09/09/2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Pi/Koppa/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Pi/Koppa/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Pi/Koppa/Sample.2009.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Zeta/Eta/Theta/Iota/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Zeta/Eta/Theta/Iota/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Zeta/Eta/Theta/Kappa/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png
MD5 hash stored in file:		8e4c6183af13dfacc85e9b4542fb9670
MD5 hash calculated over data:		8e4c6183af13dfacc85e9b4542fb9670

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo
MD5 hash stored in file:		5075dc36e6fb5b2f19a38ac28d8a7fca
MD5 hash calculated over data:		5075dc36e6fb5b2f19a38ac28d8a7fca

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff
MD5 hash stored in file:		59a659af27099e1bf82d50714beb94ae
MD5 hash calculated over data:		59a659af27099e1bf82d50714beb94ae

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png
MD5 hash stored in file:		d26124b6e1c91225513822d0e64a8c38
MD5 hash calculated over data:		d26124b6e1c91225513822d0e64a8c38

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml
MD5 hash stored in file:		354df46687088613c48004a0d8c3fe78
MD5 hash calculated over data:		354df46687088613c48004a0d8c3fe78

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz
MD5 hash stored in file:		77a123816ab0641ed8fa77bf9ee13080
MD5 hash calculated over data:		77a123816ab0641ed8fa77bf9ee13080

Single file: /Zeta/Eta/Theta/Lambda/09/02/2011.pages
MD5 hash stored in file:		e5f5d7b98176b1669d67bef49b6422b1
MD5 hash calculated over data:		e5f5d7b98176b1669d67bef49b6422b1

Single file: /Zeta/Eta/Theta/Lambda/Sample.2009.key
MD5 hash stored in file:		a21650a989bca374cc4c2ee96617729a
MD5 hash calculated over data:		a21650a989bca374cc4c2ee96617729a

Single file: /Zeta/Eta/Theta/Lambda/Sample.2009.numbers
MD5 hash stored in file:		2228fa6dffa201207b5a50b708d333cf
MD5 hash calculated over data:		2228fa6dffa201207b5a50b708d333cf

Single file: /.DS_Store
MD5 hash stored in file:		b357c1bc1dbcad17c0daf53e5106490b
MD5 hash calculated over data:		b357c1bc1dbcad17c0daf53e5106490b

ewfverify: SUCCESS

Testing ewfverify of input: input_logical/MacOS.L01  (PASS)
ewfverify 20111031

Single file: /c/temp/test/temp/GOA PSY TRANCE live@Montain Switzerland CD 2 dj BILO [[[[09.06.2005]]]].MP3
MD5 hash stored in file:		cc0aeb0ec9602e79087a1fcda1f378bd
MD5 hash calculated over data:		cc0aeb0ec9602e79087a1fcda1f378bd

Single file: /c/temp/test/temp/I Love Techno 2003 Cristian Varela Marco Bailey Dave Clarke Dj Rush Luke Slater Scan X Speedy J Sven Vath By Ramirez.mp3
MD5 hash stored in file:		25dde68f17be56396f8e7eb044b48c38
MD5 hash calculated over data:		25dde68f17be56396f8e7eb044b48c38

Single file: /c/temp/test/temp/Itzaia @ Session At Skipub Andorra - Carlcox - Marco Bailey - Mistress Barbara - Ben Sims - Pet Duo - Dj Rush - Marco Carola - Cristian Varela wWw.TorrentMas.CoM by AllRoad.mp3
MD5 hash stored in file:		cef6a7afed4cc034320f32a27c1f44cb
MD5 hash calculated over data:		cef6a7afed4cc034320f32a27c1f44cb

Single file: /c/temp/test/temp/Party Mix - Mayday 2004 Marco Bailey, Speedy J, Chris Liebing, Umek Live@Hungexpo, Hungary 2004-04-03.mp3
MD5 hash stored in file:		bc17e546a555979a2f16be0747fa4c0b
MD5 hash calculated over data:		bc17e546a555979a2f16be0747fa4c0b

ewfverify: SUCCESS

Testing ewfverify of input: input_logical/name.L01  (PASS)
ewfverify 20111031

Single file: /LEF/03-27-08 Computer Forensics.ppt
MD5 hash stored in file:		d24912fdd1470fe087781664b86fb72b
MD5 hash calculated over data:		d24912fdd1470fe087781664b86fb72b

Single file: /LEF/04-28-2010 2101 DFernandezII (full).pdf
MD5 hash stored in file:		0e0c5a80064733ec403c599d11a353a8
MD5 hash calculated over data:		0e0c5a80064733ec403c599d11a353a8

Single file: /LEF/DR FIX1.jpg
MD5 hash stored in file:		a7b003c1d915e5896733eb3efffec833
MD5 hash calculated over data:		a7b003c1d915e5896733eb3efffec833

Single file: /LEF/Clusterview.jpg
MD5 hash stored in file:		48896d9913a8faedf876de822205bb0b
MD5 hash calculated over data:		48896d9913a8faedf876de822205bb0b

Single file: /LEF/potterdemo.jpg
MD5 hash stored in file:		c5123f4f97262938cdc90270f30c1ce5
MD5 hash calculated over data:		c5123f4f97262938cdc90270f30c1ce5

ewfverify: SUCCESS

Testing ewfverify of input: input_logical/TestLEFile.L01  (PASS)
PASS: test_ewfverify_logical.sh
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			original EWF
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 1
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32) [32]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			32 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 128) [128]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			128 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 256) [256]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			256 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 512) [512]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			512 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 1024) [1024]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			1024 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 2048) [2048]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			2048 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 4096) [4096]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			4096 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 8192) [8192]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			8192 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16384) [16384]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			16384 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 1474560) [0]: The number of bytes to acquire (0 <= value <= 1474560) [1474560]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 32768) [32768]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.s01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			SMART
Acquiry start offset:			0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			32768 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewf with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase1 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ftk with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 32  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 128  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 256  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 512  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 1024  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 2048  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 4096  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 8192  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 16384  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: none and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: empty-block and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: fast and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS
Testing unattended ewfacquire of raw input: input_raw/floppy.raw to ewf format: smart with compression: best and chunk size: 32768  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		6a9cc7be4c747a09d9d0204ccaa9c51f
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_random.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		6a9cc7be4c747a09d9d0204ccaa9c51f
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_random.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		6a9cc7be4c747a09d9d0204ccaa9c51f
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_random.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		6a9cc7be4c747a09d9d0204ccaa9c51f
MD5 hash calculated over data:		6a9cc7be4c747a09d9d0204ccaa9c51f
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		d118695bd8336dd9ec18f9bd137ea3b894019bb1

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_random.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		c9a5a6878d97b48cc965c1e41859f034
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_zero.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		c9a5a6878d97b48cc965c1e41859f034
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_zero.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		c9a5a6878d97b48cc965c1e41859f034
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_zero.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				4.2 GB (4294967296 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [fixed]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 4294967296) [0]: The number of bytes to acquire (0 <= value <= 4294967296) [4294967296]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [512]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 64) [64]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		4.0 GiB (4294967296 bytes)
Evidence segment file size:		93 GiB (100000000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		c9a5a6878d97b48cc965c1e41859f034
MD5 hash calculated over data:		c9a5a6878d97b48cc965c1e41859f034
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		1bf99ee9f374e58e201e4dda4f474e570eb77229

ewfverify: SUCCESS

Testing ewfacquire of raw input: input_raw_more/test_4gb_zero.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
PASS: test_ewfacquire.sh
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 426582016) [0]: The number of bytes to acquire (0 <= value <= 426582016) [426582016]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		406 MiB (426582016 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 426582016) [0]: The number of bytes to acquire (0 <= value <= 426582016) [426582016]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		406 MiB (426582016 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 426582016) [0]: The number of bytes to acquire (0 <= value <= 426582016) [426582016]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		406 MiB (426582016 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 426582016) [0]: The number of bytes to acquire (0 <= value <= 426582016) [426582016]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		406 MiB (426582016 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 628326400) [0]: The number of bytes to acquire (0 <= value <= 628326400) [628326400]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		599 MiB (628326400 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 628326400) [0]: The number of bytes to acquire (0 <= value <= 628326400) [628326400]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		599 MiB (628326400 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 628326400) [0]: The number of bytes to acquire (0 <= value <= 628326400) [628326400]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		599 MiB (628326400 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 628326400) [0]: The number of bytes to acquire (0 <= value <= 628326400) [628326400]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		599 MiB (628326400 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 42885120) [0]: The number of bytes to acquire (0 <= value <= 42885120) [42885120]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		40 MiB (42885120 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

Acquiry parameters required, please provide the necessary input
Image path and filename without extension: Case number: Description: Evidence number: Examiner name: Notes: Media type (fixed, removable, optical, memory) [optical]: Media characteristics (logical, physical) [logical]: Use compression (none, empty-block, fast, best) [none]: Use EWF file format (ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [encase6]: Start to acquire at offset (0 <= value <= 162603008) [0]: The number of bytes to acquire (0 <= value <= 162603008) [162603008]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of bytes per sector (1 <= value <= 4294967295) [2048]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: The number of sectors to be used as error granularity (1 <= value <= 16) [16]: The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: Selected option not supported, please try again or terminate using Ctrl^C.
Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/acquire.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				optical disk (CD/DVD/BD)
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		155 MiB (162603008 bytes)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			2048
Block size:				16 sectors
Error granularity:			16 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS

Testing ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				426 MB (426582016 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 202481 number: 202482
	at sector(s): 202482 - 208291 number: 5810

Tracks:
	total number: 11
	type: audio at sector(s): 0 - 22411 number: 22412
	type: audio at sector(s): 22412 - 40669 number: 18258
	type: audio at sector(s): 40670 - 66926 number: 26257
	type: audio at sector(s): 66927 - 84091 number: 17165
	type: audio at sector(s): 84092 - 101634 number: 17543
	type: audio at sector(s): 101635 - 118246 number: 16612
	type: audio at sector(s): 118247 - 137231 number: 18985
	type: audio at sector(s): 137232 - 153274 number: 16043
	type: audio at sector(s): 153275 - 173386 number: 20112
	type: audio at sector(s): 173387 - 191081 number: 17695
	type: mode1/2352 at sector(s): 202482 - 208291 number: 5810

WARNING: the EWF format does not support audio tracks.
         audio track data will be filled with 0-byte values

MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		57a26b9a24d091d88d42a229db488809
MD5 hash calculated over data:		57a26b9a24d091d88d42a229db488809
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		74b1325ee3e9f4c33fd3fe3b4c078b5d70c2b093

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/bluebook_Disc0001.Cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				628 MB (628326400 bytes)
Bytes per sector:			2048
Sessions:
	total number: 1
	at sector(s): 0 - 306799 number: 306800

Tracks:
	total number: 1
	type: mode2/2352 at sector(s): 0 - 306799 number: 306800

MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		5d973c8844166aacbf6f8cae85208a52
MD5 hash calculated over data:		5d973c8844166aacbf6f8cae85208a52
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		b5f2c166f40769f1c00ca347a993d37c20b07bc5

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/CDNero_Packet_Disc0001_01.Cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_single.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_1.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				42 MB (42885120 bytes)
Bytes per sector:			2048
Sessions:
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Tracks:
	total number: 2
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 20939 number: 320

MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		1f5bd11bae61130c86d2f9a96c3de5d9
MD5 hash calculated over data:		1f5bd11bae61130c86d2f9a96c3de5d9
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		ea2490e0e5367dd4ffbc94d137f0f02bf322902d

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc1_split_2.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_single.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_1.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquire 20111031

Storage media information:
Type:					Optical disc RAW image
Media size:				162 MB (162603008 bytes)
Bytes per sector:			2048
Sessions:
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Tracks:
	total number: 6
	type: mode1/2352 at sector(s): 0 - 9219 number: 9220
	type: mode1/2352 at sector(s): 20620 - 21476 number: 857
	type: mode1/2352 at sector(s): 28377 - 29254 number: 878
	type: mode1/2352 at sector(s): 36155 - 36454 number: 300
	type: mode1/2352 at sector(s): 43355 - 43654 number: 300
	type: mode1/2352 at sector(s): 50555 - 79395 number: 28841

MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ab2a0525078893b787e53ff4956bb967
MD5 hash calculated over data:		ab2a0525078893b787e53ff4956bb967
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		f8bd257e0e28594b7c6ed631b09ff7b318037b88

ewfverify: SUCCESS
Testing unattended ewfacquire of optical disc raw input: input_raw_optical/disc2_split_2.cue to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
PASS: test_ewfacquire_optical.sh
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 2
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase2 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 3
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase3 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 4
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase4 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase5 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 5
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen5 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			linen 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: linen6 with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			FTK Imager
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ftk with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: none and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: empty-block and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: fast and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.e01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			extended EWF (ewfx)
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		31a58f090460b92220d724b28eeb2838a1df6184
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: ewfx with compression: best and chunk size: 64  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				128 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 128  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				256 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 256  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				512 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 512  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				1024 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 1024  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				2048 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 2048  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				4096 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 4096  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				8192 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 8192  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				16384 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 16384  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		619 MiB (650000000 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: none and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			empty-block
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: empty-block and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			fast
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: fast and chunk size: 32768  (PASS)
ewfacquirestream 20111031

Using the following acquiry parameters:
Image path and filename:		tmp/acquirestream.E01
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			best
EWF file format:			EnCase 6
Acquiry start offset:			0
Number of bytes to acquire:		0 (until end of input)
Evidence segment file size:		1.0 MiB (1048576 bytes)
Bytes per sector:			512
Block size:				32768 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfacquirestream: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash stored in file:		N/A
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184

ewfverify: SUCCESS

Testing ewfacquirestream of raw input: input_raw/floppy.raw to ewf format: encase6 with compression: best and chunk size: 32768  (PASS)
PASS: test_ewfacquirestream.sh
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 1478560 (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 1477351 (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 1478432 (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 1477296 (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 1477008 (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 1476736 (PASS)
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
ewfacquire 20111031

Storage media information:
Type:					RAW image
Media size:				1.4 MB (1474560 bytes)
Bytes per sector:			512

Acquiry parameters required, please provide the necessary input
Image path and filename with extension: Resuming acquire at offset: 0.
The number of retries when a read error occurs (0 <= value <= 255) [2]: Wipe sectors on read error (mimic EnCase like behavior) (yes, no) [no]: 
The following acquiry parameters were provided:
Image path and filename:		tmp/resume.E01.
Case number:				case_number
Description:				description
Evidence number:			evidence_number
Examiner name:				examiner
Notes:					notes
Media type:				removable disk
Is physical:				no
Compression used:			none
EWF file format:			EnCase 5
Acquiry start offset:			0
Resuming acquiry at offset:		0
Number of bytes to acquire:		1.4 MiB (1474560 bytes)
Evidence segment file size:		1.4 GiB (1572864000 bytes)
Bytes per sector:			512
Block size:				64 sectors
Error granularity:			64 sectors
Retries on read error:			2
Zero sectors on read error:		no

Continue acquiry with these values (yes, no) [yes]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
ewfacquire: SUCCESS
ewfverify 20111031


MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
Testing ewfacquire resume of at offset: 3584 (PASS)
PASS: test_ewfacquire_resume.sh
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		description
	Examiner name:		examiner
	Evidence number:	evidence
	Notes:			notes
	Password:		N/A

EWF information
	File format:		EnCase 1

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			f4bf6b6508940f4347bfe66d864d5c41

Testing ewfinfo of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case nr
	Description:		fpy-e217a-cmp1
	Examiner name:		examiner
	Evidence number:	evidence
	Notes:			notes
	Acquisition date:	Thu Mar 23 12:01:54 2006
	System date:		Thu Mar 23 12:01:54 2006
	Operating system used:	DOS 7.10
	Software version used:	2.17a
	Password:		N/A

EWF information
	File format:		EnCase 2

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			a16bc5ad203a3e9440dfc5dba483297a

Testing ewfinfo of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case nr
	Description:		fpy-e217a-pwd-cmp1
	Examiner name:		examiner
	Evidence number:	evidence
	Notes:			notes
	Acquisition date:	Thu Mar 23 12:05:20 2006
	System date:		Thu Mar 23 12:05:20 2006
	Operating system used:	DOS 7.10
	Software version used:	2.17a
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 2

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			a16bc5ad203a3e9440dfc5dba483297a

Testing ewfinfo of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case nr
	Description:		fpy-e2.17a-nocmp1
	Examiner name:		examiner
	Evidence number:	evidence
	Notes:			notes
	Acquisition date:	Thu Mar 23 11:56:04 2006
	System date:		Thu Mar 23 11:56:04 2006
	Operating system used:	DOS 7.10
	Software version used:	2.17a
	Password:		N/A

EWF information
	File format:		EnCase 2

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			a16bc5ad203a3e9440dfc5dba483297a

Testing ewfinfo of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case nr
	Description:		fpy-e217a-nohash1
	Examiner name:		examiner
	Evidence number:	evidence
	Notes:			notes
	Acquisition date:	Thu Mar 23 12:00:00 2006
	System date:		Thu Mar 23 12:00:00 2006
	Operating system used:	DOS 7.10
	Software version used:	2.17a
	Password:		N/A

EWF information
	File format:		EnCase 2

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case nr
	Description:		fpy-e217a-pwd1
	Examiner name:		examiner
	Evidence number:	evidence
	Notes:			notes
	Acquisition date:	Thu Mar 23 12:06:48 2006
	System date:		Thu Mar 23 12:06:48 2006
	Operating system used:	DOS 7.10
	Software version used:	2.17a
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 2

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			a16bc5ad203a3e9440dfc5dba483297a

Testing ewfinfo of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		floppy-encase3-case
	Description:		floppy-encase3-evd2
	Examiner name:		floppy-encase3-examiner
	Evidence number:	floppy-encase3-evd2
	Notes:			floppy-encase3-notes
	Acquisition date:	Tue Mar 14 20:04:17 2006
	System date:		Tue Mar 14 08:04:15 2006
	Operating system used:	Windows 2000
	Software version used:	3.21b
	Password:		N/A

EWF information
	File format:		EnCase 3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		floppy-encase3-case
	Description:		floppy-encase3-evd1
	Examiner name:		floppy-encase3-examiner
	Evidence number:	floppy-encase3-evd1
	Notes:			floppy-encase3-notes
	Acquisition date:	Tue Mar 14 19:58:49 2006
	System date:		Tue Mar 14 07:58:45 2006
	Operating system used:	Windows 2000
	Software version used:	3.21b
	Password:		N/A

EWF information
	File format:		EnCase 3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		floppy-encase3-case
	Description:		floppy-encase3-descr
	Examiner name:		floppy-encase3-examiner
	Evidence number:	floppy-encase3-evd
	Notes:			floppy-encase3-notes
	Acquisition date:	Tue Mar 14 19:42:19 2006
	System date:		Tue Mar 14 07:41:32 2006
	Operating system used:	Windows 2000
	Software version used:	3.21b
	Password:		N/A

EWF information
	File format:		EnCase 3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		floppy-encase3-case
	Description:		floppy-encase3-evd3
	Examiner name:		floppy-encase3-examiner
	Evidence number:	floppy-encase3-evd3
	Notes:			floppy-encase3-notes
	Acquisition date:	Tue Mar 14 20:11:57 2006
	System date:		Tue Mar 14 08:11:53 2006
	Operating system used:	Windows 2000
	Software version used:	3.21b
	Password:		N/A

EWF information
	File format:		EnCase 3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		floppy-encase3-case
	Description:		floppy-encase3-evd4
	Examiner name:		floppy-encase3-examiner
	Evidence number:	floppy-encase3-evd4
	Notes:			floppy-encase3-notes
	Acquisition date:	Tue Mar 14 20:14:56 2006
	System date:		Tue Mar 14 08:14:53 2006
	Operating system used:	Windows 2000
	Software version used:	3.21b
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		floppy-encase3-case
	Description:		floppy-encase3-evd5
	Examiner name:		floppy-encase3-examiner
	Evidence number:	floppy-encase3-evd5
	Notes:			floppy-encase3-notes
	Acquisition date:	Tue Mar 14 20:18:26 2006
	System date:		Tue Mar 14 08:18:24 2006
	Operating system used:	Windows 2000
	Software version used:	3.21b
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-bestcompression
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-bestcompression
	Notes:			image of floppy using Encase 4.22 best compression no password with hash
	Acquisition date:	Sat Mar 11 12:20:59 2006
	System date:		Sat Mar 11 12:20:59 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		N/A

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-goodcompression
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-goodcompression
	Notes:			image of floppy using Encase 4.22 good compression no password with hash
	Acquisition date:	Sat Mar 11 12:19:28 2006
	System date:		Sat Mar 11 12:19:28 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		N/A

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-nocompression
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-nocompression
	Notes:			image of floppy using Encase 4.22 no compression no password with hash
	Acquisition date:	Sat Mar 11 12:17:48 2006
	System date:		Sat Mar 11 12:17:48 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		N/A

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-nohash
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-nohash
	Notes:			image of floppy using Encase 4.22 no compression no password without hash
	Acquisition date:	Sat Mar 11 12:22:32 2006
	System date:		Sat Mar 11 12:22:32 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		N/A

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-password-goodcompression
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-password-goodcompression
	Notes:			image of floppy using Encase 4.22 good compression with password with hash
	Acquisition date:	Sat Mar 11 12:26:43 2006
	System date:		Sat Mar 11 12:26:43 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-password-nohash
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-password-nohash
	Notes:			image of floppy using Encase 4.22 no compression with password without hash
	Acquisition date:	Sat Mar 11 12:28:28 2006
	System date:		Sat Mar 11 12:28:28 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase4.22
	Description:		floppy-encase4.22-pasword
	Examiner name:		jbm
	Evidence number:	floppy-encase4.22-pasword
	Notes:			image of floppy using Encase 4.22 no compression with password with hash
	Acquisition date:	Sat Mar 11 12:24:53 2006
	System date:		Sat Mar 11 12:24:53 2006
	Operating system used:	Windows XP
	Software version used:	4.22
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 4

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-bestcompression
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-bestcompression
	Notes:			image of floppy using Encase 5.04a best compression, no password, hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:41:48 2006
	System date:		Sat Mar 11 12:41:48 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	best compression
	GUID:			260ab571-3727-43eb-a2c3-4489e7f05a51

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-bs128-e128
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-bs128-e128
	Notes:			image of floppy using Encase 5.04a no compression, no password, hash (blocksize 128, error 128)
	Acquisition date:	Sat Mar 11 12:56:10 2006
	System date:		Sat Mar 11 12:56:10 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	128
	Error granularity:	128
	Compression level:	no compression
	GUID:			974dec29-c094-49bb-bd92-ba6fa5018cac

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-bs128-e64
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-bs128-e64
	Notes:			image of floppy using Encase 5.04a no compression, no password, hash (blocksize 128, error 64)
	Acquisition date:	Sat Mar 11 12:54:36 2006
	System date:		Sat Mar 11 12:54:36 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	128
	Error granularity:	64
	Compression level:	no compression
	GUID:			86dc654d-06c9-40e3-9030-c5739f8b0756

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-goodcompression
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-goodcompression
	Notes:			image of floppy using Encase 5.04a good compression, no password, hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:40:15 2006
	System date:		Sat Mar 11 12:40:15 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			83bd5cc8-10af-4d3a-85d0-f94a15d6d47a

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-nocompression
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-nocompression
	Notes:			image of floppy using Encase 5.04a no compression, no password, hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:38:05 2006
	System date:		Sat Mar 11 12:38:05 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			869910fc-e143-4908-9328-afedf4a7be1e

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-nohash
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-nohash
	Notes:			image of floppy using Encase 5.04a no compression, no password, no hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:49:21 2006
	System date:		Sat Mar 11 12:49:21 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			b97a8b7d-b3d9-410f-bd7b-77b0100621dd

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-password
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-password
	Notes:			image of floppy using Encase 5.04a no compression, password, hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:44:05 2006
	System date:		Sat Mar 11 12:44:05 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			4d0dbf2c-1712-4acb-81ed-0d57b10a3d62

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-password-goodcompression
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-password-goodcompression
	Notes:			image of floppy using Encase 5.04a good compression, password, hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:47:45 2006
	System date:		Sat Mar 11 12:47:45 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			c269e88a-a27e-4d90-977d-a33a0fd8bc7b

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-encase5.04a
	Description:		floppy-encase5.04a-password-nohash
	Examiner name:		jbm
	Evidence number:	floppy-encase5.04a-password-nohash
	Notes:			image of floppy using Encase 5.04a no compression, password, no hash (blocksize 64)
	Acquisition date:	Sat Mar 11 12:51:43 2006
	System date:		Sat Mar 11 12:51:43 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			6b777b06-f944-4a5b-a7f9-72f2f9dc89f0

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Description:		floppy-split
	Evidence number:	floppy-split
	Notes:			split floppy
	Acquisition date:	Sat Mar 11 12:59:12 2006
	System date:		Sat Mar 11 12:59:12 2006
	Operating system used:	Windows XP
	Software version used:	5.04a
	Password:		N/A

EWF information
	File format:		EnCase 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			d37ae029-2970-40bb-88ab-855910a7ef11

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		Case 1
	Description:		floppy-e6.12-md5_sha1
	Examiner name:		jbm
	Evidence number:	floppy-e6.12-md5_sha1
	Notes:			Floppy EnCase 6.12 MD5 and SHA1
	Acquisition date:	Sun Feb  8 18:16:13 2009
	System date:		Sun Feb  8 18:16:13 2009
	Operating system used:	Windows XP
	Software version used:	6.12
	Password:		N/A
	Extents:		0

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			dd7b1c20-e047-4caa-8924-7d23a55ff8f7

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7
	SHA1:			5c174bf289e5a0eaddef719c5959affc1dff8d23

Testing ewfinfo of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		Case 1
	Description:		floppy-e6.12-sha1
	Examiner name:		jbm
	Evidence number:	floppy-e6.12-sha1
	Notes:			Floppy EnCase 6.12 SHA1
	Acquisition date:	Sun Feb  8 18:19:26 2009
	System date:		Sun Feb  8 18:19:26 2009
	Operating system used:	Windows XP
	Software version used:	6.12
	Password:		N/A
	Extents:		0

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			b8d6ce19-b654-4f30-86bf-aacc3964024c

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	SHA1:			5c174bf289e5a0eaddef719c5959affc1dff8d23

Testing ewfinfo of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:19:03 2007
	System date:		Sat Jan  6 14:19:03 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	best compression
	GUID:			1b464c4f-8ef8-4cb9-9184-ccf4eedda8a3

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:24:39 2007
	System date:		Sat Jan  6 14:24:39 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	128
	Error granularity:	128
	Compression level:	no compression
	GUID:			3b7615a8-8ae5-4544-87c1-9efc798b1db2

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:23:40 2007
	System date:		Sat Jan  6 14:23:40 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	128
	Error granularity:	64
	Compression level:	no compression
	GUID:			c8d4e803-b745-43cb-b220-9561e432bbe5

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:17:36 2007
	System date:		Sat Jan  6 14:17:36 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			75187009-fcf7-42b2-8d6b-7cc914b0186d

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:15:30 2007
	System date:		Sat Jan  6 14:15:30 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			9a320f18-46b0-42d5-a6d7-109274db497a

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:20:30 2007
	System date:		Sat Jan  6 14:20:30 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			68f72756-daef-48bb-8816-5a16d96b8756

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:22:04 2007
	System date:		Sat Jan  6 14:22:04 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		(hash: 261161844)

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			41d04ff8-6508-402f-b809-ac8925d3754b

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-password.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		name
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:26:40 2007
	System date:		Sat Jan  6 14:26:40 2007
	Operating system used:	Windows XP
	Software version used:	6.1
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			7c4bbbf1-0b71-4c95-a20c-1b9fd775a6b8

Media information
	Media type:		removable disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-encase6.1-split.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		libewf-ftk-test-case-number
	Description:		libewf-ftk-test-unique-description
	Examiner name:		libewf-ftk-test-examiner
	Evidence number:	libewf-ftk-test-evidence-number
	Notes:			libewf-ftk-test-notes
	Acquisition date:	Sat Mar 11 11:02:36 2006
	System date:		Sat Mar 11 11:02:36 2006
	Operating system used:	Windows XP
	Software version used:	FTKI2.3
	Password:		N/A

EWF information
	File format:		FTK Imager

Media information
	Media type:		fixed disk
	Is physical:		no
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			ae1ce8f5ac079d3ee93f97fe3792bda3

Testing ewfinfo of input: input/floppy-ftk-imager.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case number
	Description:		description
	Examiner name:		examiner name
	Evidence number:	evidence number
	Notes:			notes
	Acquisition date:	Tue Nov 28 21:04:39 2006
	System date:		Tue Nov 28 21:04:39 2006
	Operating system used:	Linux
	Software version used:	5.03
	Password:		N/A

EWF information
	File format:		linen 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			be61eedc-e47f-db11-ac33-001485b28b19

Media information
	Media type:		removable disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen5-compression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case number
	Description:		description
	Examiner name:		examiner name
	Evidence number:	evidence number
	Notes:			notes
	Acquisition date:	Tue Nov 28 21:02:48 2006
	System date:		Tue Nov 28 21:02:48 2006
	Operating system used:	Linux
	Software version used:	5.03
	Password:		N/A

EWF information
	File format:		linen 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			60bf949b-e47f-db11-ac33-001485b28b19

Media information
	Media type:		removable disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen5.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case number
	Description:		description
	Examiner name:		examiner name
	Evidence number:	evidence number
	Notes:			notes
	Acquisition date:	Tue Nov 28 21:05:17 2006
	System date:		Tue Nov 28 21:05:17 2006
	Operating system used:	Linux
	Software version used:	5.03
	Password:		N/A

EWF information
	File format:		linen 5
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			143707f3-e47f-db11-ac33-001485b28b19

Media information
	Media type:		removable disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-linen5-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:51:20 2007
	System date:		Sat Jan  6 14:51:20 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		N/A

EWF information
	File format:		linen 6
	Sectors per chunk:	128
	Error granularity:	128
	Compression level:	no compression
	GUID:			d0b74830-569e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:48:52 2007
	System date:		Sat Jan  6 14:48:52 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		N/A

EWF information
	File format:		linen 6
	Sectors per chunk:	128
	Error granularity:	64
	Compression level:	no compression
	GUID:			7eaf57d6-559e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:42:49 2007
	System date:		Sat Jan  6 14:42:49 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		N/A

EWF information
	File format:		linen 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			f40715fb-549e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:44:19 2007
	System date:		Sat Jan  6 14:44:19 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		N/A

EWF information
	File format:		linen 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			e8740f31-559e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:45:45 2007
	System date:		Sat Jan  6 14:45:45 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		N/A

EWF information
	File format:		linen 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			5e04d164-559e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Testing ewfinfo of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:47:15 2007
	System date:		Sat Jan  6 14:47:15 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		(hash: 261161844)

EWF information
	File format:		linen 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			1402a79e-559e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen6.01-password.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case
	Description:		desc
	Examiner name:		exam
	Evidence number:	evid
	Notes:			notes
	Acquisition date:	Sat Jan  6 14:52:50 2007
	System date:		Sat Jan  6 14:52:50 2007
	Operating system used:	Linux
	Software version used:	6.01
	Password:		N/A

EWF information
	File format:		linen 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	no compression
	GUID:			cc666a63-569e-db11-9206-001485b28b19

Media information
	Media type:		fixed disk
	Is physical:		yes
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			1801744843f566c62a6045c926651af7

Testing ewfinfo of input: input/floppy-linen6.01-split.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case_smart
	Description:		desc_smart
	Examiner name:		exam_smart
	Evidence number:	evid_smart
	Notes:			note_smart
	Acquisition date:	Wed Aug 16 18:25:44 2006
	System date:		Wed Aug 16 18:25:44 2006
	Operating system used:	Windows XP
	Software version used:	FTKI2.4
	Password:		N/A

EWF information
	File format:		SMART

Media information
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			7ac506e0f6aaeb94c17216ad78cfdcd2

Testing ewfinfo of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case_smart
	Description:		desc_smart
	Examiner name:		exam_smart
	Evidence number:	evid_smart
	Notes:			note_smart
	Acquisition date:	Wed Aug 16 18:19:28 2006
	System date:		Wed Aug 16 18:19:28 2006
	Operating system used:	Windows XP
	Software version used:	FTKI2.4
	Password:		N/A

EWF information
	File format:		SMART

Media information
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			7ac506e0f6aaeb94c17216ad78cfdcd2

Testing ewfinfo of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case_smart
	Description:		desc_smart
	Examiner name:		exam_smart
	Evidence number:	evid_smart
	Notes:			note_smart
	Acquisition date:	Wed Aug 16 18:11:55 2006
	System date:		Wed Aug 16 18:11:55 2006
	Operating system used:	Windows XP
	Software version used:	FTKI2.4
	Password:		N/A

EWF information
	File format:		SMART

Media information
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			7ac506e0f6aaeb94c17216ad78cfdcd2

Testing ewfinfo of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		case_smart
	Description:		desc_smart
	Examiner name:		exam_smart
	Evidence number:	evid_smart
	Notes:			note_smart
	Acquisition date:	Wed Aug 16 18:28:24 2006
	System date:		Wed Aug 16 18:28:24 2006
	Operating system used:	Windows XP
	Software version used:	FTKI2.4
	Password:		N/A

EWF information
	File format:		SMART

Media information
	Bytes per sector:	512
	Number of sectors:	2880
	Media size:		1.4 MiB (1474560 bytes)

Digest hash information
	MD5:			7ac506e0f6aaeb94c17216ad78cfdcd2

Testing ewfinfo of input: input/ftk_imager_smart_split.s01  (PASS)
ls: cannot access input_logical/*.[esE]01: No such file or directory
No files found in input_logical directory, to test ewfinfo place EWF test files in directory.
ewfinfo 20111031

Acquiry information
	Case number:		Case 1
	Description:		audio_cd
	Examiner name:		x
	Evidence number:	audio_cd
	Notes:			notes
	Acquisition date:	Thu Feb 10 16:37:48 2011
	System date:		Thu Feb 10 16:37:48 2011
	Operating system used:	Windows XP
	Software version used:	6.2
	Password:		N/A

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	best compression
	GUID:			b5ab1ec2-48ee-41b2-b7df-3f7cf9092d38

Media information
	Media type:		optical disk (CD/DVD/BD)
	Is physical:		no
	Bytes per sector:	2048
	Number of sectors:	219426
	Media size:		428 MiB (449384448 bytes)

Digest hash information
	MD5:			8e7319c187b8b5f42ddc9a50bfd7f713

Sessions
	total number: 1
	at sector(s): 0 - 219425 number: 219426

Tracks
	total number: 13
	at sector(s): 0 - 16108 number: 16109
	at sector(s): 16109 - 30784 number: 14676
	at sector(s): 30785 - 44585 number: 13801
	at sector(s): 44586 - 58997 number: 14412
	at sector(s): 58998 - 79968 number: 20971
	at sector(s): 79969 - 93649 number: 13681
	at sector(s): 93650 - 111442 number: 17793
	at sector(s): 111443 - 123598 number: 12156
	at sector(s): 123599 - 142292 number: 18694
	at sector(s): 142293 - 160602 number: 18310
	at sector(s): 160603 - 177645 number: 17043
	at sector(s): 177646 - 195070 number: 17425
	at sector(s): 195071 - 219425 number: 24355

Read errors during acquiry
	total number: 1
	at sector(s): 0 - 219425 number: 219426

Testing ewfinfo of input: input_optical/audio_cd.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Description:		dcd
	Evidence number:	dcd1
	Notes:			suspicious
	Acquisition date:	Mon Oct 25 23:04:17 2010
	System date:		Mon Oct 25 23:04:17 2010
	Operating system used:	Windows 7
	Software version used:	6.17
	Password:		N/A
	Extents:		0

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			bb75509e-2c42-4e3a-95f7-9f2ff78a4d58

Media information
	Media type:		optical disk (CD/DVD/BD)
	Is physical:		no
	Bytes per sector:	2048
	Number of sectors:	20940
	Media size:		40 MiB (42885120 bytes)

Digest hash information
	MD5:			99d3f858ece4c9619c4c761a1b8710c6

Sessions
	total number: 2
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 20939 number: 320

Read errors during acquiry
	total number: 1
	at sector(s): 15969 - 15972 number: 4

Testing ewfinfo of input: input_optical/cd2.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Description:		CD6
	Evidence number:	CD6
	Notes:			6 sessions
	Acquisition date:	Tue Oct 26 15:40:44 2010
	System date:		Tue Oct 26 15:40:44 2010
	Operating system used:	Windows 7
	Software version used:	6.17
	Password:		N/A
	Extents:		0

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			90b63169-ddfd-49ce-b89a-dfb96fae393a

Media information
	Media type:		optical disk (CD/DVD/BD)
	Is physical:		no
	Bytes per sector:	2048
	Number of sectors:	79396
	Media size:		155 MiB (162603008 bytes)

Digest hash information
	MD5:			f9d89cab9a2e2f362e9604b88d6a94cf

Sessions
	total number: 6
	at sector(s): 0 - 20619 number: 20620
	at sector(s): 20620 - 28376 number: 7757
	at sector(s): 28377 - 36154 number: 7778
	at sector(s): 36155 - 43354 number: 7200
	at sector(s): 43355 - 50554 number: 7200
	at sector(s): 50555 - 79395 number: 28841

Read errors during acquiry
	total number: 9
	at sector(s): 15969 - 15970 number: 2
	at sector(s): 23726 - 23734 number: 9
	at sector(s): 31504 - 31512 number: 9
	at sector(s): 38704 - 38712 number: 9
	at sector(s): 40812 - 40812 number: 1
	at sector(s): 41190 - 41190 number: 1
	at sector(s): 42498 - 42498 number: 1
	at sector(s): 43038 - 43038 number: 1
	at sector(s): 45904 - 45909 number: 6

Testing ewfinfo of input: input_optical/CD6.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		Case 6665
	Description:		D
	Examiner name:		Martin Nohr
	Evidence number:	D
	Notes:			notes are here
	Acquisition date:	Sun Feb 13 04:03:30 2011
	System date:		Sun Feb 13 04:03:30 2011
	Operating system used:	Windows 7
	Software version used:	6.18
	Password:		N/A
	Extents:		0

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	good (fast) compression
	GUID:			796590e3-79e5-492b-b9a5-c7772ca804ac

Media information
	Media type:		optical disk (CD/DVD/BD)
	Is physical:		no
	Bytes per sector:	2048
	Number of sectors:	332800
	Media size:		650 MiB (681574400 bytes)

Digest hash information
	MD5:			c0dd5bafbce8ad31d6f185f9c44ad47f

Sessions
	total number: 2
	at sector(s): 0 - 76518 number: 76519
	at sector(s): 76519 - 332799 number: 256281

Tracks
	total number: 3
	at sector(s): 0 - 12724 number: 12725
	at sector(s): 12725 - 38827 number: 26103
	at sector(s): 38828 - 76518 number: 37691

Read errors during acquiry
	total number: 3
	at sector(s): 0 - 60619 number: 60620
	at sector(s): 60621 - 60623 number: 3
	at sector(s): 67667 - 332799 number: 265133

Testing ewfinfo of input: input_optical/D.E01  (PASS)
ewfinfo 20111031

Acquiry information
	Case number:		test
	Description:		multisessioncd_best
	Examiner name:		jbm
	Evidence number:	multisessioncd_best
	Notes:			Multisession CD met best compression
	Acquisition date:	Mon Jun 22 17:26:24 2009
	System date:		Mon Jun 22 17:26:24 2009
	Operating system used:	Windows XP
	Software version used:	6.13
	Password:		N/A
	Extents:		0

EWF information
	File format:		EnCase 6
	Sectors per chunk:	64
	Error granularity:	64
	Compression level:	best compression
	GUID:			46e560ed-0336-42b4-b122-783f040afe60

Media information
	Media type:		optical disk (CD/DVD/BD)
	Is physical:		no
	Bytes per sector:	2048
	Number of sectors:	31884
	Media size:		62 MiB (65298432 bytes)

Digest hash information
	MD5:			e767e3558e4e2af340dba43c366ff3a3

Sessions
	total number: 4
	at sector(s): 0 - 13528 number: 13529
	at sector(s): 13529 - 24532 number: 11004
	at sector(s): 24533 - 31884 number: 7352
	at sector(s): 31885 - 31885 number: 0

Read errors during acquiry
	total number: 3
	at sector(s): 2129 - 13379 number: 11251
	at sector(s): 17633 - 24382 number: 6750
	at sector(s): 24985 - 31883 number: 6899

Testing ewfinfo of input: input_optical/multisessioncd_best.E01  (PASS)
PASS: test_ewfinfo.sh
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension or - for stdout: Evidence segment file size in bytes (0 is unlimited) (0 B <= value <= 7.9 EiB) [0 B]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to raw of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewf of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase1 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase2 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase3 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase4 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase5 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 7.9 EiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: encase6 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen5 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: linen6 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ftk of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: smart of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path and filename without extension: Use compression (none, empty-block, fast, best) [none]: Evidence segment file size in bytes (1.0 MiB <= value <= 1.9 GiB) [1.4 GiB]: The number of sectors to read at once (16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768) [64]: Start export at offset (0 <= value <= 1474560) [0]: Number of bytes to export (0 <= value <= 1474560) [1474560]: 
MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing ewfexport to ewf format: ewfx of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		f4bf6b6508940f4347bfe66d864d5c41
SHA1 hash calculated over data:		1caceb5301f42d8301817235ee0b723fd3436414
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase1.99l-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase2.17a-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase2.17a-compression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase2.17a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase2.17a-nocompression-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		a16bc5ad203a3e9440dfc5dba483297a
SHA1 hash calculated over data:		cfab2ddc80b00624db50d76a3454df76d8656437
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase2.17a-nocompression-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase3.21b-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase3.21b-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase3.21b-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase3.21b-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase3.21b-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase3.21b-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase4.22-pasword.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-bs128-e128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-bs128-e64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-password-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-password-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase5.04a-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.12-md5_sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.12-sha1.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-bestcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-goodcompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-encase6.1-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3
SHA1 hash calculated over data:		31a58f090460b92220d724b28eeb2838a1df6184
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-ftk-imager.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen5-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen5.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen5-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-bs128eg128.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-bs128eg64.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-compression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-nocompression.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-nohash.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-password.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		1801744843f566c62a6045c926651af7
SHA1 hash calculated over data:		5c174bf289e5a0eaddef719c5959affc1dff8d23
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/floppy-linen6.01-split.E01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/ftk_imager_smart_best_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/ftk_imager_smart_fast_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/ftk_imager_smart_no_compression.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: raw of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewf of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase1 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase2 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase3 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase4 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase5 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: encase6 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen5 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: linen6 of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ftk of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: smart of input: input/ftk_imager_smart_split.s01  (PASS)
ewfexport 20111031


MD5 hash calculated over data:		7ac506e0f6aaeb94c17216ad78cfdcd2
SHA1 hash calculated over data:		a67be690d9f515a50ccd49631b8d4f8269025a2b
ewfexport: SUCCESS
Testing unattended ewfexport to format: ewfx of input: input/ftk_imager_smart_split.s01  (PASS)
PASS: test_ewfexport.sh
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path: 
Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-bestcompression.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-goodcompression.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-nohash.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-password-goodcompression.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-password.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3.21b-nocompression.E01

Single file: /targetf/EnCase4/CASE/libewf-encase4.22.Case

Single file: /targetf/EnCase4/CASE/libewf-encase4.22.cbak

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-bestcompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-goodcompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-nocompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-nohash.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-password-goodcompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-password-nohash.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-pasword.E01

Single file: /targetf/EnCase4/EXPORT/REPORT.RTF

Single file: /targetf/ENCASE5/CASE/libewf-encase5.04a.Case

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bestcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bs128-e128.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bs128-e64.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-nocompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-nohash.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password-nohash.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-split.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-split.E02

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-b128-e128-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-b128-e64-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE.TXT

Single file: /targetf/FTK/floppy-ftk-imager.e01.E01

Single file: /targetf/FTK/floppy-ftk-imager.e01.E01.txt

ewfexport: SUCCESS
Testing ewfexport to files of input: input_logical/logicalname.L01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path: 
Single file: /Single Files/libewf-20110610/ABOUT-NLS

Single file: /Single Files/libewf-20110610/acinclude.m4

Single file: /Single Files/libewf-20110610/aclocal.m4

Single file: /Single Files/libewf-20110610/AUTHORS

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquire/ewfacquire.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquire/ewfacquire.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquirestream/ewfacquirestream.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquirestream/ewfacquirestream.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfexport/ewfexport.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfexport/ewfexport.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfinfo/ewfinfo.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfinfo/ewfinfo.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfverify/ewfverify.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfverify/ewfverify.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libbfio/libbfio.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libbfio/libbfio.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libcstring/libcstring.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libcstring/libcstring.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/liberror/liberror.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/liberror/liberror.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf/libewf.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf/libewf.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf.bpg

Single file: /Single Files/libewf-20110610/borlandc/builder5/libfvalue/libfvalue.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libfvalue/libfvalue.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libmfdata/libmfdata.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libmfdata/libmfdata.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libnotify/libnotify.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libnotify/libnotify.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libodraw/libodraw.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libodraw/libodraw.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmdev/libsmdev.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmdev/libsmdev.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmraw/libsmraw.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmraw/libsmraw.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsystem/libsystem.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsystem/libsystem.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libuna/libuna.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libuna/libuna.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/zlib/zlib.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/zlib/zlib.bpr

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquire/ewfacquire.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquire/ewfacquire_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquirestream/ewfacquirestream.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquirestream/ewfacquirestream_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfexport/ewfexport.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfexport/ewfexport_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfinfo/ewfinfo.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfinfo/ewfinfo_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfverify/ewfverify.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfverify/ewfverify_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libbfio/libbfio.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libcstring/libcstring.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/liberror/liberror.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf/libewf.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf/libewf_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf.groupproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf_static.groupproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libfvalue/libfvalue.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libmfdata/libmfdata.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libnotify/libnotify.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libodraw/libodraw.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsmdev/libsmdev.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsmraw/libsmraw.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsystem/libsystem.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libuna/libuna.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/zlib/zlib.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/zlib/zlib_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/Makefile.am

Single file: /Single Files/libewf-20110610/borlandc/Makefile.in

Single file: /Single Files/libewf-20110610/ChangeLog

Single file: /Single Files/libewf-20110610/common/byte_stream.h

Single file: /Single Files/libewf-20110610/common/common.h

Single file: /Single Files/libewf-20110610/common/config.h

Single file: /Single Files/libewf-20110610/common/config.h.in

Single file: /Single Files/libewf-20110610/common/config_borlandc.h

Single file: /Single Files/libewf-20110610/common/config_msc.h

Single file: /Single Files/libewf-20110610/common/file_stream.h

Single file: /Single Files/libewf-20110610/common/gettext.h

Single file: /Single Files/libewf-20110610/common/Makefile.am

Single file: /Single Files/libewf-20110610/common/Makefile.in

Single file: /Single Files/libewf-20110610/common/memory.h

Single file: /Single Files/libewf-20110610/common/memwatch.c

Single file: /Single Files/libewf-20110610/common/memwatch.h

Single file: /Single Files/libewf-20110610/common/types.h

Single file: /Single Files/libewf-20110610/common/types.h.in

Single file: /Single Files/libewf-20110610/config.guess

Single file: /Single Files/libewf-20110610/config.rpath

Single file: /Single Files/libewf-20110610/config.sub

Single file: /Single Files/libewf-20110610/configure

Single file: /Single Files/libewf-20110610/configure.ac

Single file: /Single Files/libewf-20110610/COPYING

Single file: /Single Files/libewf-20110610/depcomp

Single file: /Single Files/libewf-20110610/documents/header.txt

Single file: /Single Files/libewf-20110610/documents/header2.txt

Single file: /Single Files/libewf-20110610/documents/Makefile.am

Single file: /Single Files/libewf-20110610/documents/Makefile.in

Single file: /Single Files/libewf-20110610/documents/programming.txt

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.cpp

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.h

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.rc

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.rc.in

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_file_entry.cpp

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_file_entry.h

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_handle.cpp

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_handle.h

Single file: /Single Files/libewf-20110610/ewf.net/Makefile.am

Single file: /Single Files/libewf-20110610/ewf.net/Makefile.in

Single file: /Single Files/libewf-20110610/ewftools/byte_size_string.c

Single file: /Single Files/libewf-20110610/ewftools/byte_size_string.h

Single file: /Single Files/libewf-20110610/ewftools/device_handle.c

Single file: /Single Files/libewf-20110610/ewftools/device_handle.h

Single file: /Single Files/libewf-20110610/ewftools/digest_context.c

Single file: /Single Files/libewf-20110610/ewftools/digest_context.h

Single file: /Single Files/libewf-20110610/ewftools/digest_hash.c

Single file: /Single Files/libewf-20110610/ewftools/digest_hash.h

Single file: /Single Files/libewf-20110610/ewftools/ewfacquire.c

Single file: /Single Files/libewf-20110610/ewftools/ewfacquirestream.c

Single file: /Single Files/libewf-20110610/ewftools/ewfcommon.h

Single file: /Single Files/libewf-20110610/ewftools/ewfdebug.c

Single file: /Single Files/libewf-20110610/ewftools/ewfexport.c

Single file: /Single Files/libewf-20110610/ewftools/ewfinfo.c

Single file: /Single Files/libewf-20110610/ewftools/ewfinput.c

Single file: /Single Files/libewf-20110610/ewftools/ewfinput.h

Single file: /Single Files/libewf-20110610/ewftools/ewfoutput.c

Single file: /Single Files/libewf-20110610/ewftools/ewfoutput.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libewf.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libodraw.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libsmdev.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libsmraw.h

Single file: /Single Files/libewf-20110610/ewftools/ewfverify.c

Single file: /Single Files/libewf-20110610/ewftools/export_handle.c

Single file: /Single Files/libewf-20110610/ewftools/export_handle.h

Single file: /Single Files/libewf-20110610/ewftools/guid.c

Single file: /Single Files/libewf-20110610/ewftools/guid.h

Single file: /Single Files/libewf-20110610/ewftools/imaging_handle.c

Single file: /Single Files/libewf-20110610/ewftools/imaging_handle.h

Single file: /Single Files/libewf-20110610/ewftools/info_handle.c

Single file: /Single Files/libewf-20110610/ewftools/info_handle.h

Single file: /Single Files/libewf-20110610/ewftools/log_handle.c

Single file: /Single Files/libewf-20110610/ewftools/log_handle.h

Single file: /Single Files/libewf-20110610/ewftools/Makefile.am

Single file: /Single Files/libewf-20110610/ewftools/Makefile.in

Single file: /Single Files/libewf-20110610/ewftools/md5.h

Single file: /Single Files/libewf-20110610/ewftools/platform.c

Single file: /Single Files/libewf-20110610/ewftools/platform.h

Single file: /Single Files/libewf-20110610/ewftools/process_status.c

Single file: /Single Files/libewf-20110610/ewftools/process_status.h

Single file: /Single Files/libewf-20110610/ewftools/sha1.h

Single file: /Single Files/libewf-20110610/ewftools/storage_media_buffer.c

Single file: /Single Files/libewf-20110610/ewftools/storage_media_buffer.h

Single file: /Single Files/libewf-20110610/ewftools/verification_handle.c

Single file: /Single Files/libewf-20110610/ewftools/verification_handle.h

Single file: /Single Files/libewf-20110610/examples/libewf/open_close.c

Single file: /Single Files/libewf-20110610/examples/Makefile.am

Single file: /Single Files/libewf-20110610/examples/Makefile.in

Single file: /Single Files/libewf-20110610/examples/pyewf/glob.py

Single file: /Single Files/libewf-20110610/examples/pyewf/metadata.py

Single file: /Single Files/libewf-20110610/examples/pyewf/open_close.py

Single file: /Single Files/libewf-20110610/include/libewf/codepage.h

Single file: /Single Files/libewf-20110610/include/libewf/definitions.h

Single file: /Single Files/libewf-20110610/include/libewf/definitions.h.in

Single file: /Single Files/libewf-20110610/include/libewf/error.h

Single file: /Single Files/libewf-20110610/include/libewf/extern.h

Single file: /Single Files/libewf-20110610/include/libewf/features.h

Single file: /Single Files/libewf-20110610/include/libewf/features.h.in

Single file: /Single Files/libewf-20110610/include/libewf/types.h

Single file: /Single Files/libewf-20110610/include/libewf/types.h.in

Single file: /Single Files/libewf-20110610/include/libewf.h

Single file: /Single Files/libewf-20110610/include/libewf.h.in

Single file: /Single Files/libewf-20110610/include/Makefile.am

Single file: /Single Files/libewf-20110610/include/Makefile.in

Single file: /Single Files/libewf-20110610/INSTALL

Single file: /Single Files/libewf-20110610/install-sh

Single file: /Single Files/libewf-20110610/libbfio/libbfio_codepage.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_definitions.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error_string.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error_string.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_extern.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file_pool.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file_pool.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_handle.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_handle.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_legacy.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_legacy.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_libuna.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_list_type.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_list_type.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_memory_range.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_memory_range.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_offset_list.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_offset_list.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_pool.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_pool.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_support.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_support.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_types.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_unused.h

Single file: /Single Files/libewf-20110610/libbfio/Makefile.am

Single file: /Single Files/libewf-20110610/libbfio/Makefile.in

Single file: /Single Files/libewf-20110610/libcstring/libcstring.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_codepage.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_definitions.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_locale.c

Single file: /Single Files/libewf-20110610/libcstring/libcstring_locale.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_narrow.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_string.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_system_string.c

Single file: /Single Files/libewf-20110610/libcstring/libcstring_system_string.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_types.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_wide.c

Single file: /Single Files/libewf-20110610/libcstring/libcstring_wide.h

Single file: /Single Files/libewf-20110610/libcstring/Makefile.am

Single file: /Single Files/libewf-20110610/libcstring/Makefile.in

Single file: /Single Files/libewf-20110610/liberror/liberror.h

Single file: /Single Files/libewf-20110610/liberror/liberror_definitions.h

Single file: /Single Files/libewf-20110610/liberror/liberror_error.c

Single file: /Single Files/libewf-20110610/liberror/liberror_error.h

Single file: /Single Files/libewf-20110610/liberror/liberror_types.h

Single file: /Single Files/libewf-20110610/liberror/Makefile.am

Single file: /Single Files/libewf-20110610/liberror/Makefile.in

Single file: /Single Files/libewf-20110610/libewf/ewfx_delta_chunk.h

Single file: /Single Files/libewf-20110610/libewf/ewf_checksum.h

Single file: /Single Files/libewf-20110610/libewf/ewf_data.h

Single file: /Single Files/libewf-20110610/libewf/ewf_definitions.h

Single file: /Single Files/libewf-20110610/libewf/ewf_digest.h

Single file: /Single Files/libewf-20110610/libewf/ewf_error2.h

Single file: /Single Files/libewf-20110610/libewf/ewf_file_header.h

Single file: /Single Files/libewf-20110610/libewf/ewf_hash.h

Single file: /Single Files/libewf-20110610/libewf/ewf_ltree.h

Single file: /Single Files/libewf-20110610/libewf/ewf_section.h

Single file: /Single Files/libewf-20110610/libewf/ewf_session.h

Single file: /Single Files/libewf-20110610/libewf/ewf_table.h

Single file: /Single Files/libewf-20110610/libewf/ewf_volume.h

Single file: /Single Files/libewf-20110610/libewf/ewf_volume_smart.h

Single file: /Single Files/libewf-20110610/libewf/libewf.c

Single file: /Single Files/libewf-20110610/libewf/libewf.rc

Single file: /Single Files/libewf-20110610/libewf/libewf.rc.in

Single file: /Single Files/libewf-20110610/libewf/libewf_array_type.c

Single file: /Single Files/libewf-20110610/libewf/libewf_array_type.h

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_data.c

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_data.h

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_table.c

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_table.h

Single file: /Single Files/libewf-20110610/libewf/libewf_codepage.h

Single file: /Single Files/libewf-20110610/libewf/libewf_compression.c

Single file: /Single Files/libewf-20110610/libewf/libewf_compression.h

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time.c

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time.h

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_debug.c

Single file: /Single Files/libewf-20110610/libewf/libewf_debug.h

Single file: /Single Files/libewf-20110610/libewf/libewf_definitions.h

Single file: /Single Files/libewf-20110610/libewf/libewf_definitions.h.in

Single file: /Single Files/libewf-20110610/libewf/libewf_empty_block.c

Single file: /Single Files/libewf-20110610/libewf/libewf_empty_block.h

Single file: /Single Files/libewf-20110610/libewf/libewf_error.c

Single file: /Single Files/libewf-20110610/libewf/libewf_error.h

Single file: /Single Files/libewf-20110610/libewf/libewf_extern.h

Single file: /Single Files/libewf-20110610/libewf/libewf_filename.c

Single file: /Single Files/libewf-20110610/libewf/libewf_filename.h

Single file: /Single Files/libewf-20110610/libewf/libewf_file_entry.c

Single file: /Single Files/libewf-20110610/libewf/libewf_file_entry.h

Single file: /Single Files/libewf-20110610/libewf/libewf_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_sections.c

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_sections.h

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_header_sections.c

Single file: /Single Files/libewf-20110610/libewf/libewf_header_sections.h

Single file: /Single Files/libewf-20110610/libewf/libewf_header_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_header_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_io_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_io_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_legacy.c

Single file: /Single Files/libewf-20110610/libewf/libewf_legacy.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libbfio.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libfvalue.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libmfdata.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libuna.h

Single file: /Single Files/libewf-20110610/libewf/libewf_list_type.c

Single file: /Single Files/libewf-20110610/libewf/libewf_list_type.h

Single file: /Single Files/libewf-20110610/libewf/libewf_media_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_media_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_metadata.c

Single file: /Single Files/libewf-20110610/libewf/libewf_metadata.h

Single file: /Single Files/libewf-20110610/libewf/libewf_notify.c

Single file: /Single Files/libewf-20110610/libewf/libewf_notify.h

Single file: /Single Files/libewf-20110610/libewf/libewf_read_io_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_read_io_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_section.c

Single file: /Single Files/libewf-20110610/libewf/libewf_section.h

Single file: /Single Files/libewf-20110610/libewf/libewf_sector_list.c

Single file: /Single Files/libewf-20110610/libewf/libewf_sector_list.h

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file.c

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file.h

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_table.c

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_table.h

Single file: /Single Files/libewf-20110610/libewf/libewf_single_files.c

Single file: /Single Files/libewf-20110610/libewf/libewf_single_files.h

Single file: /Single Files/libewf-20110610/libewf/libewf_single_file_entry.c

Single file: /Single Files/libewf-20110610/libewf/libewf_single_file_entry.h

Single file: /Single Files/libewf-20110610/libewf/libewf_split_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_split_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_support.c

Single file: /Single Files/libewf-20110610/libewf/libewf_support.h

Single file: /Single Files/libewf-20110610/libewf/libewf_tree_type.c

Single file: /Single Files/libewf-20110610/libewf/libewf_tree_type.h

Single file: /Single Files/libewf-20110610/libewf/libewf_types.h

Single file: /Single Files/libewf-20110610/libewf/libewf_unused.h

Single file: /Single Files/libewf-20110610/libewf/libewf_write_io_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_write_io_handle.h

Single file: /Single Files/libewf-20110610/libewf/Makefile.am

Single file: /Single Files/libewf-20110610/libewf/Makefile.in

Single file: /Single Files/libewf-20110610/libewf.pc.in

Single file: /Single Files/libewf-20110610/libewf.spec

Single file: /Single Files/libewf-20110610/libewf.spec.in

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_array_type.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_array_type.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_codepage.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_debug.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_debug.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_definitions.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_extern.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libfdatetime.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libfguid.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libuna.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_split_string.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_split_string.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_string.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_string.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_table.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_table.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_types.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value_entry.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value_entry.h

Single file: /Single Files/libewf-20110610/libfvalue/Makefile.am

Single file: /Single Files/libewf-20110610/libfvalue/Makefile.in

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_array_type.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_array_type.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache_value.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache_value.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_date_time.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_definitions.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_error.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_error.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_extern.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file_list.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file_list.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_group.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_group.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_inline.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_libbfio.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list_element.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list_element.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_notify.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_notify.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_range.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_range.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment_table.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment_table.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_support.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_support.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_types.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_unused.h

Single file: /Single Files/libewf-20110610/libmfdata/Makefile.am

Single file: /Single Files/libewf-20110610/libmfdata/Makefile.in

Single file: /Single Files/libewf-20110610/libnotify/libnotify.c

Single file: /Single Files/libewf-20110610/libnotify/libnotify.h

Single file: /Single Files/libewf-20110610/libnotify/libnotify_print.c

Single file: /Single Files/libewf-20110610/libnotify/libnotify_print.h

Single file: /Single Files/libewf-20110610/libnotify/libnotify_stream.c

Single file: /Single Files/libewf-20110610/libnotify/libnotify_stream.h

Single file: /Single Files/libewf-20110610/libnotify/Makefile.am

Single file: /Single Files/libewf-20110610/libnotify/Makefile.in

Single file: /Single Files/libewf-20110610/libodraw/libodraw_array_type.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_array_type.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_codepage.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.y

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_scanner.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_scanner.l

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file_descriptor.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file_descriptor.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_debug.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_debug.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_definitions.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_error.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_error.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_extern.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_handle.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_handle.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_io_handle.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_io_handle.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libbfio.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libfvalue.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libuna.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_metadata.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_metadata.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_notify.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_notify.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_sector_range.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_sector_range.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_support.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_support.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_track_value.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_track_value.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_types.h

Single file: /Single Files/libewf-20110610/libodraw/Makefile.am

Single file: /Single Files/libewf-20110610/libodraw/Makefile.in

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_ata.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_ata.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_codepage.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_definitions.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error_string.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error_string.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_extern.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_handle.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_handle.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_legacy.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_legacy.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_libuna.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_list_type.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_list_type.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_metadata.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_metadata.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_notify.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_notify.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_offset_list.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_offset_list.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_optical_disk.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_optical_disk.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_scsi.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_scsi.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_sector_list.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_sector_list.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_string.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_string.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_support.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_support.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_types.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_unused.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_usb.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_usb.h

Single file: /Single Files/libewf-20110610/libsmdev/Makefile.am

Single file: /Single Files/libewf-20110610/libsmdev/Makefile.in

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_codepage.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_definitions.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_error.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_error.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_extern.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_filename.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_filename.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_handle.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_handle.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_information_file.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_information_file.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_legacy.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_legacy.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libbfio.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libfvalue.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libmfdata.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libuna.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_metadata.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_metadata.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_notify.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_notify.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_support.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_support.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_types.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_unused.h

Single file: /Single Files/libewf-20110610/libsmraw/Makefile.am

Single file: /Single Files/libewf-20110610/libsmraw/Makefile.in

Single file: /Single Files/libewf-20110610/libsystem/libsystem.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_date_time.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_date_time.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_directory.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_directory_io.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_error_string.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_error_string.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file_io.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file_stream.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_find.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_getopt.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_getopt.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_glob.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_glob.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_i18n.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_libuna.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_notify.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_notify.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_path.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_path.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_signal.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_signal.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_split_values.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_split_values.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_string.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_string.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_support.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_support.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_unused.h

Single file: /Single Files/libewf-20110610/libsystem/Makefile.am

Single file: /Single Files/libewf-20110610/libsystem/Makefile.in

Single file: /Single Files/libewf-20110610/libuna/libuna_base16_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_base16_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_base64url_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_base64url_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_base64_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_base64_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_byte_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_byte_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_ascii.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_1.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_10.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_10.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_11.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_13.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_13.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_14.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_14.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_15.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_15.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_16.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_16.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_2.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_2.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_3.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_3.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_4.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_4.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_5.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_5.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_6.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_6.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_7.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_7.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_8.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_8.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_9.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_9.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_r.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_r.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_u.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_u.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1250.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1250.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1251.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1251.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1252.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1252.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1253.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1253.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1254.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1254.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1255.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1255.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1256.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1256.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1257.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1257.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1258.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1258.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_874.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_874.h

Single file: /Single Files/libewf-20110610/libuna/libuna_definitions.h

Single file: /Single Files/libewf-20110610/libuna/libuna_error.h

Single file: /Single Files/libewf-20110610/libuna/libuna_extern.h

Single file: /Single Files/libewf-20110610/libuna/libuna_inline.h

Single file: /Single Files/libewf-20110610/libuna/libuna_support.c

Single file: /Single Files/libewf-20110610/libuna/libuna_support.h

Single file: /Single Files/libewf-20110610/libuna/libuna_types.h

Single file: /Single Files/libewf-20110610/libuna/libuna_unicode_character.c

Single file: /Single Files/libewf-20110610/libuna/libuna_unicode_character.h

Single file: /Single Files/libewf-20110610/libuna/libuna_unused.h

Single file: /Single Files/libewf-20110610/libuna/libuna_url_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_url_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_string.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_string.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_string.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_string.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf7_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf7_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_string.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_string.h

Single file: /Single Files/libewf-20110610/libuna/Makefile.am

Single file: /Single Files/libewf-20110610/libuna/Makefile.in

Single file: /Single Files/libewf-20110610/ltmain.sh

Single file: /Single Files/libewf-20110610/m4/gettext.m4

Single file: /Single Files/libewf-20110610/m4/iconv.m4

Single file: /Single Files/libewf-20110610/m4/lib-ld.m4

Single file: /Single Files/libewf-20110610/m4/lib-link.m4

Single file: /Single Files/libewf-20110610/m4/lib-prefix.m4

Single file: /Single Files/libewf-20110610/m4/libtool.m4

Single file: /Single Files/libewf-20110610/m4/ltoptions.m4

Single file: /Single Files/libewf-20110610/m4/ltsugar.m4

Single file: /Single Files/libewf-20110610/m4/ltversion.m4

Single file: /Single Files/libewf-20110610/m4/lt_obsolete.m4

Single file: /Single Files/libewf-20110610/m4/nls.m4

Single file: /Single Files/libewf-20110610/m4/po.m4

Single file: /Single Files/libewf-20110610/m4/progtest.m4

Single file: /Single Files/libewf-20110610/macosx/Introduction.rtf

Single file: /Single Files/libewf-20110610/macosx/Introduction.rtf.in

Single file: /Single Files/libewf-20110610/macosx/libewf.pmproj

Single file: /Single Files/libewf-20110610/macosx/License.rtf

Single file: /Single Files/libewf-20110610/macosx/Makefile.am

Single file: /Single Files/libewf-20110610/macosx/Makefile.in

Single file: /Single Files/libewf-20110610/macosx/Readme.rtf

Single file: /Single Files/libewf-20110610/Makefile.am

Single file: /Single Files/libewf-20110610/Makefile.in

Single file: /Single Files/libewf-20110610/manuals/ewfacquire.1

Single file: /Single Files/libewf-20110610/manuals/ewfacquirestream.1

Single file: /Single Files/libewf-20110610/manuals/ewfexport.1

Single file: /Single Files/libewf-20110610/manuals/ewfinfo.1

Single file: /Single Files/libewf-20110610/manuals/ewfverify.1

Single file: /Single Files/libewf-20110610/manuals/libewf.3

Single file: /Single Files/libewf-20110610/manuals/Makefile.am

Single file: /Single Files/libewf-20110610/manuals/Makefile.in

Single file: /Single Files/libewf-20110610/missing

Single file: /Single Files/libewf-20110610/msvscpp/ewf.net/ewf.net_dll.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfacquire/ewfacquire.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfacquirestream/ewfacquirestream.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfexport/ewfexport.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfinfo/ewfinfo.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfverify/ewfverify.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libbfio/libbfio.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libcstring/libcstring.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/liberror/liberror.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libewf.sln

Single file: /Single Files/libewf-20110610/msvscpp/libewf_dll/libewf_dll.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libfvalue/libfvalue.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libmfdata/libmfdata.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libnotify/libnotify.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libodraw/libodraw.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libsmdev/libsmdev.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libsmraw/libsmraw.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libsystem/libsystem.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libuna/libuna.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/Makefile.am

Single file: /Single Files/libewf-20110610/msvscpp/Makefile.in

Single file: /Single Files/libewf-20110610/msvscpp/zlib_dll/zlib_dll.vcproj

Single file: /Single Files/libewf-20110610/NEWS

Single file: /Single Files/libewf-20110610/po/boldquot.sed

Single file: /Single Files/libewf-20110610/po/ChangeLog

Single file: /Single Files/libewf-20110610/po/en_boldquot.header

Single file: /Single Files/libewf-20110610/po/en_quot.header

Single file: /Single Files/libewf-20110610/po/insert-header.sin

Single file: /Single Files/libewf-20110610/po/Makefile.in.in

Single file: /Single Files/libewf-20110610/po/Makevars

Single file: /Single Files/libewf-20110610/po/Makevars.in

Single file: /Single Files/libewf-20110610/po/POTFILES.in

Single file: /Single Files/libewf-20110610/po/quot.sed

Single file: /Single Files/libewf-20110610/po/remove-potcdate.sin

Single file: /Single Files/libewf-20110610/po/Rules-quot

Single file: /Single Files/libewf-20110610/pyewf/Makefile.am

Single file: /Single Files/libewf-20110610/pyewf/Makefile.in

Single file: /Single Files/libewf-20110610/pyewf/pyewf.c

Single file: /Single Files/libewf-20110610/pyewf/pyewf.h

Single file: /Single Files/libewf-20110610/pyewf/pyewf_handle.c

Single file: /Single Files/libewf-20110610/pyewf/pyewf_handle.h

Single file: /Single Files/libewf-20110610/pyewf/pyewf_metadata.c

Single file: /Single Files/libewf-20110610/pyewf/pyewf_metadata.h

Single file: /Single Files/libewf-20110610/pyewf/pyewf_python.h

Single file: /Single Files/libewf-20110610/README

Single file: /Single Files/libewf-20110610/README.mingw

Single file: /Single Files/libewf-20110610/README.static

Single file: /Single Files/libewf-20110610/tests/ewf_test_definitions.h

Single file: /Single Files/libewf-20110610/tests/ewf_test_glob.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_read.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_read_write.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_read_write_delta.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_seek.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_truncate.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_write.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_write_chunk.c

Single file: /Single Files/libewf-20110610/tests/Makefile.am

Single file: /Single Files/libewf-20110610/tests/Makefile.in

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfacquirestream.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire_optical.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire_resume.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfexport.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfexport_logical.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfinfo.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfverify.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfverify_logical.sh

Single file: /Single Files/libewf-20110610/tests/test_glob.sh

Single file: /Single Files/libewf-20110610/tests/test_pyewf.sh

Single file: /Single Files/libewf-20110610/tests/test_read.sh

Single file: /Single Files/libewf-20110610/tests/test_read_write.sh

Single file: /Single Files/libewf-20110610/tests/test_read_write_delta.sh

Single file: /Single Files/libewf-20110610/tests/test_seek.sh

Single file: /Single Files/libewf-20110610/tests/test_write.sh

Single file: /Single Files/libewf-20110610/ylwrap

ewfexport: SUCCESS
Testing ewfexport to files of input: input_logical/lvf_test.L01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path: 
Single file: /.fseventsd/fseventsd-uuid

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/tmp.SnowLeopard

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/indexState

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexHead

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPostings

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexTermIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPositions

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPositionTable

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexCompactDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexArrays

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexUpdates

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/store.db

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/.store.db

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalLive

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalExclusion

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalSync

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.shadowIndexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexHead

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexTermIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexPositionTable

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexArrays

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexCompactDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/store.updates

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexPostings

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexPositions

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexCompactDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexArrays

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.shadowIndexHead

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexHead

Single file: /.Spotlight-V100/Store-V1/VolumeConfig.plist

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.key

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.numbers

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.pages

Single file: /Epsilon/Digamma/09_02_2011.pages

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.key

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.numbers

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.pages

Single file: /Lambda/Epsilon/Digamma/09_02_2011.pages

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/Contents/PkgInfo

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/addressonly.png

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/index.xml

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/index.xml.gz

Single file: /Lambda/Pi/Koppa/Omega/Bender © Rodriguez.numbers

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/addressonly.png

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/index.xml

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Pi/Koppa/09_02_2011.pages

Single file: /Lambda/Pi/Koppa/09_09_2009.key

Single file: /Lambda/Pi/Koppa/Sample.2009.key

Single file: /Lambda/Pi/Koppa/Sample.2009.numbers

Single file: /Lambda/Pi/Koppa/Sample.2009.pages

Single file: /Lambda/Zeta/Eta/Theta/Iota/Sample.2009.key

Single file: /Lambda/Zeta/Eta/Theta/Iota/Sample.2009.numbers

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Zeta/Eta/Theta/Kappa/09_02_2011.pages

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/09_02_2011.pages

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Zeta/Eta/Theta/Lambda/09_02_2011.pages

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2009.key

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2009.numbers

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.key

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.numbers

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.pages

Single file: /Omega/Epsilon/Digamma/09_02_2011.pages

Single file: /Omega/Pi/Koppa/01_02_2003.pages/Contents/PkgInfo

Single file: /Omega/Pi/Koppa/01_02_2003.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Pi/Koppa/01_02_2003.pages/addressonly.png

Single file: /Omega/Pi/Koppa/01_02_2003.pages/index.xml

Single file: /Omega/Pi/Koppa/01_02_2003.pages/index.xml.gz

Single file: /Omega/Pi/Koppa/Omega/Bender © Rodriguez.numbers

Single file: /Omega/Pi/Koppa/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Pi/Koppa/Sample.2005.pages/addressonly.png

Single file: /Omega/Pi/Koppa/Sample.2005.pages/index.xml

Single file: /Omega/Pi/Koppa/Sample.2005.pages/index.xml.gz

Single file: /Omega/Pi/Koppa/09_02_2011.pages

Single file: /Omega/Pi/Koppa/09_09_2009.key

Single file: /Omega/Pi/Koppa/Sample.2009.key

Single file: /Omega/Pi/Koppa/Sample.2009.numbers

Single file: /Omega/Pi/Koppa/Sample.2009.pages

Single file: /Omega/Zeta/Eta/Theta/Iota/Sample.2009.key

Single file: /Omega/Zeta/Eta/Theta/Iota/Sample.2009.numbers

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz

Single file: /Omega/Zeta/Eta/Theta/Kappa/09_02_2011.pages

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/09_02_2011.pages

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz

Single file: /Omega/Zeta/Eta/Theta/Lambda/09_02_2011.pages

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2009.key

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2009.numbers

Single file: /Pi/Koppa/01_02_2003.pages/Contents/PkgInfo

Single file: /Pi/Koppa/01_02_2003.pages/thumbs/page_thumb_1-8.tiff

Single file: /Pi/Koppa/01_02_2003.pages/addressonly.png

Single file: /Pi/Koppa/01_02_2003.pages/index.xml

Single file: /Pi/Koppa/01_02_2003.pages/index.xml.gz

Single file: /Pi/Koppa/Omega/Bender © Rodriguez.numbers

Single file: /Pi/Koppa/Sample.2005.pages/Contents/PkgInfo

Single file: /Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Pi/Koppa/Sample.2005.pages/addressonly.png

Single file: /Pi/Koppa/Sample.2005.pages/index.xml

Single file: /Pi/Koppa/Sample.2005.pages/index.xml.gz

Single file: /Pi/Koppa/09_02_2011.pages

Single file: /Pi/Koppa/09_09_2009.key

Single file: /Pi/Koppa/Sample.2009.key

Single file: /Pi/Koppa/Sample.2009.numbers

Single file: /Pi/Koppa/Sample.2009.pages

Single file: /Zeta/Eta/Theta/Iota/Sample.2009.key

Single file: /Zeta/Eta/Theta/Iota/Sample.2009.numbers

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz

Single file: /Zeta/Eta/Theta/Kappa/09_02_2011.pages

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/09_02_2011.pages

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers

Single file: /Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz

Single file: /Zeta/Eta/Theta/Lambda/09_02_2011.pages

Single file: /Zeta/Eta/Theta/Lambda/Sample.2009.key

Single file: /Zeta/Eta/Theta/Lambda/Sample.2009.numbers

Single file: /.DS_Store

ewfexport: SUCCESS
Testing ewfexport to files of input: input_logical/MacOS.L01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path: 
Single file: /c/temp/test/temp/GOA PSY TRANCE live_Montain Switzerland CD 2 dj BILO [[[[09.06.2005]]]].MP3

Single file: /c/temp/test/temp/I Love Techno 2003 Cristian Varela Marco Bailey Dave Clarke Dj Rush Luke Slater Scan X Speedy J Sven Vath By Ramirez.mp3

Single file: /c/temp/test/temp/Itzaia _ Session At Skipub Andorra - Carlcox - Marco Bailey - Mistress Barbara - Ben Sims - Pet Duo - Dj Rush - Marco Carola - Cristian Varela wWw.TorrentMas.CoM by AllRoad.mp3

Single file: /c/temp/test/temp/Party Mix - Mayday 2004 Marco Bailey, Speedy J, Chris Liebing, Umek Live_Hungexpo, Hungary 2004-04-03.mp3

ewfexport: SUCCESS
Testing ewfexport to files of input: input_logical/name.L01  (PASS)
ewfexport 20111031

Information for export required, please provide the necessary input
Export to format (raw, files, ewf, smart, ftk, encase1, encase2, encase3, encase4, encase5, encase6, linen5, linen6, ewfx) [raw]: Target path: 
Single file: /LEF/03-27-08 Computer Forensics.ppt

Single file: /LEF/04-28-2010 2101 DFernandezII (full).pdf

Single file: /LEF/DR FIX1.jpg

Single file: /LEF/Clusterview.jpg

Single file: /LEF/potterdemo.jpg

ewfexport: SUCCESS
Testing ewfexport to files of input: input_logical/TestLEFile.L01  (PASS)
ewfexport 20111031


Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-bestcompression.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-goodcompression.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-nohash.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-password-goodcompression.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3-password.E01

Single file: /targetf/ENCASE3/EVIDENCE/floppy-encase3.21b-nocompression.E01

Single file: /targetf/EnCase4/CASE/libewf-encase4.22.Case

Single file: /targetf/EnCase4/CASE/libewf-encase4.22.cbak

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-bestcompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-goodcompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-nocompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-nohash.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-password-goodcompression.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-password-nohash.E01

Single file: /targetf/EnCase4/EVIDENCE/floppy-encase4.22-pasword.E01

Single file: /targetf/EnCase4/EXPORT/REPORT.RTF

Single file: /targetf/ENCASE5/CASE/libewf-encase5.04a.Case

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bestcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bs128-e128.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-bs128-e64.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-nocompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-nohash.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password-nohash.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-password.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-split.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-split.E02

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-b128-e128-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE/floppy-encase5.04a-b128-e64-goodcompression.E01

Single file: /targetf/ENCASE5/EVIDENCE.TXT

Single file: /targetf/FTK/floppy-ftk-imager.e01.E01

Single file: /targetf/FTK/floppy-ftk-imager.e01.E01.txt

ewfexport: SUCCESS
Testing unattended ewfexport to files of input: input_logical/logicalname.L01  (PASS)
ewfexport 20111031


Single file: /Single Files/libewf-20110610/ABOUT-NLS

Single file: /Single Files/libewf-20110610/acinclude.m4

Single file: /Single Files/libewf-20110610/aclocal.m4

Single file: /Single Files/libewf-20110610/AUTHORS

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquire/ewfacquire.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquire/ewfacquire.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquirestream/ewfacquirestream.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfacquirestream/ewfacquirestream.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfexport/ewfexport.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfexport/ewfexport.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfinfo/ewfinfo.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfinfo/ewfinfo.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfverify/ewfverify.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/ewfverify/ewfverify.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libbfio/libbfio.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libbfio/libbfio.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libcstring/libcstring.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libcstring/libcstring.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/liberror/liberror.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/liberror/liberror.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf/libewf.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf/libewf.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libewf.bpg

Single file: /Single Files/libewf-20110610/borlandc/builder5/libfvalue/libfvalue.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libfvalue/libfvalue.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libmfdata/libmfdata.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libmfdata/libmfdata.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libnotify/libnotify.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libnotify/libnotify.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libodraw/libodraw.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libodraw/libodraw.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmdev/libsmdev.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmdev/libsmdev.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmraw/libsmraw.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsmraw/libsmraw.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsystem/libsystem.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libsystem/libsystem.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/libuna/libuna.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/libuna/libuna.bpr

Single file: /Single Files/libewf-20110610/borlandc/builder5/zlib/zlib.bpf

Single file: /Single Files/libewf-20110610/borlandc/builder5/zlib/zlib.bpr

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquire/ewfacquire.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquire/ewfacquire_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquirestream/ewfacquirestream.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfacquirestream/ewfacquirestream_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfexport/ewfexport.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfexport/ewfexport_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfinfo/ewfinfo.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfinfo/ewfinfo_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfverify/ewfverify.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/ewfverify/ewfverify_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libbfio/libbfio.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libcstring/libcstring.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/liberror/liberror.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf/libewf.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf/libewf_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf.groupproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libewf_static.groupproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libfvalue/libfvalue.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libmfdata/libmfdata.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libnotify/libnotify.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libodraw/libodraw.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsmdev/libsmdev.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsmraw/libsmraw.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libsystem/libsystem.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/libuna/libuna.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/zlib/zlib.cbproj

Single file: /Single Files/libewf-20110610/borlandc/codegear/zlib/zlib_static.cbproj

Single file: /Single Files/libewf-20110610/borlandc/Makefile.am

Single file: /Single Files/libewf-20110610/borlandc/Makefile.in

Single file: /Single Files/libewf-20110610/ChangeLog

Single file: /Single Files/libewf-20110610/common/byte_stream.h

Single file: /Single Files/libewf-20110610/common/common.h

Single file: /Single Files/libewf-20110610/common/config.h

Single file: /Single Files/libewf-20110610/common/config.h.in

Single file: /Single Files/libewf-20110610/common/config_borlandc.h

Single file: /Single Files/libewf-20110610/common/config_msc.h

Single file: /Single Files/libewf-20110610/common/file_stream.h

Single file: /Single Files/libewf-20110610/common/gettext.h

Single file: /Single Files/libewf-20110610/common/Makefile.am

Single file: /Single Files/libewf-20110610/common/Makefile.in

Single file: /Single Files/libewf-20110610/common/memory.h

Single file: /Single Files/libewf-20110610/common/memwatch.c

Single file: /Single Files/libewf-20110610/common/memwatch.h

Single file: /Single Files/libewf-20110610/common/types.h

Single file: /Single Files/libewf-20110610/common/types.h.in

Single file: /Single Files/libewf-20110610/config.guess

Single file: /Single Files/libewf-20110610/config.rpath

Single file: /Single Files/libewf-20110610/config.sub

Single file: /Single Files/libewf-20110610/configure

Single file: /Single Files/libewf-20110610/configure.ac

Single file: /Single Files/libewf-20110610/COPYING

Single file: /Single Files/libewf-20110610/depcomp

Single file: /Single Files/libewf-20110610/documents/header.txt

Single file: /Single Files/libewf-20110610/documents/header2.txt

Single file: /Single Files/libewf-20110610/documents/Makefile.am

Single file: /Single Files/libewf-20110610/documents/Makefile.in

Single file: /Single Files/libewf-20110610/documents/programming.txt

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.cpp

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.h

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.rc

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net.rc.in

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_file_entry.cpp

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_file_entry.h

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_handle.cpp

Single file: /Single Files/libewf-20110610/ewf.net/ewf.net_handle.h

Single file: /Single Files/libewf-20110610/ewf.net/Makefile.am

Single file: /Single Files/libewf-20110610/ewf.net/Makefile.in

Single file: /Single Files/libewf-20110610/ewftools/byte_size_string.c

Single file: /Single Files/libewf-20110610/ewftools/byte_size_string.h

Single file: /Single Files/libewf-20110610/ewftools/device_handle.c

Single file: /Single Files/libewf-20110610/ewftools/device_handle.h

Single file: /Single Files/libewf-20110610/ewftools/digest_context.c

Single file: /Single Files/libewf-20110610/ewftools/digest_context.h

Single file: /Single Files/libewf-20110610/ewftools/digest_hash.c

Single file: /Single Files/libewf-20110610/ewftools/digest_hash.h

Single file: /Single Files/libewf-20110610/ewftools/ewfacquire.c

Single file: /Single Files/libewf-20110610/ewftools/ewfacquirestream.c

Single file: /Single Files/libewf-20110610/ewftools/ewfcommon.h

Single file: /Single Files/libewf-20110610/ewftools/ewfdebug.c

Single file: /Single Files/libewf-20110610/ewftools/ewfexport.c

Single file: /Single Files/libewf-20110610/ewftools/ewfinfo.c

Single file: /Single Files/libewf-20110610/ewftools/ewfinput.c

Single file: /Single Files/libewf-20110610/ewftools/ewfinput.h

Single file: /Single Files/libewf-20110610/ewftools/ewfoutput.c

Single file: /Single Files/libewf-20110610/ewftools/ewfoutput.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libewf.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libodraw.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libsmdev.h

Single file: /Single Files/libewf-20110610/ewftools/ewftools_libsmraw.h

Single file: /Single Files/libewf-20110610/ewftools/ewfverify.c

Single file: /Single Files/libewf-20110610/ewftools/export_handle.c

Single file: /Single Files/libewf-20110610/ewftools/export_handle.h

Single file: /Single Files/libewf-20110610/ewftools/guid.c

Single file: /Single Files/libewf-20110610/ewftools/guid.h

Single file: /Single Files/libewf-20110610/ewftools/imaging_handle.c

Single file: /Single Files/libewf-20110610/ewftools/imaging_handle.h

Single file: /Single Files/libewf-20110610/ewftools/info_handle.c

Single file: /Single Files/libewf-20110610/ewftools/info_handle.h

Single file: /Single Files/libewf-20110610/ewftools/log_handle.c

Single file: /Single Files/libewf-20110610/ewftools/log_handle.h

Single file: /Single Files/libewf-20110610/ewftools/Makefile.am

Single file: /Single Files/libewf-20110610/ewftools/Makefile.in

Single file: /Single Files/libewf-20110610/ewftools/md5.h

Single file: /Single Files/libewf-20110610/ewftools/platform.c

Single file: /Single Files/libewf-20110610/ewftools/platform.h

Single file: /Single Files/libewf-20110610/ewftools/process_status.c

Single file: /Single Files/libewf-20110610/ewftools/process_status.h

Single file: /Single Files/libewf-20110610/ewftools/sha1.h

Single file: /Single Files/libewf-20110610/ewftools/storage_media_buffer.c

Single file: /Single Files/libewf-20110610/ewftools/storage_media_buffer.h

Single file: /Single Files/libewf-20110610/ewftools/verification_handle.c

Single file: /Single Files/libewf-20110610/ewftools/verification_handle.h

Single file: /Single Files/libewf-20110610/examples/libewf/open_close.c

Single file: /Single Files/libewf-20110610/examples/Makefile.am

Single file: /Single Files/libewf-20110610/examples/Makefile.in

Single file: /Single Files/libewf-20110610/examples/pyewf/glob.py

Single file: /Single Files/libewf-20110610/examples/pyewf/metadata.py

Single file: /Single Files/libewf-20110610/examples/pyewf/open_close.py

Single file: /Single Files/libewf-20110610/include/libewf/codepage.h

Single file: /Single Files/libewf-20110610/include/libewf/definitions.h

Single file: /Single Files/libewf-20110610/include/libewf/definitions.h.in

Single file: /Single Files/libewf-20110610/include/libewf/error.h

Single file: /Single Files/libewf-20110610/include/libewf/extern.h

Single file: /Single Files/libewf-20110610/include/libewf/features.h

Single file: /Single Files/libewf-20110610/include/libewf/features.h.in

Single file: /Single Files/libewf-20110610/include/libewf/types.h

Single file: /Single Files/libewf-20110610/include/libewf/types.h.in

Single file: /Single Files/libewf-20110610/include/libewf.h

Single file: /Single Files/libewf-20110610/include/libewf.h.in

Single file: /Single Files/libewf-20110610/include/Makefile.am

Single file: /Single Files/libewf-20110610/include/Makefile.in

Single file: /Single Files/libewf-20110610/INSTALL

Single file: /Single Files/libewf-20110610/install-sh

Single file: /Single Files/libewf-20110610/libbfio/libbfio_codepage.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_definitions.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error_string.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_error_string.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_extern.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file_pool.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_file_pool.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_handle.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_handle.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_legacy.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_legacy.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_libuna.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_list_type.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_list_type.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_memory_range.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_memory_range.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_offset_list.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_offset_list.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_pool.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_pool.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_support.c

Single file: /Single Files/libewf-20110610/libbfio/libbfio_support.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_types.h

Single file: /Single Files/libewf-20110610/libbfio/libbfio_unused.h

Single file: /Single Files/libewf-20110610/libbfio/Makefile.am

Single file: /Single Files/libewf-20110610/libbfio/Makefile.in

Single file: /Single Files/libewf-20110610/libcstring/libcstring.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_codepage.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_definitions.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_locale.c

Single file: /Single Files/libewf-20110610/libcstring/libcstring_locale.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_narrow.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_string.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_system_string.c

Single file: /Single Files/libewf-20110610/libcstring/libcstring_system_string.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_types.h

Single file: /Single Files/libewf-20110610/libcstring/libcstring_wide.c

Single file: /Single Files/libewf-20110610/libcstring/libcstring_wide.h

Single file: /Single Files/libewf-20110610/libcstring/Makefile.am

Single file: /Single Files/libewf-20110610/libcstring/Makefile.in

Single file: /Single Files/libewf-20110610/liberror/liberror.h

Single file: /Single Files/libewf-20110610/liberror/liberror_definitions.h

Single file: /Single Files/libewf-20110610/liberror/liberror_error.c

Single file: /Single Files/libewf-20110610/liberror/liberror_error.h

Single file: /Single Files/libewf-20110610/liberror/liberror_types.h

Single file: /Single Files/libewf-20110610/liberror/Makefile.am

Single file: /Single Files/libewf-20110610/liberror/Makefile.in

Single file: /Single Files/libewf-20110610/libewf/ewfx_delta_chunk.h

Single file: /Single Files/libewf-20110610/libewf/ewf_checksum.h

Single file: /Single Files/libewf-20110610/libewf/ewf_data.h

Single file: /Single Files/libewf-20110610/libewf/ewf_definitions.h

Single file: /Single Files/libewf-20110610/libewf/ewf_digest.h

Single file: /Single Files/libewf-20110610/libewf/ewf_error2.h

Single file: /Single Files/libewf-20110610/libewf/ewf_file_header.h

Single file: /Single Files/libewf-20110610/libewf/ewf_hash.h

Single file: /Single Files/libewf-20110610/libewf/ewf_ltree.h

Single file: /Single Files/libewf-20110610/libewf/ewf_section.h

Single file: /Single Files/libewf-20110610/libewf/ewf_session.h

Single file: /Single Files/libewf-20110610/libewf/ewf_table.h

Single file: /Single Files/libewf-20110610/libewf/ewf_volume.h

Single file: /Single Files/libewf-20110610/libewf/ewf_volume_smart.h

Single file: /Single Files/libewf-20110610/libewf/libewf.c

Single file: /Single Files/libewf-20110610/libewf/libewf.rc

Single file: /Single Files/libewf-20110610/libewf/libewf.rc.in

Single file: /Single Files/libewf-20110610/libewf/libewf_array_type.c

Single file: /Single Files/libewf-20110610/libewf/libewf_array_type.h

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_data.c

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_data.h

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_table.c

Single file: /Single Files/libewf-20110610/libewf/libewf_chunk_table.h

Single file: /Single Files/libewf-20110610/libewf/libewf_codepage.h

Single file: /Single Files/libewf-20110610/libewf/libewf_compression.c

Single file: /Single Files/libewf-20110610/libewf/libewf_compression.h

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time.c

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time.h

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_date_time_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_debug.c

Single file: /Single Files/libewf-20110610/libewf/libewf_debug.h

Single file: /Single Files/libewf-20110610/libewf/libewf_definitions.h

Single file: /Single Files/libewf-20110610/libewf/libewf_definitions.h.in

Single file: /Single Files/libewf-20110610/libewf/libewf_empty_block.c

Single file: /Single Files/libewf-20110610/libewf/libewf_empty_block.h

Single file: /Single Files/libewf-20110610/libewf/libewf_error.c

Single file: /Single Files/libewf-20110610/libewf/libewf_error.h

Single file: /Single Files/libewf-20110610/libewf/libewf_extern.h

Single file: /Single Files/libewf-20110610/libewf/libewf_filename.c

Single file: /Single Files/libewf-20110610/libewf/libewf_filename.h

Single file: /Single Files/libewf-20110610/libewf/libewf_file_entry.c

Single file: /Single Files/libewf-20110610/libewf/libewf_file_entry.h

Single file: /Single Files/libewf-20110610/libewf/libewf_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_sections.c

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_sections.h

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_hash_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_header_sections.c

Single file: /Single Files/libewf-20110610/libewf/libewf_header_sections.h

Single file: /Single Files/libewf-20110610/libewf/libewf_header_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_header_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_io_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_io_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_legacy.c

Single file: /Single Files/libewf-20110610/libewf/libewf_legacy.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libbfio.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libfvalue.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libmfdata.h

Single file: /Single Files/libewf-20110610/libewf/libewf_libuna.h

Single file: /Single Files/libewf-20110610/libewf/libewf_list_type.c

Single file: /Single Files/libewf-20110610/libewf/libewf_list_type.h

Single file: /Single Files/libewf-20110610/libewf/libewf_media_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_media_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_metadata.c

Single file: /Single Files/libewf-20110610/libewf/libewf_metadata.h

Single file: /Single Files/libewf-20110610/libewf/libewf_notify.c

Single file: /Single Files/libewf-20110610/libewf/libewf_notify.h

Single file: /Single Files/libewf-20110610/libewf/libewf_read_io_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_read_io_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_section.c

Single file: /Single Files/libewf-20110610/libewf/libewf_section.h

Single file: /Single Files/libewf-20110610/libewf/libewf_sector_list.c

Single file: /Single Files/libewf-20110610/libewf/libewf_sector_list.h

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file.c

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file.h

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_file_handle.h

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_table.c

Single file: /Single Files/libewf-20110610/libewf/libewf_segment_table.h

Single file: /Single Files/libewf-20110610/libewf/libewf_single_files.c

Single file: /Single Files/libewf-20110610/libewf/libewf_single_files.h

Single file: /Single Files/libewf-20110610/libewf/libewf_single_file_entry.c

Single file: /Single Files/libewf-20110610/libewf/libewf_single_file_entry.h

Single file: /Single Files/libewf-20110610/libewf/libewf_split_values.c

Single file: /Single Files/libewf-20110610/libewf/libewf_split_values.h

Single file: /Single Files/libewf-20110610/libewf/libewf_support.c

Single file: /Single Files/libewf-20110610/libewf/libewf_support.h

Single file: /Single Files/libewf-20110610/libewf/libewf_tree_type.c

Single file: /Single Files/libewf-20110610/libewf/libewf_tree_type.h

Single file: /Single Files/libewf-20110610/libewf/libewf_types.h

Single file: /Single Files/libewf-20110610/libewf/libewf_unused.h

Single file: /Single Files/libewf-20110610/libewf/libewf_write_io_handle.c

Single file: /Single Files/libewf-20110610/libewf/libewf_write_io_handle.h

Single file: /Single Files/libewf-20110610/libewf/Makefile.am

Single file: /Single Files/libewf-20110610/libewf/Makefile.in

Single file: /Single Files/libewf-20110610/libewf.pc.in

Single file: /Single Files/libewf-20110610/libewf.spec

Single file: /Single Files/libewf-20110610/libewf.spec.in

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_array_type.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_array_type.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_codepage.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_debug.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_debug.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_definitions.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_extern.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libfdatetime.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libfguid.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_libuna.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_split_string.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_split_string.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_string.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_string.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_table.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_table.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_types.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value.h

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value_entry.c

Single file: /Single Files/libewf-20110610/libfvalue/libfvalue_value_entry.h

Single file: /Single Files/libewf-20110610/libfvalue/Makefile.am

Single file: /Single Files/libewf-20110610/libfvalue/Makefile.in

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_array_type.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_array_type.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache_value.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_cache_value.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_date_time.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_definitions.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_error.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_error.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_extern.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file_list.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_file_list.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_group.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_group.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_inline.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_libbfio.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list_element.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_list_element.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_notify.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_notify.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_range.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_range.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment_table.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_segment_table.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_support.c

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_support.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_types.h

Single file: /Single Files/libewf-20110610/libmfdata/libmfdata_unused.h

Single file: /Single Files/libewf-20110610/libmfdata/Makefile.am

Single file: /Single Files/libewf-20110610/libmfdata/Makefile.in

Single file: /Single Files/libewf-20110610/libnotify/libnotify.c

Single file: /Single Files/libewf-20110610/libnotify/libnotify.h

Single file: /Single Files/libewf-20110610/libnotify/libnotify_print.c

Single file: /Single Files/libewf-20110610/libnotify/libnotify_print.h

Single file: /Single Files/libewf-20110610/libnotify/libnotify_stream.c

Single file: /Single Files/libewf-20110610/libnotify/libnotify_stream.h

Single file: /Single Files/libewf-20110610/libnotify/Makefile.am

Single file: /Single Files/libewf-20110610/libnotify/Makefile.in

Single file: /Single Files/libewf-20110610/libodraw/libodraw_array_type.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_array_type.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_codepage.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_parser.y

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_scanner.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_cue_scanner.l

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file_descriptor.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_data_file_descriptor.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_debug.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_debug.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_definitions.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_error.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_error.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_extern.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_handle.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_handle.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_io_handle.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_io_handle.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libbfio.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libfvalue.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_libuna.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_metadata.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_metadata.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_notify.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_notify.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_sector_range.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_sector_range.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_support.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_support.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_track_value.c

Single file: /Single Files/libewf-20110610/libodraw/libodraw_track_value.h

Single file: /Single Files/libewf-20110610/libodraw/libodraw_types.h

Single file: /Single Files/libewf-20110610/libodraw/Makefile.am

Single file: /Single Files/libewf-20110610/libodraw/Makefile.in

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_ata.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_ata.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_codepage.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_definitions.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error_string.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_error_string.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_extern.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_handle.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_handle.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_legacy.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_legacy.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_libuna.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_list_type.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_list_type.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_metadata.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_metadata.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_notify.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_notify.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_offset_list.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_offset_list.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_optical_disk.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_optical_disk.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_scsi.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_scsi.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_sector_list.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_sector_list.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_string.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_string.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_support.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_support.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_types.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_unused.h

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_usb.c

Single file: /Single Files/libewf-20110610/libsmdev/libsmdev_usb.h

Single file: /Single Files/libewf-20110610/libsmdev/Makefile.am

Single file: /Single Files/libewf-20110610/libsmdev/Makefile.in

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_codepage.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_definitions.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_error.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_error.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_extern.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_filename.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_filename.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_handle.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_handle.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_information_file.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_information_file.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_legacy.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_legacy.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libbfio.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libfvalue.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libmfdata.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_libuna.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_metadata.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_metadata.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_notify.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_notify.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_support.c

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_support.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_types.h

Single file: /Single Files/libewf-20110610/libsmraw/libsmraw_unused.h

Single file: /Single Files/libewf-20110610/libsmraw/Makefile.am

Single file: /Single Files/libewf-20110610/libsmraw/Makefile.in

Single file: /Single Files/libewf-20110610/libsystem/libsystem.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_date_time.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_date_time.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_directory.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_directory_io.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_error_string.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_error_string.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file_io.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_file_stream.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_find.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_getopt.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_getopt.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_glob.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_glob.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_i18n.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_libuna.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_notify.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_notify.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_path.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_path.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_signal.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_signal.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_split_values.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_split_values.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_string.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_string.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_support.c

Single file: /Single Files/libewf-20110610/libsystem/libsystem_support.h

Single file: /Single Files/libewf-20110610/libsystem/libsystem_unused.h

Single file: /Single Files/libewf-20110610/libsystem/Makefile.am

Single file: /Single Files/libewf-20110610/libsystem/Makefile.in

Single file: /Single Files/libewf-20110610/libuna/libuna_base16_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_base16_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_base64url_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_base64url_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_base64_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_base64_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_byte_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_byte_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_ascii.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_1.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_10.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_10.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_11.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_13.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_13.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_14.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_14.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_15.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_15.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_16.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_16.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_2.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_2.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_3.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_3.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_4.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_4.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_5.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_5.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_6.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_6.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_7.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_7.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_8.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_8.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_9.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_iso_8859_9.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_r.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_r.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_u.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_koi8_u.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1250.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1250.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1251.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1251.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1252.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1252.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1253.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1253.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1254.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1254.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1255.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1255.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1256.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1256.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1257.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1257.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1258.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_1258.h

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_874.c

Single file: /Single Files/libewf-20110610/libuna/libuna_codepage_windows_874.h

Single file: /Single Files/libewf-20110610/libuna/libuna_definitions.h

Single file: /Single Files/libewf-20110610/libuna/libuna_error.h

Single file: /Single Files/libewf-20110610/libuna/libuna_extern.h

Single file: /Single Files/libewf-20110610/libuna/libuna_inline.h

Single file: /Single Files/libewf-20110610/libuna/libuna_support.c

Single file: /Single Files/libewf-20110610/libuna/libuna_support.h

Single file: /Single Files/libewf-20110610/libuna/libuna_types.h

Single file: /Single Files/libewf-20110610/libuna/libuna_unicode_character.c

Single file: /Single Files/libewf-20110610/libuna/libuna_unicode_character.h

Single file: /Single Files/libewf-20110610/libuna/libuna_unused.h

Single file: /Single Files/libewf-20110610/libuna/libuna_url_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_url_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_string.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf16_string.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_string.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf32_string.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf7_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf7_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_stream.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_stream.h

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_string.c

Single file: /Single Files/libewf-20110610/libuna/libuna_utf8_string.h

Single file: /Single Files/libewf-20110610/libuna/Makefile.am

Single file: /Single Files/libewf-20110610/libuna/Makefile.in

Single file: /Single Files/libewf-20110610/ltmain.sh

Single file: /Single Files/libewf-20110610/m4/gettext.m4

Single file: /Single Files/libewf-20110610/m4/iconv.m4

Single file: /Single Files/libewf-20110610/m4/lib-ld.m4

Single file: /Single Files/libewf-20110610/m4/lib-link.m4

Single file: /Single Files/libewf-20110610/m4/lib-prefix.m4

Single file: /Single Files/libewf-20110610/m4/libtool.m4

Single file: /Single Files/libewf-20110610/m4/ltoptions.m4

Single file: /Single Files/libewf-20110610/m4/ltsugar.m4

Single file: /Single Files/libewf-20110610/m4/ltversion.m4

Single file: /Single Files/libewf-20110610/m4/lt_obsolete.m4

Single file: /Single Files/libewf-20110610/m4/nls.m4

Single file: /Single Files/libewf-20110610/m4/po.m4

Single file: /Single Files/libewf-20110610/m4/progtest.m4

Single file: /Single Files/libewf-20110610/macosx/Introduction.rtf

Single file: /Single Files/libewf-20110610/macosx/Introduction.rtf.in

Single file: /Single Files/libewf-20110610/macosx/libewf.pmproj

Single file: /Single Files/libewf-20110610/macosx/License.rtf

Single file: /Single Files/libewf-20110610/macosx/Makefile.am

Single file: /Single Files/libewf-20110610/macosx/Makefile.in

Single file: /Single Files/libewf-20110610/macosx/Readme.rtf

Single file: /Single Files/libewf-20110610/Makefile.am

Single file: /Single Files/libewf-20110610/Makefile.in

Single file: /Single Files/libewf-20110610/manuals/ewfacquire.1

Single file: /Single Files/libewf-20110610/manuals/ewfacquirestream.1

Single file: /Single Files/libewf-20110610/manuals/ewfexport.1

Single file: /Single Files/libewf-20110610/manuals/ewfinfo.1

Single file: /Single Files/libewf-20110610/manuals/ewfverify.1

Single file: /Single Files/libewf-20110610/manuals/libewf.3

Single file: /Single Files/libewf-20110610/manuals/Makefile.am

Single file: /Single Files/libewf-20110610/manuals/Makefile.in

Single file: /Single Files/libewf-20110610/missing

Single file: /Single Files/libewf-20110610/msvscpp/ewf.net/ewf.net_dll.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfacquire/ewfacquire.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfacquirestream/ewfacquirestream.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfexport/ewfexport.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfinfo/ewfinfo.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/ewfverify/ewfverify.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libbfio/libbfio.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libcstring/libcstring.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/liberror/liberror.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libewf.sln

Single file: /Single Files/libewf-20110610/msvscpp/libewf_dll/libewf_dll.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libfvalue/libfvalue.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libmfdata/libmfdata.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libnotify/libnotify.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libodraw/libodraw.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libsmdev/libsmdev.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libsmraw/libsmraw.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libsystem/libsystem.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/libuna/libuna.vcproj

Single file: /Single Files/libewf-20110610/msvscpp/Makefile.am

Single file: /Single Files/libewf-20110610/msvscpp/Makefile.in

Single file: /Single Files/libewf-20110610/msvscpp/zlib_dll/zlib_dll.vcproj

Single file: /Single Files/libewf-20110610/NEWS

Single file: /Single Files/libewf-20110610/po/boldquot.sed

Single file: /Single Files/libewf-20110610/po/ChangeLog

Single file: /Single Files/libewf-20110610/po/en_boldquot.header

Single file: /Single Files/libewf-20110610/po/en_quot.header

Single file: /Single Files/libewf-20110610/po/insert-header.sin

Single file: /Single Files/libewf-20110610/po/Makefile.in.in

Single file: /Single Files/libewf-20110610/po/Makevars

Single file: /Single Files/libewf-20110610/po/Makevars.in

Single file: /Single Files/libewf-20110610/po/POTFILES.in

Single file: /Single Files/libewf-20110610/po/quot.sed

Single file: /Single Files/libewf-20110610/po/remove-potcdate.sin

Single file: /Single Files/libewf-20110610/po/Rules-quot

Single file: /Single Files/libewf-20110610/pyewf/Makefile.am

Single file: /Single Files/libewf-20110610/pyewf/Makefile.in

Single file: /Single Files/libewf-20110610/pyewf/pyewf.c

Single file: /Single Files/libewf-20110610/pyewf/pyewf.h

Single file: /Single Files/libewf-20110610/pyewf/pyewf_handle.c

Single file: /Single Files/libewf-20110610/pyewf/pyewf_handle.h

Single file: /Single Files/libewf-20110610/pyewf/pyewf_metadata.c

Single file: /Single Files/libewf-20110610/pyewf/pyewf_metadata.h

Single file: /Single Files/libewf-20110610/pyewf/pyewf_python.h

Single file: /Single Files/libewf-20110610/README

Single file: /Single Files/libewf-20110610/README.mingw

Single file: /Single Files/libewf-20110610/README.static

Single file: /Single Files/libewf-20110610/tests/ewf_test_definitions.h

Single file: /Single Files/libewf-20110610/tests/ewf_test_glob.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_read.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_read_write.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_read_write_delta.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_seek.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_truncate.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_write.c

Single file: /Single Files/libewf-20110610/tests/ewf_test_write_chunk.c

Single file: /Single Files/libewf-20110610/tests/Makefile.am

Single file: /Single Files/libewf-20110610/tests/Makefile.in

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfacquirestream.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire_optical.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfacquire_resume.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfexport.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfexport_logical.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfinfo.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfverify.sh

Single file: /Single Files/libewf-20110610/tests/test_ewfverify_logical.sh

Single file: /Single Files/libewf-20110610/tests/test_glob.sh

Single file: /Single Files/libewf-20110610/tests/test_pyewf.sh

Single file: /Single Files/libewf-20110610/tests/test_read.sh

Single file: /Single Files/libewf-20110610/tests/test_read_write.sh

Single file: /Single Files/libewf-20110610/tests/test_read_write_delta.sh

Single file: /Single Files/libewf-20110610/tests/test_seek.sh

Single file: /Single Files/libewf-20110610/tests/test_write.sh

Single file: /Single Files/libewf-20110610/ylwrap

ewfexport: SUCCESS
Testing unattended ewfexport to files of input: input_logical/lvf_test.L01  (PASS)
ewfexport 20111031


Single file: /.fseventsd/fseventsd-uuid

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/tmp.SnowLeopard

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/indexState

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexHead

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPostings

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexTermIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPositions

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexPositionTable

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexCompactDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexArrays

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.indexUpdates

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/store.db

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/.store.db

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalLive

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalExclusion

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/journalSync

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.shadowIndexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexHead

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexTermIds

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexPositionTable

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexArrays

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexCompactDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/live.0.shadowIndexGroups

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/store.updates

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexPostings

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexPositions

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexCompactDirectory

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexArrays

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.shadowIndexHead

Single file: /.Spotlight-V100/Store-V1/Stores/7272150E-100F-4B07-B2E1-38D220509021/0.indexHead

Single file: /.Spotlight-V100/Store-V1/VolumeConfig.plist

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml

Single file: /Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.key

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.numbers

Single file: /Alpha/Beta/Gamma/Delta/Sample.2009.pages

Single file: /Epsilon/Digamma/09_02_2011.pages

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.key

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.numbers

Single file: /Lambda/Alpha/Beta/Gamma/Delta/Sample.2009.pages

Single file: /Lambda/Epsilon/Digamma/09_02_2011.pages

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/Contents/PkgInfo

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/addressonly.png

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/index.xml

Single file: /Lambda/Pi/Koppa/01_02_2003.pages/index.xml.gz

Single file: /Lambda/Pi/Koppa/Omega/Bender © Rodriguez.numbers

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/addressonly.png

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/index.xml

Single file: /Lambda/Pi/Koppa/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Pi/Koppa/09_02_2011.pages

Single file: /Lambda/Pi/Koppa/09_09_2009.key

Single file: /Lambda/Pi/Koppa/Sample.2009.key

Single file: /Lambda/Pi/Koppa/Sample.2009.numbers

Single file: /Lambda/Pi/Koppa/Sample.2009.pages

Single file: /Lambda/Zeta/Eta/Theta/Iota/Sample.2009.key

Single file: /Lambda/Zeta/Eta/Theta/Iota/Sample.2009.numbers

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml

Single file: /Lambda/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Zeta/Eta/Theta/Kappa/09_02_2011.pages

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/09_02_2011.pages

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz

Single file: /Lambda/Zeta/Eta/Theta/Lambda/09_02_2011.pages

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2009.key

Single file: /Lambda/Zeta/Eta/Theta/Lambda/Sample.2009.numbers

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/addressonly.png

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2005.pages/index.xml.gz

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.key

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.numbers

Single file: /Omega/Alpha/Beta/Gamma/Delta/Sample.2009.pages

Single file: /Omega/Epsilon/Digamma/09_02_2011.pages

Single file: /Omega/Pi/Koppa/01_02_2003.pages/Contents/PkgInfo

Single file: /Omega/Pi/Koppa/01_02_2003.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Pi/Koppa/01_02_2003.pages/addressonly.png

Single file: /Omega/Pi/Koppa/01_02_2003.pages/index.xml

Single file: /Omega/Pi/Koppa/01_02_2003.pages/index.xml.gz

Single file: /Omega/Pi/Koppa/Omega/Bender © Rodriguez.numbers

Single file: /Omega/Pi/Koppa/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Pi/Koppa/Sample.2005.pages/addressonly.png

Single file: /Omega/Pi/Koppa/Sample.2005.pages/index.xml

Single file: /Omega/Pi/Koppa/Sample.2005.pages/index.xml.gz

Single file: /Omega/Pi/Koppa/09_02_2011.pages

Single file: /Omega/Pi/Koppa/09_09_2009.key

Single file: /Omega/Pi/Koppa/Sample.2009.key

Single file: /Omega/Pi/Koppa/Sample.2009.numbers

Single file: /Omega/Pi/Koppa/Sample.2009.pages

Single file: /Omega/Zeta/Eta/Theta/Iota/Sample.2009.key

Single file: /Omega/Zeta/Eta/Theta/Iota/Sample.2009.numbers

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml

Single file: /Omega/Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz

Single file: /Omega/Zeta/Eta/Theta/Kappa/09_02_2011.pages

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/09_02_2011.pages

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers

Single file: /Omega/Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz

Single file: /Omega/Zeta/Eta/Theta/Lambda/09_02_2011.pages

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2009.key

Single file: /Omega/Zeta/Eta/Theta/Lambda/Sample.2009.numbers

Single file: /Pi/Koppa/01_02_2003.pages/Contents/PkgInfo

Single file: /Pi/Koppa/01_02_2003.pages/thumbs/page_thumb_1-8.tiff

Single file: /Pi/Koppa/01_02_2003.pages/addressonly.png

Single file: /Pi/Koppa/01_02_2003.pages/index.xml

Single file: /Pi/Koppa/01_02_2003.pages/index.xml.gz

Single file: /Pi/Koppa/Omega/Bender © Rodriguez.numbers

Single file: /Pi/Koppa/Sample.2005.pages/Contents/PkgInfo

Single file: /Pi/Koppa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Pi/Koppa/Sample.2005.pages/addressonly.png

Single file: /Pi/Koppa/Sample.2005.pages/index.xml

Single file: /Pi/Koppa/Sample.2005.pages/index.xml.gz

Single file: /Pi/Koppa/09_02_2011.pages

Single file: /Pi/Koppa/09_09_2009.key

Single file: /Pi/Koppa/Sample.2009.key

Single file: /Pi/Koppa/Sample.2009.numbers

Single file: /Pi/Koppa/Sample.2009.pages

Single file: /Zeta/Eta/Theta/Iota/Sample.2009.key

Single file: /Zeta/Eta/Theta/Iota/Sample.2009.numbers

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/Contents/PkgInfo

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/addressonly.png

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml

Single file: /Zeta/Eta/Theta/Kappa/Sample.2005.pages/index.xml.gz

Single file: /Zeta/Eta/Theta/Kappa/09_02_2011.pages

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/Contents/PkgInfo

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/addressonly.png

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2005.pages/index.xml.gz

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/09_02_2011.pages

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.key

Single file: /Zeta/Eta/Theta/Lambda/Mu/Ni/Sample.2009.numbers

Single file: /Zeta/Eta/Theta/Lambda/Mu/Xi/Omicron/Persei/8/toxicoow-lrrr-18366.png

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/Contents/PkgInfo

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/thumbs/page_thumb_1-8.tiff

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/addressonly.png

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml

Single file: /Zeta/Eta/Theta/Lambda/Sample.2005.pages/index.xml.gz

Single file: /Zeta/Eta/Theta/Lambda/09_02_2011.pages

Single file: /Zeta/Eta/Theta/Lambda/Sample.2009.key

Single file: /Zeta/Eta/Theta/Lambda/Sample.2009.numbers

Single file: /.DS_Store

ewfexport: SUCCESS
Testing unattended ewfexport to files of input: input_logical/MacOS.L01  (PASS)
ewfexport 20111031


Single file: /c/temp/test/temp/GOA PSY TRANCE live_Montain Switzerland CD 2 dj BILO [[[[09.06.2005]]]].MP3

Single file: /c/temp/test/temp/I Love Techno 2003 Cristian Varela Marco Bailey Dave Clarke Dj Rush Luke Slater Scan X Speedy J Sven Vath By Ramirez.mp3

Single file: /c/temp/test/temp/Itzaia _ Session At Skipub Andorra - Carlcox - Marco Bailey - Mistress Barbara - Ben Sims - Pet Duo - Dj Rush - Marco Carola - Cristian Varela wWw.TorrentMas.CoM by AllRoad.mp3

Single file: /c/temp/test/temp/Party Mix - Mayday 2004 Marco Bailey, Speedy J, Chris Liebing, Umek Live_Hungexpo, Hungary 2004-04-03.mp3

ewfexport: SUCCESS
Testing unattended ewfexport to files of input: input_logical/name.L01  (PASS)
ewfexport 20111031


Single file: /LEF/03-27-08 Computer Forensics.ppt

Single file: /LEF/04-28-2010 2101 DFernandezII (full).pdf

Single file: /LEF/DR FIX1.jpg

Single file: /LEF/Clusterview.jpg

Single file: /LEF/potterdemo.jpg

ewfexport: SUCCESS
Testing unattended ewfexport to files of input: input_logical/TestLEFile.L01  (PASS)
PASS: test_ewfexport_logical.sh
===================
All 15 tests passed
===================
make[2]: Leaving directory `/home/lordyesta/Projects/libewf/tests'
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/tests'
Making check in examples
make[1]: Entering directory `/home/lordyesta/Projects/libewf/examples'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/examples'
Making check in macosx
make[1]: Entering directory `/home/lordyesta/Projects/libewf/macosx'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/macosx'
Making check in borlandc
make[1]: Entering directory `/home/lordyesta/Projects/libewf/borlandc'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/borlandc'
Making check in msvscpp
make[1]: Entering directory `/home/lordyesta/Projects/libewf/msvscpp'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf/msvscpp'
make[1]: Entering directory `/home/lordyesta/Projects/libewf'
make[1]: Nothing to be done for `check-am'.
make[1]: Leaving directory `/home/lordyesta/Projects/libewf'
